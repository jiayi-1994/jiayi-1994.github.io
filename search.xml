<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Istio灰度发布</title>
      <link href="/kubernetes/istio-hui-du-fa-bu.html"/>
      <url>/kubernetes/istio-hui-du-fa-bu.html</url>
      
        <content type="html"><![CDATA[<h1 id="Istio详细使用-灰度发布"><a href="#Istio详细使用-灰度发布" class="headerlink" title="Istio详细使用-灰度发布"></a>Istio详细使用-灰度发布</h1><h2 id="蓝绿部署"><a href="#蓝绿部署" class="headerlink" title="蓝绿部署"></a>蓝绿部署</h2><img src="/kubernetes/istio-hui-du-fa-bu/blue-green-deployment-17013143486183.png" class="" title="img"><p>所谓蓝绿部署是指在你的生产环境中同时有两套完全一致的应用，基于一套正在服务于线上环境，所有的请求都打到该环境中，当你的应用版本需要更新的时候，你直接在另外一套系统中部署新的版本，然后把流量切换到新的版本中。</p><p>蓝绿部署优缺点：</p><ul><li><p>优点</p><p>你可以随意地去安装「备份的那一套环境」，而不需要动线上的环境，这样的话即使出错也没影响。同时因为有两套环境的存在，你也可以及时地进行回滚操作。</p></li><li><p>缺点</p><p>因为有两套环境的存在它的成本稍微有点高</p></li></ul><h2 id="灰度发布（金丝雀发布）"><a href="#灰度发布（金丝雀发布）" class="headerlink" title="灰度发布（金丝雀发布）"></a>灰度发布（金丝雀发布）</h2><p>灰度发布（又名金丝雀发布）可以用来实现业务从老版本到新版本的平滑过渡，并避免升级过程中出现的问题对用户造成的影响。</p><p>金丝雀发布”的来源于矿工们用金丝雀对矿井进行空气测试的做法。以前矿工挖煤的时候，矿工下矿井前会先把金丝雀放进去，或者挖煤的时候一直带着金丝雀。金丝雀对甲烷和一氧化碳浓度比较敏感，会先报警。所以大家都用“金丝雀”来搞最先的测试。</p><p>下图中，左下方的少部分用户就被当作“金丝雀”来用于测试新上线的1.1版本。如果新版本出现问题，“金丝雀”们会报警，但不会影响其他用户业务的正常运行。</p><img src="/kubernetes/istio-hui-du-fa-bu/6a3v7pnw8y-17013145291667-17013145308419.png" class="" title="img"><p>灰度发布（金丝雀发布）的流程如下：</p><ul><li>准备和生产环境隔离的“金丝雀”服务器上。</li><li>将新版本的服务部署到“金丝雀”服务器上。</li><li>对“金丝雀”服务器上的服务进行自动化和人工测试。</li><li>测试通过后，将“金丝雀”服务器连接到生产环境，将少量生产流量导入到“金丝雀”服务器中。</li><li>如果在线测试出现问题，则通过把生产流量从“金丝雀”服务器中重新路由到老版本的服务的方式进行回退，修复问题后重新进行发布。</li><li>如果在线测试顺利，则逐渐把生产流量按一定策略逐渐导入到新版本服务器中。</li><li>待新版本服务稳定运行后，删除老版本服务。</li></ul><h3 id="Istio实现灰度发布-金丝雀发布-的操作步骤"><a href="#Istio实现灰度发布-金丝雀发布-的操作步骤" class="headerlink" title="Istio实现灰度发布(金丝雀发布)的操作步骤"></a><strong>Istio实现灰度发布(金丝雀发布)的操作步骤</strong></h3><h4 id="1-环境安装"><a href="#1-环境安装" class="headerlink" title="1.环境安装"></a>1.环境安装</h4><p>参考Istio官网<a href="https://istio.io/latest/zh/docs/setup/install/helm/">使用 Helm 安装</a>搭建Istio环境</p><h4 id="2-部署V1、V2版本服务"><a href="#2-部署V1、V2版本服务" class="headerlink" title="2.部署V1、V2版本服务"></a>2.部署V1、V2版本服务</h4><img src="/kubernetes/istio-hui-du-fa-bu/BookInfo_hu8ce595f57fff2b561d7a88a38ce91471_44081_448c0ab189ba41dceb48b0c8ca0131a0.webp" class="" title="BookInfo"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Copyright Istio Authors</span><span class="token comment">#</span><span class="token comment">#   Licensed under the Apache License, Version 2.0 (the "License");</span><span class="token comment">#   you may not use this file except in compliance with the License.</span><span class="token comment">#   You may obtain a copy of the License at</span><span class="token comment">#</span><span class="token comment">#       http://www.apache.org/licenses/LICENSE-2.0</span><span class="token comment">#</span><span class="token comment">#   Unless required by applicable law or agreed to in writing, software</span><span class="token comment">#   distributed under the License is distributed on an "AS IS" BASIS,</span><span class="token comment">#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><span class="token comment">#   See the License for the specific language governing permissions and</span><span class="token comment">#   limitations under the License.</span><span class="token comment">##################################################################################################</span><span class="token comment"># This file defines the services, service accounts, and deployments for the Bookinfo sample.</span><span class="token comment">#</span><span class="token comment"># To apply all 4 Bookinfo services, their corresponding service accounts, and deployments:</span><span class="token comment">#</span><span class="token comment">#   kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml</span><span class="token comment">#</span><span class="token comment"># Alternatively, you can deploy any resource separately:</span><span class="token comment">#</span><span class="token comment">#   kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml -l service=reviews # reviews Service</span><span class="token comment">#   kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml -l account=reviews # reviews ServiceAccount</span><span class="token comment">#   kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml -l app=reviews,version=v3 # reviews-v3 Deployment</span><span class="token comment">##################################################################################################</span><span class="token comment">##################################################################################################</span><span class="token comment"># Details service</span><span class="token comment">##################################################################################################</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> details  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> details    <span class="token key atrule">service</span><span class="token punctuation">:</span> details<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">ports</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9080</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> http  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> details<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> bookinfo<span class="token punctuation">-</span>details  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">account</span><span class="token punctuation">:</span> details<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> details<span class="token punctuation">-</span>v1  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> details    <span class="token key atrule">version</span><span class="token punctuation">:</span> v1<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> details      <span class="token key atrule">version</span><span class="token punctuation">:</span> v1  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> details        <span class="token key atrule">version</span><span class="token punctuation">:</span> v1    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> bookinfo<span class="token punctuation">-</span>details      <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> details        <span class="token key atrule">image</span><span class="token punctuation">:</span> docker.io/istio/examples<span class="token punctuation">-</span>bookinfo<span class="token punctuation">-</span>details<span class="token punctuation">-</span>v1<span class="token punctuation">:</span>1.18.0        <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent        <span class="token key atrule">ports</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">9080</span><span class="token punctuation">---</span><span class="token comment">##################################################################################################</span><span class="token comment"># Ratings service</span><span class="token comment">##################################################################################################</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ratings  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> ratings    <span class="token key atrule">service</span><span class="token punctuation">:</span> ratings<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">ports</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9080</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> http  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> ratings<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> bookinfo<span class="token punctuation">-</span>ratings  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">account</span><span class="token punctuation">:</span> ratings<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ratings<span class="token punctuation">-</span>v1  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> ratings    <span class="token key atrule">version</span><span class="token punctuation">:</span> v1<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> ratings      <span class="token key atrule">version</span><span class="token punctuation">:</span> v1  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> ratings        <span class="token key atrule">version</span><span class="token punctuation">:</span> v1    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> bookinfo<span class="token punctuation">-</span>ratings      <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> ratings        <span class="token key atrule">image</span><span class="token punctuation">:</span> docker.io/istio/examples<span class="token punctuation">-</span>bookinfo<span class="token punctuation">-</span>ratings<span class="token punctuation">-</span>v1<span class="token punctuation">:</span>1.18.0        <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent        <span class="token key atrule">ports</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">9080</span><span class="token punctuation">---</span><span class="token comment">##################################################################################################</span><span class="token comment"># Reviews service</span><span class="token comment">##################################################################################################</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> reviews  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> reviews    <span class="token key atrule">service</span><span class="token punctuation">:</span> reviews<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">ports</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9080</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> http  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> reviews<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> bookinfo<span class="token punctuation">-</span>reviews  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">account</span><span class="token punctuation">:</span> reviews<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> reviews<span class="token punctuation">-</span>v1  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> reviews    <span class="token key atrule">version</span><span class="token punctuation">:</span> v1<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> reviews      <span class="token key atrule">version</span><span class="token punctuation">:</span> v1  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> reviews        <span class="token key atrule">version</span><span class="token punctuation">:</span> v1    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> bookinfo<span class="token punctuation">-</span>reviews      <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> reviews        <span class="token key atrule">image</span><span class="token punctuation">:</span> docker.io/istio/examples<span class="token punctuation">-</span>bookinfo<span class="token punctuation">-</span>reviews<span class="token punctuation">-</span>v1<span class="token punctuation">:</span>1.18.0        <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent        <span class="token key atrule">env</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> LOG_DIR          <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">"/tmp/logs"</span>        <span class="token key atrule">ports</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">9080</span>        <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> tmp          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /tmp        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> wlp<span class="token punctuation">-</span>output          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /opt/ibm/wlp/output      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> wlp<span class="token punctuation">-</span>output        <span class="token key atrule">emptyDir</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> tmp        <span class="token key atrule">emptyDir</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> reviews<span class="token punctuation">-</span>v2  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> reviews    <span class="token key atrule">version</span><span class="token punctuation">:</span> v2<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> reviews      <span class="token key atrule">version</span><span class="token punctuation">:</span> v2  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> reviews        <span class="token key atrule">version</span><span class="token punctuation">:</span> v2    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> bookinfo<span class="token punctuation">-</span>reviews      <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> reviews        <span class="token key atrule">image</span><span class="token punctuation">:</span> docker.io/istio/examples<span class="token punctuation">-</span>bookinfo<span class="token punctuation">-</span>reviews<span class="token punctuation">-</span>v2<span class="token punctuation">:</span>1.18.0        <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent        <span class="token key atrule">env</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> LOG_DIR          <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">"/tmp/logs"</span>        <span class="token key atrule">ports</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">9080</span>        <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> tmp          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /tmp        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> wlp<span class="token punctuation">-</span>output          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /opt/ibm/wlp/output      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> wlp<span class="token punctuation">-</span>output        <span class="token key atrule">emptyDir</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> tmp        <span class="token key atrule">emptyDir</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> reviews<span class="token punctuation">-</span>v3  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> reviews    <span class="token key atrule">version</span><span class="token punctuation">:</span> v3<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> reviews      <span class="token key atrule">version</span><span class="token punctuation">:</span> v3  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> reviews        <span class="token key atrule">version</span><span class="token punctuation">:</span> v3    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> bookinfo<span class="token punctuation">-</span>reviews      <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> reviews        <span class="token key atrule">image</span><span class="token punctuation">:</span> docker.io/istio/examples<span class="token punctuation">-</span>bookinfo<span class="token punctuation">-</span>reviews<span class="token punctuation">-</span>v3<span class="token punctuation">:</span>1.18.0        <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent        <span class="token key atrule">env</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> LOG_DIR          <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">"/tmp/logs"</span>        <span class="token key atrule">ports</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">9080</span>        <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> tmp          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /tmp        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> wlp<span class="token punctuation">-</span>output          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /opt/ibm/wlp/output      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> wlp<span class="token punctuation">-</span>output        <span class="token key atrule">emptyDir</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> tmp        <span class="token key atrule">emptyDir</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">---</span><span class="token comment">##################################################################################################</span><span class="token comment"># Productpage services</span><span class="token comment">##################################################################################################</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> productpage  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> productpage    <span class="token key atrule">service</span><span class="token punctuation">:</span> productpage<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">ports</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9080</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> http  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> productpage<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> bookinfo<span class="token punctuation">-</span>productpage  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">account</span><span class="token punctuation">:</span> productpage<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> productpage<span class="token punctuation">-</span>v1  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> productpage    <span class="token key atrule">version</span><span class="token punctuation">:</span> v1<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> productpage      <span class="token key atrule">version</span><span class="token punctuation">:</span> v1  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">annotations</span><span class="token punctuation">:</span>        <span class="token key atrule">prometheus.io/scrape</span><span class="token punctuation">:</span> <span class="token string">"true"</span>        <span class="token key atrule">prometheus.io/port</span><span class="token punctuation">:</span> <span class="token string">"9080"</span>        <span class="token key atrule">prometheus.io/path</span><span class="token punctuation">:</span> <span class="token string">"/metrics"</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> productpage        <span class="token key atrule">version</span><span class="token punctuation">:</span> v1    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> bookinfo<span class="token punctuation">-</span>productpage      <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> productpage        <span class="token key atrule">image</span><span class="token punctuation">:</span> docker.io/istio/examples<span class="token punctuation">-</span>bookinfo<span class="token punctuation">-</span>productpage<span class="token punctuation">-</span>v1<span class="token punctuation">:</span>1.18.0        <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent        <span class="token key atrule">ports</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">9080</span>        <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> tmp          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /tmp      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> tmp        <span class="token key atrule">emptyDir</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-配置virtual-service和网关服务"><a href="#3-配置virtual-service和网关服务" class="headerlink" title="3.配置virtual-service和网关服务"></a>3.配置virtual-service和网关服务</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Gateway<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> bookinfo<span class="token punctuation">-</span>gateway<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token comment"># The selector matches the ingress gateway pod labels.</span>  <span class="token comment"># If you installed Istio using Helm following the standard documentation, this would be "istio=ingress"</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">istio</span><span class="token punctuation">:</span> ingress <span class="token comment"># use istio default controller</span>  <span class="token key atrule">servers</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">port</span><span class="token punctuation">:</span>      <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token number">80</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> http      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> HTTP    <span class="token key atrule">hosts</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token string">"*"</span><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> bookinfo<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token string">"*"</span>  <span class="token key atrule">gateways</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> bookinfo<span class="token punctuation">-</span>gateway  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">match</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">uri</span><span class="token punctuation">:</span>        <span class="token key atrule">exact</span><span class="token punctuation">:</span> /productpage    <span class="token punctuation">-</span> <span class="token key atrule">uri</span><span class="token punctuation">:</span>        <span class="token key atrule">prefix</span><span class="token punctuation">:</span> /static    <span class="token punctuation">-</span> <span class="token key atrule">uri</span><span class="token punctuation">:</span>        <span class="token key atrule">exact</span><span class="token punctuation">:</span> /login    <span class="token punctuation">-</span> <span class="token key atrule">uri</span><span class="token punctuation">:</span>        <span class="token key atrule">exact</span><span class="token punctuation">:</span> /logout    <span class="token punctuation">-</span> <span class="token key atrule">uri</span><span class="token punctuation">:</span>        <span class="token key atrule">prefix</span><span class="token punctuation">:</span> /api/v1/products    <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> productpage        <span class="token key atrule">port</span><span class="token punctuation">:</span>          <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token number">9080</span><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> productpage<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> productpage  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> productpage        <span class="token key atrule">subset</span><span class="token punctuation">:</span> v1<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> reviews<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> reviews  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> reviews        <span class="token key atrule">subset</span><span class="token punctuation">:</span> v1<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ratings<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> ratings  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> ratings        <span class="token key atrule">subset</span><span class="token punctuation">:</span> v1<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> details<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> details  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> details        <span class="token key atrule">subset</span><span class="token punctuation">:</span> v1<span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-配置destination-rule服务"><a href="#4-配置destination-rule服务" class="headerlink" title="4.配置destination-rule服务"></a>4.配置destination-rule服务</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> DestinationRule<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> productpage<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">host</span><span class="token punctuation">:</span> productpage  <span class="token key atrule">subsets</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> v1    <span class="token key atrule">labels</span><span class="token punctuation">:</span>      <span class="token key atrule">version</span><span class="token punctuation">:</span> v1<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> DestinationRule<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> reviews<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">host</span><span class="token punctuation">:</span> reviews  <span class="token key atrule">subsets</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> v1    <span class="token key atrule">labels</span><span class="token punctuation">:</span>      <span class="token key atrule">version</span><span class="token punctuation">:</span> v1  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> v2    <span class="token key atrule">labels</span><span class="token punctuation">:</span>      <span class="token key atrule">version</span><span class="token punctuation">:</span> v2  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> v3    <span class="token key atrule">labels</span><span class="token punctuation">:</span>      <span class="token key atrule">version</span><span class="token punctuation">:</span> v3<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> DestinationRule<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ratings<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">host</span><span class="token punctuation">:</span> ratings  <span class="token key atrule">subsets</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> v1    <span class="token key atrule">labels</span><span class="token punctuation">:</span>      <span class="token key atrule">version</span><span class="token punctuation">:</span> v1  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> v2    <span class="token key atrule">labels</span><span class="token punctuation">:</span>      <span class="token key atrule">version</span><span class="token punctuation">:</span> v2  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> v2<span class="token punctuation">-</span>mysql    <span class="token key atrule">labels</span><span class="token punctuation">:</span>      <span class="token key atrule">version</span><span class="token punctuation">:</span> v2<span class="token punctuation">-</span>mysql  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> v2<span class="token punctuation">-</span>mysql<span class="token punctuation">-</span>vm    <span class="token key atrule">labels</span><span class="token punctuation">:</span>      <span class="token key atrule">version</span><span class="token punctuation">:</span> v2<span class="token punctuation">-</span>mysql<span class="token punctuation">-</span>vm<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> DestinationRule<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> details<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">host</span><span class="token punctuation">:</span> details  <span class="token key atrule">subsets</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> v1    <span class="token key atrule">labels</span><span class="token punctuation">:</span>      <span class="token key atrule">version</span><span class="token punctuation">:</span> v1  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> v2    <span class="token key atrule">labels</span><span class="token punctuation">:</span>      <span class="token key atrule">version</span><span class="token punctuation">:</span> v2<span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此时系统中部署了V1和V2两个版本的reviews服务，但所有的业务流量都被规则reviews-default导向了V1，如下图所示：</p><img src="/kubernetes/istio-hui-du-fa-bu/resug2f9sd-170131536258817-170131536358019.png" class="" title="img"><p>多次刷新访问页面如下：</p><img src="/kubernetes/istio-hui-du-fa-bu/image-20231130113532597-170131533400411-170131533511313.png" class="" title="img"><h4 id="5-将测试流量导入到V2版本的reviews服务"><a href="#5-将测试流量导入到V2版本的reviews服务" class="headerlink" title="5.将测试流量导入到V2版本的reviews服务"></a>5.将测试流量导入到V2版本的reviews服务</h4><p>在进行模拟测试时，由于测试环境和生产环境的网络，服务器，操作系统等环境存在差异，很难完全模拟生产环境进行测试。为了减少环境因素的对测试结果的影响，我们希望能在生产环境中进行上线前的测试，但如果没有很好的隔离措施，可能会导致测试影响已上线的业务，对企业造成损失。</p><p>通过采用Istio的路由规则，可以在类生产环境中进行测试，又完全隔离了线上用户的生产流量和测试流量，最小化模拟测试对已上线业务的影响。如下图所示：</p><img src="/kubernetes/istio-hui-du-fa-bu/ago5fbszeu.png" class="" title="img"><p>创建一条规则，将用户名为 test-user 的流量导入到V2</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> reviews<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> reviews  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">match</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">headers</span><span class="token punctuation">:</span>        <span class="token key atrule">end-user</span><span class="token punctuation">:</span>          <span class="token key atrule">exact</span><span class="token punctuation">:</span> test<span class="token punctuation">-</span>user     <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> reviews        <span class="token key atrule">subset</span><span class="token punctuation">:</span> v2  <span class="token punctuation">-</span> <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> reviews        <span class="token key atrule">subset</span><span class="token punctuation">:</span> v1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果如下：</p><img src="/kubernetes/istio-hui-du-fa-bu/image-20231130114156147.png" class="" title="img"><img src="/kubernetes/istio-hui-du-fa-bu/image-20231130114305878.png" class="" title="img"><h4 id="6-将部分生产流量导入到V2版本的reviews服务"><a href="#6-将部分生产流量导入到V2版本的reviews服务" class="headerlink" title="6.将部分生产流量导入到V2版本的reviews服务"></a>6.将部分生产流量导入到V2版本的reviews服务</h4><p>在线上模拟测试完成后，如果系统测试情况良好，可以通过规则将一部分用户流量导入到V2版本的服务中，进行小规模的“金丝雀”测试。</p><p>修改规则将50%的流量导入V2版本</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> reviews<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> reviews  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">match</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">headers</span><span class="token punctuation">:</span>        <span class="token key atrule">end-user</span><span class="token punctuation">:</span>          <span class="token key atrule">exact</span><span class="token punctuation">:</span> jason    <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> reviews        <span class="token key atrule">subset</span><span class="token punctuation">:</span> v2  <span class="token punctuation">-</span> <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> reviews        <span class="token key atrule">subset</span><span class="token punctuation">:</span> v1      <span class="token key atrule">weight</span><span class="token punctuation">:</span> <span class="token number">50</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> reviews        <span class="token key atrule">subset</span><span class="token punctuation">:</span> v2      <span class="token key atrule">weight</span><span class="token punctuation">:</span> <span class="token number">50</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/kubernetes/istio-hui-du-fa-bu/00k3qldzcy.png" class="" title="img"><h4 id="7-将所有生产流量导入到到V2版本的reviews服务"><a href="#7-将所有生产流量导入到到V2版本的reviews服务" class="headerlink" title="7.将所有生产流量导入到到V2版本的reviews服务"></a>7.将所有生产流量导入到到V2版本的reviews服务</h4><p>如果新版本的服务运行正常，则可以将所有流量导入到V2版本。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> reviews<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> reviews  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> reviews        <span class="token key atrule">subset</span><span class="token punctuation">:</span> v2      <span class="token key atrule">weight</span><span class="token punctuation">:</span> <span class="token number">100</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/kubernetes/istio-hui-du-fa-bu/a8yzmyem8w.png" class="" title="img"><h4 id="8-删除V1版本的reviews服务"><a href="#8-删除V1版本的reviews服务" class="headerlink" title="8.删除V1版本的reviews服务"></a>8.删除V1版本的reviews服务</h4><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>[使用 Istio 实现灰度发布（金丝雀发布）]: <a href="https://cloud.tencent.com/developer/article/1613799">https://cloud.tencent.com/developer/article/1613799</a>“使用 Istio 实现灰度发布（金丝雀发布）”</p>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
          <category> istio </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> 服务网格 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubespray部署k8s-v1.27</title>
      <link href="/kubernetes/kubespray-bu-shu-k8s-v1-27.html"/>
      <url>/kubernetes/kubespray-bu-shu-k8s-v1-27.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、kubespray安装"><a href="#一、kubespray安装" class="headerlink" title="一、kubespray安装"></a>一、kubespray安装</h1><h2 id="1-0-免密，修改主机名，升级内核"><a href="#1-0-免密，修改主机名，升级内核" class="headerlink" title="1.0 免密，修改主机名，升级内核"></a>1.0 免密，修改主机名，升级内核</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> <span class="token operator">&gt;</span> mianmi.sh <span class="token operator">&lt;&lt;</span> <span class="token string">'eof'#!/bin/sh #定义K8S主机字典declare -A MASTERSMASTERS=( [k8s-master-01]="172.31.13.13" [k8s-master-02]="172.31.13.14" [k8s-master-03]="172.31.13.15") # 打印字典所有的key  ：echo ${!MASTERS[*]}# 打印字典所有的value：echo ${MASTERS[*]}   echo -e "\033[42;37m &gt;&gt;&gt; 免密登陆 &lt;&lt;&lt; \033[0m"yum -y install sshpass &amp;&gt;/dev/nullif [ -f ~/.ssh/id_dsa.pub ]then    for ip in ${MASTERS[*]}      do    echo -e "\033[33m $ip \033[0m"        sshpass -p "root" ssh-copy-id -i ~/.ssh/id_dsa.pub -p 22 -o StrictHostKeyChecking=no root@$ip &amp;&gt;/dev/null    ssh root@$ip "echo "$ip-ssh连接测试成功""    doneelse    ssh-keygen -t dsa -f ~/.ssh/id_dsa -P "" &amp;&gt;/dev/null for ip in ${MASTERS[*]}      do    echo -e "\033[33m $ip \033[0m"        sshpass -p "root" ssh-copy-id -i ~/.ssh/id_dsa.pub -p 22 -o StrictHostKeyChecking=no root@$ip &amp;&gt;/dev/null    ssh root@$ip "echo "$ip-ssh连接测试成功""    donefi    echo -e "\033[42;37m &gt;&gt;&gt; 修改主机名 &lt;&lt;&lt; \033[0m"for hostname in ${!MASTERS[*]}do    echo -e "\033[33m ${MASTERS[$hostname]} \033[0m"    ssh root@${MASTERS[$hostname]} "hostnamectl set-hostname $hostname  &amp;&amp; hostname"done echo -e "\033[42;37m &gt;&gt;&gt; 添加hosts解析 &lt;&lt;&lt; \033[0m"cat &gt;/etc/hosts&lt;&lt;EOF127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4::1         localhost localhost.localdomain localhost6 localhost6.localdomain6${MASTERS[k8s-master-01]} k8s-master-01${MASTERS[k8s-master-02]} k8s-master-02${MASTERS[k8s-master-03]} k8s-master-03EOFfor hostname in ${!MASTERS[*]}do    echo -e "\033[33m ${MASTERS[$hostname]} \033[0m"    scp /etc/hosts root@${MASTERS[$hostname]}:/etc/hostsdone echo -e "\033[42;37m &gt;&gt;&gt; 升级内核 &lt;&lt;&lt; \033[0m"for hostname in ${!MASTERS[*]}do    echo -e "\033[33m ${MASTERS[$hostname]} \033[0m"    ssh root@${MASTERS[$hostname]} "rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org &amp;&amp; rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm &amp;&amp; yum --enablerepo=elrepo-kernel install kernel-lt -y &amp;&amp; grub2-set-default  0 &amp;&amp; grub2-mkconfig -o /etc/grub2.cfg"    if [[ "$hostname" != "k8s-master-01" ]];then       ssh root@${MASTERS[$hostname]} "reboot"    fidonessh root@k8s-master-01 "reboot" eof</span> <span class="token comment"># 执行免密操作</span><span class="token function">bash</span> mianmi.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-1-kubespray节点python3准备-所有操作都在kubespray上"><a href="#1-1-kubespray节点python3准备-所有操作都在kubespray上" class="headerlink" title="1.1 kubespray节点python3准备(所有操作都在kubespray上)"></a>1.1 kubespray节点python3准备(所有操作都在kubespray上)</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> <span class="token parameter variable">-y</span> ncurses-devel gdbm-devel xz-devel sqlite-devel tk-devel uuid-devel readline-devel bzip2-devel libffi-devel <span class="token function">curl</span> <span class="token function">wget</span><span class="token function">curl</span> <span class="token parameter variable">-o</span> /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repoyum <span class="token function">install</span> <span class="token parameter variable">-y</span> openssl-devel openssl11 openssl11-developenssl11 version<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-2-安装python-3-10-4"><a href="#1-2-安装python-3-10-4" class="headerlink" title="1.2 安装python 3.10.4"></a>1.2 安装python 3.10.4</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://www.python.org/ftp/python/3.10.4/Python-3.10.4.tgz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>编译主要需要注意的问题是设置编译FLAG，以便使用最新的openssl库。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">CFLAGS</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>pkg-config <span class="token parameter variable">--cflags</span> openssl11<span class="token variable">)</span></span><span class="token builtin class-name">export</span> <span class="token assign-left variable">LDFLAGS</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>pkg-config <span class="token parameter variable">--libs</span> openssl11<span class="token variable">)</span></span><span class="token builtin class-name">echo</span> <span class="token variable">$CFLAGS</span><span class="token comment">#显示结果 -I/usr/include/openssl11</span><span class="token builtin class-name">echo</span> <span class="token variable">$LDFLAGS</span><span class="token comment">#显示结果  -L/usr/lib64/openssl11 -lssl -lcrypto</span><span class="token function">tar</span> xf Python-3.10.4.tgz<span class="token builtin class-name">cd</span> Python-3.10.4/./configure --enable-optimizations <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> altinstallpython3.10 <span class="token parameter variable">--version</span> <span class="token comment">#显示如下版本</span><span class="token comment">#Python 3.10.4</span>pip3.10 <span class="token parameter variable">--version</span> <span class="token comment">#显示如下版本</span><span class="token comment">#pip 22.0.4 from /usr/local/lib/python3.10/site-packages/pip (python 3.10)</span><span class="token function">ln</span> <span class="token parameter variable">-sf</span> /usr/local/bin/python3.10 /usr/bin/python3<span class="token function">ln</span> <span class="token parameter variable">-sf</span> /usr/local/bin/pip3.10  /usr/bin/pip3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-3-kubespray源文件获取"><a href="#1-3-kubespray源文件获取" class="headerlink" title="1.3 kubespray源文件获取"></a>1.3 kubespray源文件获取</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> <span class="token function">git</span> <span class="token parameter variable">-y</span><span class="token function">git</span> clone https://github.com/kubernetes-sigs/kubespray.git<span class="token builtin class-name">cd</span> /root/kubespray/pip3 <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txtansible <span class="token parameter variable">--version</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-4-创建主机清单"><a href="#1-4-创建主机清单" class="headerlink" title="1.4 创建主机清单"></a>1.4 创建主机清单</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@kubespray kubespray<span class="token punctuation">]</span><span class="token comment"># ls inventory/</span><span class="token builtin class-name">local</span>  sample<span class="token punctuation">[</span>root@kubespray kubespray<span class="token punctuation">]</span><span class="token comment"># cp -rfp inventory/sample inventory/mycluster</span><span class="token punctuation">[</span>root@kubespray kubespray<span class="token punctuation">]</span><span class="token comment"># ls inventory/</span><span class="token builtin class-name">local</span>  mycluster  sample<span class="token comment"># 使用真实的hostname（否则会自动把你的hostname改成node1/node2...这种哦）</span><span class="token punctuation">[</span>root@kubespray kubespray<span class="token punctuation">]</span><span class="token comment"># export USE_REAL_HOSTNAME=true</span><span class="token comment">#添加服务器ip</span><span class="token builtin class-name">declare</span> <span class="token parameter variable">-a</span> <span class="token assign-left variable">IPS</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">192.168</span>.6.220 <span class="token number">192.168</span>.6.221 <span class="token number">192.168</span>.6.222 <span class="token number">192.168</span>.6.223 <span class="token number">192.168</span>.6.224<span class="token punctuation">)</span><span class="token punctuation">[</span>root@kubespray kubespray<span class="token punctuation">]</span><span class="token comment"># ls inventory/mycluster/</span>group_vars  inventory.ini  patches<span class="token punctuation">[</span>root@kubespray kubespray<span class="token punctuation">]</span><span class="token comment"># CONFIG_FILE=inventory/mycluster/hosts.yaml python3 contrib/inventory_builder/inventory.py ${IPS[@]}</span>DEBUG: Adding group allDEBUG: Adding group kube_control_planeDEBUG: Adding group kube_nodeDEBUG: Adding group etcdDEBUG: Adding group k8s_clusterDEBUG: Adding group calico_rrDEBUG: adding <span class="token function">host</span> node1 to group allDEBUG: adding <span class="token function">host</span> node2 to group allDEBUG: adding <span class="token function">host</span> node3 to group allDEBUG: adding <span class="token function">host</span> node4 to group allDEBUG: adding <span class="token function">host</span> node5 to group allDEBUG: adding <span class="token function">host</span> node1 to group etcdDEBUG: adding <span class="token function">host</span> node2 to group etcdDEBUG: adding <span class="token function">host</span> node3 to group etcdDEBUG: adding <span class="token function">host</span> node1 to group kube_control_planeDEBUG: adding <span class="token function">host</span> node2 to group kube_control_planeDEBUG: adding <span class="token function">host</span> node1 to group kube_nodeDEBUG: adding <span class="token function">host</span> node2 to group kube_nodeDEBUG: adding <span class="token function">host</span> node3 to group kube_nodeDEBUG: adding <span class="token function">host</span> node4 to group kube_nodeDEBUG: adding <span class="token function">host</span> node5 to group kube_node<span class="token punctuation">[</span>root@kubespray kubespray<span class="token punctuation">]</span><span class="token comment"># ls inventory/mycluster/</span>group_vars  hosts.yaml  inventory.ini  patches<span class="token number">12345678910111213141516171819202122232425262728293031</span><span class="token comment">#修改为：添加了一个master，删除了二个node</span><span class="token punctuation">[</span>root@kubespray kubespray<span class="token punctuation">]</span><span class="token comment"># vim inventory/mycluster/hosts.yaml</span>all:  hosts:    k8s-master-01:      ansible_host: <span class="token number">192.168</span>.6.220      ip: <span class="token number">192.168</span>.6.220      access_ip: <span class="token number">192.168</span>.6.220    k8s-master-02:      ansible_host: <span class="token number">192.168</span>.6.221      ip: <span class="token number">192.168</span>.6.221      access_ip: <span class="token number">192.168</span>.6.221    k8s-master-03:      ansible_host: <span class="token number">192.168</span>.6.222      ip: <span class="token number">192.168</span>.6.222      access_ip: <span class="token number">192.168</span>.6.222    k8s-node-01:      ansible_host: <span class="token number">192.168</span>.6.223      ip: <span class="token number">192.168</span>.6.223      access_ip: <span class="token number">192.168</span>.6.223    k8s-node-02:      ansible_host: <span class="token number">192.168</span>.6.224      ip: <span class="token number">192.168</span>.6.224      access_ip: <span class="token number">192.168</span>.6.224  children:    kube_control_plane:      hosts:        k8s-master-01:        k8s-master-02:        k8s-master-03:    kube_node:      hosts:        k8s-node-01:        k8s-node-02:    etcd:      hosts:        k8s-master-01:        k8s-master-02:        k8s-master-03:    k8s_cluster:      children:        kube_control_plane:        kube_node:    calico_rr:      hosts: <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-5-准备K8S集群配置文件"><a href="#1-5-准备K8S集群配置文件" class="headerlink" title="1.5 准备K8S集群配置文件"></a>1.5 准备K8S集群配置文件</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@kubespray kubespray<span class="token punctuation">]</span><span class="token comment"># cat inventory/mycluster/group_vars/k8s_cluster/k8s-cluster.yml</span>---<span class="token comment"># Kubernetes configuration dirs and system namespace.</span><span class="token comment"># Those are where all the additional config stuff goes</span><span class="token comment"># the kubernetes normally puts in /srv/kubernetes.</span><span class="token comment"># This puts them in a sane location and namespace.</span><span class="token comment"># Editing those values will almost surely break something.</span>kube_config_dir: /etc/kuberneteskube_script_dir: <span class="token string">"{{ bin_dir }}/kubernetes-scripts"</span>kube_manifest_dir: <span class="token string">"{{ kube_config_dir }}/manifests"</span><span class="token comment"># This is where all the cert scripts and certs will be located</span>kube_cert_dir: <span class="token string">"{{ kube_config_dir }}/ssl"</span><span class="token comment"># This is where all of the bearer tokens will be stored</span>kube_token_dir: <span class="token string">"{{ kube_config_dir }}/tokens"</span>kube_api_anonymous_auth: <span class="token boolean">true</span><span class="token comment">## Change this to use another Kubernetes version, e.g. a current beta release</span>kube_version: v1.26.6<span class="token comment"># Where the binaries will be downloaded.</span><span class="token comment"># Note: ensure that you've enough disk space (about 1G)</span>local_release_dir: <span class="token string">"/tmp/releases"</span><span class="token comment"># Random shifts for retrying failed ops like pushing/downloading</span>retry_stagger: <span class="token number">5</span><span class="token comment"># This is the user that owns tha cluster installation.</span>kube_owner: kube修改：重点观察20、70、76、81、160、229行等默认可以不用修改。<span class="token number">12345678910111213141516171819202122232425262728293031323334</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-6-准备k8s集群插件文件"><a href="#1-6-准备k8s集群插件文件" class="headerlink" title="1.6 准备k8s集群插件文件"></a>1.6 准备k8s集群插件文件</h2><p>要启用 Kuberenetes 仪表板和入口控制器等插件，请在文件inventory/mycluster/group_vars/k8s_cluster/addons.yml 中将参数设置为已启用</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">根据自身业务需要开启对应的服务即可。例如：<span class="token punctuation">[</span>root@kubespray kubespray<span class="token punctuation">]</span><span class="token comment"># vim inventory/mycluster/group_vars/k8s_cluster/addons.yml</span><span class="token number">1</span> ---  <span class="token number">2</span> <span class="token comment"># Kubernetes dashboard</span>  <span class="token number">3</span> <span class="token comment"># RBAC required. see docs/getting-started.md for access details.</span>  <span class="token number">4</span> dashboard_enabled: <span class="token boolean">true</span>  <span class="token number">5</span>  <span class="token number">6</span> <span class="token comment"># Helm deployment</span>  <span class="token number">7</span> helm_enabled: <span class="token boolean">false</span>  <span class="token number">8</span>  <span class="token number">9</span> <span class="token comment"># Registry deployment</span> <span class="token number">10</span> registry_enabled: <span class="token boolean">false</span> <span class="token number">11</span> <span class="token comment"># registry_namespace: kube-system</span> <span class="token number">12</span> <span class="token comment"># registry_storage_class: ""</span> <span class="token number">13</span> <span class="token comment"># registry_disk_size: "10Gi"</span> <span class="token number">14</span> <span class="token number">15</span> <span class="token comment"># Metrics Server deployment</span> <span class="token number">16</span> metrics_server_enabled: <span class="token boolean">false</span><span class="token number">12345678910111213141516171819</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-7-在K8S集群节点添加sysops用户指行授权"><a href="#1-7-在K8S集群节点添加sysops用户指行授权" class="headerlink" title="1.7 在K8S集群节点添加sysops用户指行授权"></a>1.7 在K8S集群节点添加sysops用户指行授权</h2><p>所有的k8s集群节点</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"sysops ALL=(ALL) NOPASSWD:ALL"</span> <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> /etc/sudoers.d/sysops配置阿里云网络源<span class="token function">wget</span> <span class="token parameter variable">-O</span> /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo<span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-8-设置k8s集群主机"><a href="#1-8-设置k8s集群主机" class="headerlink" title="1.8 设置k8s集群主机"></a>1.8 设置k8s集群主机</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /root/kubespray/<span class="token comment">#关闭防火墙</span>ansible all <span class="token parameter variable">-i</span> inventory/mycluster/hosts.yaml <span class="token parameter variable">-m</span> shell <span class="token parameter variable">-a</span> <span class="token string">"systemctl stop firewalld &amp;&amp; systemctl disable firewalld"</span><span class="token comment">#k8s集群主机路由转发设置</span>ansible all <span class="token parameter variable">-i</span> inventory/mycluster/hosts.yaml <span class="token parameter variable">-m</span> shell <span class="token parameter variable">-a</span> <span class="token string">"echo 'net.ipv4.ip_forward=1' | tee -a /etc/sysctl.conf"</span><span class="token comment">#禁用swap分区</span>ansible all <span class="token parameter variable">-i</span> inventory/mycluster/hosts.yaml <span class="token parameter variable">-m</span> shell <span class="token parameter variable">-a</span> <span class="token string">"sed -i '/ swap / s/^\(.*\)$/#<span class="token entity" title="\1">\1</span>/g' /etc/fstab &amp;&amp;  swapoff -a"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-9-k8s集群部署-修改默认镜像"><a href="#1-9-k8s集群部署-修改默认镜像" class="headerlink" title="1.9 k8s集群部署-修改默认镜像"></a>1.9 k8s集群部署-修改默认镜像</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@kubespray ~<span class="token punctuation">]</span><span class="token comment"># cd /root/kubespray/</span><span class="token comment">#修改为国内镜像</span><span class="token function">cp</span> inventory/mycluster/group_vars/all/offline.yml inventory/mycluster/group_vars/all/mirror.yml<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-E</span> <span class="token string">'/# .*\{\{ files_repo/s/^# //g'</span> inventory/mycluster/group_vars/all/mirror.yml<span class="token function">tee</span> <span class="token parameter variable">-a</span> inventory/mycluster/group_vars/all/mirror.yml <span class="token operator">&lt;&lt;</span><span class="token string">EOFgcr_image_repo: "gcr.m.daocloud.io"kube_image_repo: "k8s.m.daocloud.io"docker_image_repo: "docker.m.daocloud.io"quay_image_repo: "quay.m.daocloud.io"github_image_repo: "ghcr.m.daocloud.io"files_repo: "https://files.m.daocloud.io"EOF</span>ansible-playbook <span class="token parameter variable">-i</span> inventory/mycluster/hosts.yaml <span class="token parameter variable">--become</span> --become-user<span class="token operator">=</span>root cluster.yml<span class="token comment">#如果没有执行成功，可以多次执行。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-10-k8s主节点验证可用性"><a href="#1-10-k8s主节点验证可用性" class="headerlink" title="1.10 k8s主节点验证可用性"></a>1.10 k8s主节点验证可用性</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl get nodeskubectl get componentstatuseskubectl get pods <span class="token parameter variable">-A</span><span class="token punctuation">[</span>root@k8s-master01 ~<span class="token punctuation">]</span><span class="token comment"># kubectl create deployment demo-nginx-kubespray --image=nginx --replicas=2</span>deployment.apps/demo-nginx-kubespray created<span class="token punctuation">[</span>root@k8s-master01 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get pods</span>NAME                                   READY   STATUS              RESTARTS   AGEdemo-nginx-kubespray-b65cf84cd-jzkzf   <span class="token number">1</span>/1     Running             <span class="token number">0</span>          16sdemo-nginx-kubespray-b65cf84cd-v2nv4   <span class="token number">0</span>/1     ContainerCreating   <span class="token number">0</span>          16s<span class="token punctuation">[</span>root@k8s-master01 ~<span class="token punctuation">]</span><span class="token comment"># kubectl expose deployment demo-nginx-kubespray --type NodePort --port=80</span>service/demo-nginx-kubespray exposed<span class="token punctuation">[</span>root@k8s-master01 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get svc</span>NAME                   TYPE        CLUSTER-IP    EXTERNAL-IP   PORT<span class="token punctuation">(</span>S<span class="token punctuation">)</span>        AGEdemo-nginx-kubespray   NodePort    <span class="token number">10.233</span>.7.87   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">80</span>:30532/TCP   4skubernetes             ClusterIP   <span class="token number">10.233</span>.0.1    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">443</span>/TCP        16m<span class="token punctuation">[</span>root@k8s-master01 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get  deployments.apps</span>NAME                   READY   UP-TO-DATE   AVAILABLE   AGEdemo-nginx-kubespray   <span class="token number">2</span>/2     <span class="token number">2</span>            <span class="token number">2</span>           116s<span class="token punctuation">[</span>root@k8s-master01 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get pods</span>NAME                                   READY   STATUS    RESTARTS   AGEdemo-nginx-kubespray-b65cf84cd-jzkzf   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          44sdemo-nginx-kubespray-b65cf84cd-v2nv4   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          44s<span class="token punctuation">[</span>root@k8s-master01 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get svc demo-nginx-kubespray</span>NAME                   TYPE       CLUSTER-IP    EXTERNAL-IP   PORT<span class="token punctuation">(</span>S<span class="token punctuation">)</span>        AGEdemo-nginx-kubespray   NodePort   <span class="token number">10.233</span>.7.87   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">80</span>:30532/TCP   17s<span class="token number">123456789101112131415161718192021222324252627282930313233343536373839404142</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/img_convert/3d3aa853a98c4c92e92a87646eafd020.png#averageHue=#0a0705&amp;clientId=u4ac90055-7753-4&amp;from=paste&amp;height=759&amp;id=ueba2affa&amp;originHeight=759&amp;originWidth=800&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=92086&amp;status=done&amp;style=none&amp;taskId=ua24ba847-c6c3-49df-927c-b611f8454d1&amp;title=&amp;width=800" alt="image.png"></p><h2 id="1-11-移除节点"><a href="#1-11-移除节点" class="headerlink" title="1.11 移除节点"></a>1.11 移除节点</h2><p>不用修改hosts.yaml文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"> ansible-playbook <span class="token parameter variable">-i</span> inventory/mycluster/hosts.yaml <span class="token parameter variable">--become</span> --become-user<span class="token operator">=</span>root remove-node.yml <span class="token parameter variable">-v</span> <span class="token parameter variable">-b</span> --extra-vars <span class="token string">"node=k8s-node-02"</span><span class="token number">12</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="1-12-增加节点"><a href="#1-12-增加节点" class="headerlink" title="1.12 增加节点"></a>1.12 增加节点</h2><p>需要修改hosts.yaml文件,在inventory/mycluster/hosts.yaml中添加新增节点信息</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#添加了k8s-node-03</span><span class="token punctuation">[</span>root@kubespray kubespray<span class="token punctuation">]</span><span class="token comment"># vim inventory/mycluster/hosts.yaml</span>all:  hosts:    k8s-master-01:      ansible_host: <span class="token number">192.168</span>.6.220      ip: <span class="token number">192.168</span>.6.220      access_ip: <span class="token number">192.168</span>.6.220    k8s-master-02:      ansible_host: <span class="token number">192.168</span>.6.221      ip: <span class="token number">192.168</span>.6.221      access_ip: <span class="token number">192.168</span>.6.221    k8s-master-03:      ansible_host: <span class="token number">192.168</span>.6.222      ip: <span class="token number">192.168</span>.6.222      access_ip: <span class="token number">192.168</span>.6.222    k8s-node-01:      ansible_host: <span class="token number">192.168</span>.6.223      ip: <span class="token number">192.168</span>.6.223      access_ip: <span class="token number">192.168</span>.6.223    k8s-node-02:      ansible_host: <span class="token number">192.168</span>.6.224      ip: <span class="token number">192.168</span>.6.224      access_ip: <span class="token number">192.168</span>.6.224    k8s-node-03:      ansible_host: <span class="token number">192.168</span>.6.226      ip: <span class="token number">192.168</span>.6.226      access_ip: <span class="token number">192.168</span>.6.226  children:    kube_control_plane:      hosts:        k8s-master-01:        k8s-master-02:        k8s-master-03:    kube_node:      hosts:        k8s-node-01:        k8s-node-02:        k8s-node-03:    etcd:      hosts:        k8s-master-01:        k8s-master-02:        k8s-master-03:    k8s_cluster:      children:        kube_control_plane:        kube_node:    calico_rr:      hosts: <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token number">12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152</span><span class="token punctuation">[</span>root@kubespray kubespray<span class="token punctuation">]</span><span class="token comment"># ansible-playbook -i inventory/mycluster/hosts.yaml --become --become-user=root scale.yml -v -b</span><span class="token number">12</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-13-清理k8s集群"><a href="#1-13-清理k8s集群" class="headerlink" title="1.13 清理k8s集群"></a>1.13 清理k8s集群</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@kubespray ~<span class="token punctuation">]</span><span class="token comment"># cd kubespray/</span><span class="token punctuation">[</span>root@kubespray kubespray<span class="token punctuation">]</span><span class="token comment"># ansible-playbook -i inventory/mycluster/hosts.yaml  --become --become-user=root reset.yml</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>[kubespray部署k8s-v1.26.6]: <a href="https://blog.csdn.net/qq_35583325/article/details/131678730">https://blog.csdn.net/qq_35583325/article/details/131678730</a>“kubespray部署k8s-v1.26.6”</p>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
          <category> kubespray </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> kubespray </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K8s的Operator开发（一）</title>
      <link href="/go/k8s-de-operator-kai-fa-yi.html"/>
      <url>/go/k8s-de-operator-kai-fa-yi.html</url>
      
        <content type="html"><![CDATA[<h1 id="Kubernetes-Operator-开发教程（一）"><a href="#Kubernetes-Operator-开发教程（一）" class="headerlink" title="Kubernetes Operator 开发教程（一）"></a>Kubernetes Operator 开发教程（一）</h1><blockquote><p>简介：以前开发Operator是以部分开发身份参与，因此想通过一个完整的实例来梳理Operator完整的开发逻辑，因此这次想采用“统一权限控制中心”来定义这个资源，主要控制了k8s的sa账号和harbor账号，以及预留其他口可供统一的权限控制。</p></blockquote><h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1. 概述"></a>1. 概述</h2><p>我们将 CRD, Controller, Webhook 三者合起来叫 Operator。一个 Operator 工程一般必须包含 CRD 和 Controller，Admission 是可选的。这次我们主要采用<a href="https://github.com/kubernetes-sigs/kubebuilder">KubeBuilder</a>来构建实现Operator。</p><h2 id="2-名词解释"><a href="#2-名词解释" class="headerlink" title="2. 名词解释"></a>2. 名词解释</h2><ul><li><p><strong>GVK</strong>：Group,Version,Kind</p></li><li><p><strong>GVR:</strong>   Group,Version,Resource</p></li><li><p><strong>API Group &amp; Versions（GV）：</strong><br>API Group是相关API功能的集合，每个Group拥有一或多个Versions，用于接口的演进。</p></li><li><p><strong>Kinds &amp; Resources：</strong></p></li></ul><p>每个GV都包含多个API类型，称为Kinds，在不同的Versions之间同一个Kind定义可能不同， Resource是Kind的对象标识（<a href="https://kubernetes.io/docs/reference/kubectl/overview/#resource-types">resource type</a>），一般来说Kinds和Resources是1:1的，比如pods Resource对应Pod Kind，但是有时候相同的Kind可能对应多个Resources，比如Scale Kind可能对应很多Resources：deployments/scale，replicasets/scale，对于CRD来说，只会是1:1的关系</p><ul><li><strong>Scheme：</strong></li></ul><p>每一组Controllers都需要一个Scheme，提供了Kinds与对应Go types的映射。</p><ul><li><p><strong>Manager</strong></p><p>Kubebuilder的核心组件，具有3个职责：</p><ul><li><p>负责运行所有的Controllers</p></li><li><p>初始化共享caches，包含listAndWatch功能</p></li><li><p>初始化clients用于与Api Server通信；</p></li></ul></li><li><p><strong>Cache：</strong></p></li></ul><p>Kubebuilder的核心组件，负责在Controller进程里面根据Scheme同步Api Server中所有该Controller关心GVKs的GVRs，其核心是GVK -&gt; Informer的映射，Informer会负责<strong>监听</strong>对应GVK的GVRs的创建/删除/更新操作，以触发Controller的<strong>Reconcile</strong>逻辑。</p><ul><li><strong>Clients：</strong><br>在实现Controller的时候不可避免地需要对某些资源类型进行创建/删除/更新，就是通过该Clients实现的，其中查询功能实际查询是本地的Cache，写操作直接访问Api Server。</li><li><strong>Index：</strong><br>由于Controller经常要对Cache进行查询，Kubebuilder提供Index utility给Cache加索引提升查询效率。</li><li><strong>Finalizer：</strong><br>在一般情况下，如果资源被删除之后，我们虽然能够被触发删除事件，但是这个时候从Cache里面无法读取任何被删除对象的信息，这样一来导致很多垃圾清理工作因为信息不足无法进行，K8s的Finalizer字段用于处理这种情况。在K8s中，只要对象ObjectMeta里面的Finalizers不为空，对该对象的delete操作就会转变为update操作，具体说就是update deletionTimestamp 字段，其意义就是告诉K8s的GC“在deletionTimestamp这个时刻之后，只要Finalizers为空，就立马删除掉该对象”。所以一般的使用姿势就是在创建对象时把Finalizers设置好（任意string），然后处理DeletionTimestamp不为空的update操作（实际是delete），根据Finalizers的值执行完所有的pre-delete hook（此时可以在Cache里面读取到被删除对象的任何信息）之后将Finalizers置为空即可。</li><li><strong>OwnerReference：</strong><br>K8s GC在删除一个对象时，任何ownerReference是该对象的对象都会被清除，与此同时，Kubebuidler支持所有对象的变更都会触发Owner对象controller的Reconcile方法。</li></ul><h2 id="3-List-Watch机制"><a href="#3-List-Watch机制" class="headerlink" title="3. List-Watch机制"></a>3. List-Watch机制</h2><img src="/go/k8s-de-operator-kai-fa-yi/image-20230815211736146.png" class="" title="image-20230815211736146"><h2 id="4-CRD规范"><a href="#4-CRD规范" class="headerlink" title="4. CRD规范"></a>4. CRD规范</h2><h3 id="4-1-命名规范"><a href="#4-1-命名规范" class="headerlink" title="4.1 命名规范"></a>4.1 命名规范</h3><p>CRD 的全名是必须符合如下的命名规范: <code>${Kind}.${Group}.${Organization}.kubeone.alibaba-inc.com</code>。其中:</p><ul><li><code>${Organization}</code> 为仓库的 git Group，即 团队名英文简称。如 jiayi</li><li><code>${Group}</code> 必须是一种功能类别，如 <code>ops</code>, <code>apps</code>, <code>auth</code> 等。尽量用<strong>精简的单个英语单词</strong>的方式传达你的 CRD 属于的“类别”。组成的字母必须都是小写</li><li><code>${Kind}</code> 即为 CRD 真正的短名字，用<strong>精简的单个或多个英文单词</strong>的拼接来命名真正的 CRD 短名字。如 <code>AdvancedDeployment</code>，<code>NoteBook</code> 等。使用<strong>大驼峰命名法（首字母也是大写，即 UpperCamelCase）</strong>。</li><li>alipay.com 是固定的，即 Company Name Domain。</li><li>目前对于 CRD 版本转化不太友好，统一使用 <code>v1</code>。</li></ul><h3 id="4-2-Spec-Status-规范"><a href="#4-2-Spec-Status-规范" class="headerlink" title="4.2 Spec, Status 规范"></a>4.2 Spec, Status 规范</h3><ul><li>用命令在  <code>apis</code> 包下生成 CRD Types 之后，请不要随意修改 <code>apis</code> 里的结构体、命名规则、以及<strong>注释</strong>。</li><li>只能、也只需要修改 <code>${Kind}_types.go</code> 文件里 Spec 和 StatusSpec 结构体里的内容。</li><li>Spec 和 StatusSpec 里的字段都必须是 Public 的，也就是字段名首字母是大写。</li><li>每个字段，都应该写上 JSON Tag，JSON Tag 必须使用 <strong>小驼峰命名法，即 LowerCamelCase</strong>。</li><li>如果字段允许为空，JSON Tag 记得带上 <code>omitempty</code>。<strong>StatusSpec 的字段一般都是允许为空的！</strong>例子：</li></ul><h2 id="5-kubebuilder的搭建和使用"><a href="#5-kubebuilder的搭建和使用" class="headerlink" title="5. kubebuilder的搭建和使用"></a>5. kubebuilder的搭建和使用</h2><h3 id="5-1安装"><a href="#5-1安装" class="headerlink" title="5.1安装"></a>5.1安装</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># download kubebuilder and install locally.</span><span class="token function">curl</span> <span class="token parameter variable">-L</span> <span class="token parameter variable">-o</span> kubebuilder <span class="token string">"https://go.kubebuilder.io/dl/latest/<span class="token variable"><span class="token variable">$(</span>go <span class="token function">env</span> GOOS<span class="token variable">)</span></span>/<span class="token variable"><span class="token variable">$(</span>go <span class="token function">env</span> GOARCH<span class="token variable">)</span></span>"</span><span class="token function">chmod</span> +x kubebuilder <span class="token operator">&amp;&amp;</span> <span class="token function">mv</span> kubebuilder /usr/local/bin/kubebuilder completion <span class="token operator">&lt;</span>bash<span class="token operator">|</span>fish<span class="token operator">|</span>powershell<span class="token operator">|</span>zsh<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-2-创建项目"><a href="#5-2-创建项目" class="headerlink" title="5.2 创建项目"></a>5.2 创建项目</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">kubebuilder init <span class="token punctuation">-</span><span class="token punctuation">-</span>domain jiayi.com <span class="token punctuation">-</span><span class="token punctuation">-</span>repo jiayi.com/auth<span class="token punctuation">-</span>center<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="/go/k8s-de-operator-kai-fa-yi/image-20230815220729445.png" class="" title="image-20230815220729445"><h3 id="5-3-创建api"><a href="#5-3-创建api" class="headerlink" title="5.3 创建api"></a>5.3 创建api</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubebuilder create api <span class="token parameter variable">--group</span> auth <span class="token parameter variable">--version</span> v1 <span class="token parameter variable">--kind</span> AuthCenter<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="/go/k8s-de-operator-kai-fa-yi/image-20230815220945195.png" class="" title="image-20230815220945195"><blockquote><p>如果你按y创建资源[y/n]和创建控制器[y/n]，那么这将创建文件api/v1/authcenter_types。去API定义的地方和内部/controllers/authcenter_controller。转到为这种类型(CRD)实现协调业务逻辑的地方。</p></blockquote><img src="/go/k8s-de-operator-kai-fa-yi/image-20230815222416478.png" class="" title="image-20230815222416478"><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://segmentfault.com/a/1190000020338350?spm=a2c6h.12873639.article-detail.26.122e38c76BkLjs">kubebuilder2.0学习笔记——搭建和使用</a></li><li><a href="https://segmentfault.com/a/1190000020359577">kubebuilder2.0学习笔记——进阶使用</a></li><li></li><li>[Finalizers]: <a href="https://cloudnative.to/kubebuilder/reference/using-finalizers.html">https://cloudnative.to/kubebuilder/reference/using-finalizers.html</a>“使用 Finalizers”</li></ul><p>[kubebuilder-标记注释]: <a href="https://blog.csdn.net/a1023934860/article/details/122859248">https://blog.csdn.net/a1023934860/article/details/122859248</a>“kubebuilder-标记注释”</p>]]></content>
      
      
      <categories>
          
          <category> Go </category>
          
          <category> k8s </category>
          
          <category> Operator </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> Go </tag>
            
            <tag> Kubebuilder </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Istio详细使用-安全（三）</title>
      <link href="/kubernetes/istio-xiang-xi-shi-yong-san.html"/>
      <url>/kubernetes/istio-xiang-xi-shi-yong-san.html</url>
      
        <content type="html"><![CDATA[<h1 id="Istio详细使用-安全（二）"><a href="#Istio详细使用-安全（二）" class="headerlink" title="Istio详细使用-安全（二）"></a>Istio详细使用-安全（二）</h1><p>上篇介绍了流量分发管理、熔断、发布等使用，本章主要介绍了Istio的安全认证以及授权策略。</p><p>Istio安全的三大目标：</p><ul><li>默认安全（Security by default）：应用程序代码和基础结构无需更改。</li><li>深度防御（Defense in depth）：与现有安全系统集成，提供多层防御。</li><li>零信任网络（Zero-trust network）：在不受信的网络上，构建安全解决方案。</li></ul><h2 id="1-上层架构"><a href="#1-上层架构" class="headerlink" title="1. 上层架构"></a>1. 上层架构</h2><p>Istio的安全性涉及多个部分：</p><ul><li>用于密钥和证书管理的证书颁发机构（CA）</li><li>配置API服务器分发给代理<ul><li>认证策略</li><li>鉴权策略</li><li>安全命名信息</li></ul></li><li>作为策略执行点的僚机和参数代理，用于客户端和服务端之间的安全通信</li><li>一组用于管理遥测和审计的代理扩展</li></ul><img src="/kubernetes/istio-xiang-xi-shi-yong-san/image-20230814162812436-169200169382311.png" class="" title="image-20230814162812436"><h2 id="2-Istio-身份"><a href="#2-Istio-身份" class="headerlink" title="2. Istio 身份"></a>2. Istio 身份</h2><p>身份是任何安全基础架构的基本概念。在工作负载间通信开始时， 双方必须交换包含身份信息的凭证以进行双向验证。在客户端， 根据<a href="https://istio.io/latest/zh/docs/concepts/security/#secure-naming">安全命名</a>信息检查服务器的标识， 以查看它是否是工作负载授权的运行程序。在服务器端， 服务器可以根据<a href="https://istio.io/latest/zh/docs/concepts/security/#authorization-policies">授权策略</a>确定客户端可以访问哪些信息。</p><p>Istio 身份模型使用经典的 <code>service identity</code>（服务身份）来确定一个请求源端的身份。可以更灵活，细粒度地表示用户、工作负载或一组负载。</p><h2 id="3-身份和凭证管理"><a href="#3-身份和凭证管理" class="headerlink" title="3. 身份和凭证管理"></a>3. 身份和凭证管理</h2><p>Istio使用X.509提供强身份识别。Istio代理，和Envoy一起运行，配合Istiod一起完成自动化大规模的密钥和证书轮换。</p><img src="/kubernetes/istio-xiang-xi-shi-yong-san/image-20230814163343822.png" class="" title="image-20230814163343822"><p>Istio 通过以下流程提供密钥和证书：</p><ol><li><code>istiod</code> 提供 gRPC 服务以接受<a href="https://en.wikipedia.org/wiki/Certificate_signing_request">证书签名请求</a>（CSR）。</li><li><code>istio-agent</code> 在启动时创建私钥和 CSR，然后将 CSR 及其凭据发送到 <code>istiod</code> 进行签名。</li><li><code>istiod</code> CA 验证 CSR 中携带的凭据，成功验证后签署 CSR 以生成证书。</li><li>当工作负载启动时，Envoy 通过 <a href="https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret#secret-discovery-service-sds">Secret 发现服务（SDS）</a>API 向同容器内的 <code>istio-agent</code> 发送证书和密钥请求。</li><li><code>istio-agent</code> 通过 Envoy SDS API 将从 <code>istiod</code> 收到的证书和密钥发送给 Envoy。</li><li><code>istio-agent</code> 监控工作负载证书的过期时间。上述过程会定期重复进行证书和密钥轮换。</li></ol><h2 id="4-认证"><a href="#4-认证" class="headerlink" title="4. 认证"></a>4. 认证</h2><p>istio有两种认证类型：</p><ul><li><code>peer authentication</code>：同行认证用于服务见通信时认证发起连接的客户端。使用双向TLS加密作为全栈解决方案。</li><li><code>request authentication</code>：校验请求中携带的凭证认证终端用户。Istio支持JWT认证，以及一些OIDC供应商的定制话认证。<br>在所有情况下，Istio 都通过自定义 Kubernetes API 将认证策略存储在 <code>Istio config store</code>。 Istiod 使每个代理保持最新状态， 并在适当时提供密钥。此外，Istio 的认证机制支持宽容模式（permissive mode）， 以帮助您在强制实施前了解策略更改将如何影响您的安全状况。</li></ul><h3 id="4-1-双向-TLS-认证"><a href="#4-1-双向-TLS-认证" class="headerlink" title="4.1 双向 TLS 认证"></a>4.1 双向 TLS 认证</h3><p>Istio 通过客户端和服务器端 PEP 建立服务到服务的通信通道， PEP 被实现为 <a href="https://www.envoyproxy.io/">Envoy 代理</a>。 当一个工作负载使用双向 TLS 认证向另一个工作负载发送请求时， 该请求的处理方式如下：</p><ol><li>Istio 将出站流量从客户端重新路由到客户端的本地 Sidecar Envoy。</li><li>客户端 Envoy 与服务器端 Envoy 开始双向 TLS 握手。在握手期间， 客户端 Envoy 还做了<a href="https://istio.io/latest/zh/docs/concepts/security/#secure-naming">安全命名</a>检查， 以验证服务器证书中显示的服务帐户是否被授权运行目标服务。</li><li>客户端 Envoy 和服务器端 Envoy 建立了一个双向的 TLS 连接，Istio 将流量从客户端 Envoy 转发到服务器端 Envoy。</li><li>服务器端 Envoy 授权请求。如果获得授权，它将流量转发到通过本地 TCP 连接的后端服务</li></ol><h4 id="4-1-1-宽容模式"><a href="#4-1-1-宽容模式" class="headerlink" title="4.1.1 宽容模式"></a>4.1.1 宽容模式</h4><p>Istio 双向 TLS 具有一个宽容模式（permissive mode）， 允许服务同时接受纯文本流量和双向 TLS 流量。这个功能极大地提升了双向 TLS 的入门体验。</p><p>在运维人员希望将服务移植到启用了双向 TLS 的 Istio 上时， 许多非 Istio 客户端与非 Istio 服务器端之间的通信会产生问题。 通常情况下，运维人员无法同时为所有客户端安装 Istio Sidecar， 甚至在某些客户端上没有这样做的权限。即使在服务器端上安装了 Istio Sidecar， 运维人员也无法在不中断现有连接的情况下启用双向 TLS。</p><h3 id="4-2-认证策略"><a href="#4-2-认证策略" class="headerlink" title="4.2 认证策略"></a>4.2 认证策略</h3><h4 id="4-2-1-对等认证"><a href="#4-2-1-对等认证" class="headerlink" title="4.2.1 对等认证"></a>4.2.1 对等认证</h4><p>对等认证策略指定 Istio 对目标工作负载实施的双向 TLS 模式。支持以下模式：</p><ul><li><code>PERMISSIVE</code>：工作负载接受双向 TLS 和纯文本流量。 此模式在迁移因为没有 Sidecar 而无法使用双向 TLS 的工作负载的过程中非常有用。 一旦工作负载完成 Sidecar 注入的迁移，应将模式切换为 STRICT。</li><li><code>STRICT</code>：工作负载仅接收双向 TLS 流量。</li><li><code>DISABLE</code>：禁用双向 TLS。从安全角度来看，除非您提供自己的安全解决方案，否则请勿使用此模式。</li></ul><p>如果模式为 unset，将继承父作用域的模式。unset 模式的网格范围的对等认证策略默认使用 <code>PERMISSIVE</code> 模式。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># https://istio.io/latest/zh/docs/reference/config/security/peer_authentication/</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> security.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PeerAuthentication<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"example-policy"</span>  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> <span class="token string">"foo"</span><span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">mtls</span><span class="token punctuation">:</span>    <span class="token key atrule">mode</span><span class="token punctuation">:</span> STRICT<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对于特定于工作负载的对等认证策略，可以为不同的端口指定不同的双向 TLS 模式。 您只能将端口范围的双向 TLS 配置在工作负载声明过的端口上。 以下示例为 <code>app:example-app</code> 工作负载禁用了端口 80 上的双向 TLS， 并对所有其他端口使用命名空间范围的对等认证策略的双向 TLS 设置：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> security.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PeerAuthentication<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"example-workload-policy"</span>  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> <span class="token string">"foo"</span><span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>     <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>       <span class="token key atrule">app</span><span class="token punctuation">:</span> example<span class="token punctuation">-</span>app  <span class="token key atrule">portLevelMtls</span><span class="token punctuation">:</span>    <span class="token key atrule">80</span><span class="token punctuation">:</span>      <span class="token key atrule">mode</span><span class="token punctuation">:</span> DISABLE<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-2-2-请求认证"><a href="#4-2-2-请求认证" class="headerlink" title="4.2.2 请求认证"></a>4.2.2 请求认证</h4><p>请求认证策略指定验证 JSON Web Token（JWT）所需的值。这些值包括：</p><ul><li>token 在请求中的位置</li><li>请求的 issuer</li><li>公共 JSON Web Key Set（JWKS）</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># https://istio.io/latest/zh/docs/reference/config/security/request_authentication/</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> security.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> RequestAuthentication<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> httpbin  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> foo<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> httpbin  <span class="token key atrule">jwtRules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">issuer</span><span class="token punctuation">:</span> <span class="token string">"issuer-foo"</span>    <span class="token key atrule">jwksUri</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//example.com/.well<span class="token punctuation">-</span>known/jwks.json<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> security.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> AuthorizationPolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> httpbin  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> foo<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> httpbin  <span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">from</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">source</span><span class="token punctuation">:</span>        <span class="token key atrule">requestPrincipals</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"*"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-授权"><a href="#5-授权" class="headerlink" title="5. 授权"></a>5. 授权</h2><p>Istio 的授权功能为网格中的工作负载提供网格、 命名空间和工作负载级别的访问控制。</p><h3 id="5-1-架构"><a href="#5-1-架构" class="headerlink" title="5.1 架构"></a>5.1 架构</h3><p>授权策略对服务器端 Envoy 代理的入站流量实施访问控制。 每个 Envoy 代理都运行一个授权引擎，该引擎在运行时授权请求。 当请求到达代理时，授权引擎根据当前授权策略评估请求上下文， 并返回授权结果 <code>ALLOW</code> 或 <code>DENY</code>。 运维人员使用 <code>.yaml</code> 文件指定 Istio 授权策略。</p><img src="/kubernetes/istio-xiang-xi-shi-yong-san/image-20230814171722305.png" class="" title="image-20230814171722305"><h3 id="5-2-策略逻辑"><a href="#5-2-策略逻辑" class="headerlink" title="5.2 策略逻辑"></a>5.2 策略逻辑</h3><p>stio 按以下顺序检查层中的匹配策略：<code>CUSTOM</code>、<code>DENY</code>， 然后是 <code>ALLOW</code>。对于每种类型的操作，Istio 首先检查是否有策略的操作已被应用， 然后检查请求是否匹配策略的规则。如果请求与其中一层中的策略不匹配， 则检查将继续到下一层。</p><img src="/kubernetes/istio-xiang-xi-shi-yong-san/image-20240401182717466.png" class="" title="image-20240401182717466"><h3 id="5-3-授权策略"><a href="#5-3-授权策略" class="headerlink" title="5.3 授权策略"></a>5.3 授权策略</h3><p>要配置授权策略，请创建一个 <a href="https://istio.io/latest/zh/docs/reference/config/security/authorization-policy/"><code>AuthorizationPolicy</code> 自定义资源</a>。 一个授权策略包括选择器（selector）、动作（action）和一个规则（rules）列表：</p><ul><li><code>selector</code> 字段指定策略的目标</li><li><code>action</code> 字段指定允许还是拒绝请求</li><li><code>rules</code> 指定何时触发动作<ul><li><code>rules</code> 下的 <code>from</code> 字段指定请求的来源</li><li><code>rules</code> 下的 <code>to</code> 字段指定请求的操作</li><li><code>rules</code> 下的 <code>when</code> 字段指定应用规则所需的条件</li></ul></li></ul><h4 id="5-3-1-策略目标"><a href="#5-3-1-策略目标" class="headerlink" title="5.3.1 策略目标"></a>5.3.1 策略目标</h4><p>以下示例显示了一个授权策略，该策略允许两个源（服务帐户 <code>cluster.local/ns/default/sa/sleep</code> 和命名空间 <code>dev</code>），在使用有效的 JWT 令牌发送请求时，可以访问命名空间 <code>foo</code> 中带有标签 <code>app: httpbin</code> 和 <code>version: v1</code> 的工作负载。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># https://istio.io/latest/zh/docs/reference/config/security/authorization-policy/</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> security.istio.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> AuthorizationPolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> httpbin <span class="token key atrule">namespace</span><span class="token punctuation">:</span> foo<span class="token key atrule">spec</span><span class="token punctuation">:</span> <span class="token key atrule">selector</span><span class="token punctuation">:</span>   <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>     <span class="token key atrule">app</span><span class="token punctuation">:</span> httpbin     <span class="token key atrule">version</span><span class="token punctuation">:</span> v1 <span class="token key atrule">action</span><span class="token punctuation">:</span> ALLOW <span class="token key atrule">rules</span><span class="token punctuation">:</span> <span class="token punctuation">-</span> <span class="token key atrule">from</span><span class="token punctuation">:</span>   <span class="token punctuation">-</span> <span class="token key atrule">source</span><span class="token punctuation">:</span>       <span class="token key atrule">principals</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"cluster.local/ns/default/sa/sleep"</span><span class="token punctuation">]</span>   <span class="token punctuation">-</span> <span class="token key atrule">source</span><span class="token punctuation">:</span>       <span class="token key atrule">namespaces</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"dev"</span><span class="token punctuation">]</span>   <span class="token key atrule">to</span><span class="token punctuation">:</span>   <span class="token punctuation">-</span> <span class="token key atrule">operation</span><span class="token punctuation">:</span>       <span class="token key atrule">methods</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"GET"</span><span class="token punctuation">]</span>   <span class="token key atrule">when</span><span class="token punctuation">:</span>   <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> request.auth.claims<span class="token punctuation">[</span>iss<span class="token punctuation">]</span>     <span class="token key atrule">values</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"https://accounts.google.com"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-3-2-值匹配"><a href="#5-3-2-值匹配" class="headerlink" title="5.3.2 值匹配"></a>5.3.2 值匹配</h4><p>授权策略中的大多数字段都支持以下所有匹配模式：</p><ul><li>完全匹配：即完整的字符串匹配。</li><li>前缀匹配：<code>"*"</code> 结尾的字符串。例如，<code>"test.abc.*"</code> 匹配 <code>"test.abc.com"</code>、<code>"test.abc.com.cn"</code>、<code>"test.abc.org"</code> 等等。</li><li>后缀匹配：<code>"*"</code> 开头的字符串。例如，<code>"*.abc.com"</code> 匹配 <code>"eng.abc.com"</code>、<code>"test.eng.abc.com"</code> 等等。</li><li>存在匹配：<code>*</code> 用于指定非空的任意内容。您可以使用格式 <code>fieldname: ["*"]</code> 指定必须存在的字段。这意味着该字段可以匹配任意内容，但是不能为空。 请注意这与不指定字段不同，后者意味着匹配包括空的任意内容。</li></ul><p>有一些例外。例如，以下字段仅支持完全匹配：</p><ul><li><code>when</code> 部分下的 <code>key</code> 字段</li><li><code>source</code> 部分下的 <code>ipBlocks</code></li><li><code>to</code> 部分下的 <code>ports</code> 字段</li></ul><p>以下示例策略允许访问前缀为 <code>/test/*</code> 或后缀为 <code>*/info</code> 的路径。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> security.istio.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> AuthorizationPolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> tester  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> products  <span class="token key atrule">action</span><span class="token punctuation">:</span> ALLOW  <span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">to</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">operation</span><span class="token punctuation">:</span>        <span class="token key atrule">paths</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"/test/*"</span><span class="token punctuation">,</span> <span class="token string">"*/info"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-3-3-排除匹配"><a href="#5-3-3-排除匹配" class="headerlink" title="5.3.3 排除匹配"></a>5.3.3 排除匹配</h4><p>为了匹配诸如 <code>when</code> 字段中的 <code>notValues</code>、 <code>source</code> 字段中的 <code>notIpBlocks</code>、<code>to</code> 字段中的 <code>notPorts</code> 之类的否定条件，Istio 支持排除匹配。</p><p>以下示例：如果请求路径不是 <code>/healthz</code>，则要求从请求的 JWT 认证中导出的主体是有效的。 因此，该策略从 JWT 身份验证中排除对 <code>/healthz</code> 路径的请求：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> security.istio.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> AuthorizationPolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> disable<span class="token punctuation">-</span>jwt<span class="token punctuation">-</span>for<span class="token punctuation">-</span>healthz  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> products  <span class="token key atrule">action</span><span class="token punctuation">:</span> ALLOW  <span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">to</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">operation</span><span class="token punctuation">:</span>        <span class="token key atrule">notPaths</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"/healthz"</span><span class="token punctuation">]</span>    <span class="token key atrule">from</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">source</span><span class="token punctuation">:</span>        <span class="token key atrule">requestPrincipals</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"*"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-3-4-自定义条件"><a href="#5-3-4-自定义条件" class="headerlink" title="5.3.4 自定义条件"></a>5.3.4 自定义条件</h4><p>您还可以使用 <code>when</code> 部分指定其他条件。 例如，下面的 <code>AuthorizationPolicy</code> 定义包括以下条件： <code>request.headers [version]</code> 是 <code>v1</code> 或 <code>v2</code>。 在这种情况下，key 是 <code>request.headers [version]</code>， 它是 Istio 属性 <code>request.headers</code>（这是个字典）中的一项。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> security.istio.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> AuthorizationPolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> httpbin <span class="token key atrule">namespace</span><span class="token punctuation">:</span> foo<span class="token key atrule">spec</span><span class="token punctuation">:</span> <span class="token key atrule">selector</span><span class="token punctuation">:</span>   <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>     <span class="token key atrule">app</span><span class="token punctuation">:</span> httpbin     <span class="token key atrule">version</span><span class="token punctuation">:</span> v1 <span class="token key atrule">action</span><span class="token punctuation">:</span> ALLOW <span class="token key atrule">rules</span><span class="token punctuation">:</span> <span class="token punctuation">-</span> <span class="token key atrule">from</span><span class="token punctuation">:</span>   <span class="token punctuation">-</span> <span class="token key atrule">source</span><span class="token punctuation">:</span>       <span class="token key atrule">principals</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"cluster.local/ns/default/sa/sleep"</span><span class="token punctuation">]</span>   <span class="token key atrule">to</span><span class="token punctuation">:</span>   <span class="token punctuation">-</span> <span class="token key atrule">operation</span><span class="token punctuation">:</span>       <span class="token key atrule">methods</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"GET"</span><span class="token punctuation">]</span>   <span class="token key atrule">when</span><span class="token punctuation">:</span>   <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> request.headers<span class="token punctuation">[</span>version<span class="token punctuation">]</span>     <span class="token key atrule">values</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"v1"</span><span class="token punctuation">,</span> <span class="token string">"v2"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
          <category> istio </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> 服务网格 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Istio详细使用-流量管理（二）</title>
      <link href="/kubernetes/istio-xiang-xi-shi-yong-er.html"/>
      <url>/kubernetes/istio-xiang-xi-shi-yong-er.html</url>
      
        <content type="html"><![CDATA[<h1 id="Istio详细使用-流量管理（二）"><a href="#Istio详细使用-流量管理（二）" class="headerlink" title="Istio详细使用-流量管理（二）"></a>Istio详细使用-流量管理（二）</h1><p>上篇介绍了istio的基础和网关的安装，以及bookInfo的应用用例安装，接下来介绍流量管理，比如熔断器、超时和重试，并且能轻松的设置重要的任务， 如 A/B 测试、金丝雀发布、基于流量百分比切分的分阶段发布等。</p><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p>为了在网格中导流，Istio 需要知道所有的 endpoint 在哪和属于哪个服务。 为了定位到 <strong>service registry</strong>（服务注册中心）， Istio 会连接到一个服务发现系统。例如，如果您在 Kubernetes 集群上安装了 Istio， 那么它将自动检测该集群中的服务和 endpoint。使用此服务注册中心，Envoy 代理可以将流量定向到相关服务。</p><blockquote><p>Istio 维护了一个内部服务注册表 (service registry)，它包含在服务网格中运行的一组<a href="https://istio.io/zh/docs/reference/glossary/#service">服务</a>及其相应的<a href="https://istio.io/zh/docs/reference/glossary/#service-endpoint">服务 endpoints</a>。Istio 使用服务注册表生成 <a href="https://istio.io/zh/docs/reference/glossary/#envoy">Envoy</a> 配置。</p></blockquote><p>本章节的其余部分将分别介绍每个流量管理 API 以及如何使用它们。这些资源包括：</p><ul><li><a href="https://istio.io/latest/zh/docs/concepts/traffic-management/#virtual-services">虚拟服务</a>(Virtual Service) 在istio服务网格中定义路由规则，控制路由如何路由到服务上</li><li><a href="https://istio.io/latest/zh/docs/concepts/traffic-management/#destination-rules">目标规则</a>(Destination Rule）是VirtualService路由生效后，配置应用与请求的策略集</li><li><a href="https://istio.io/latest/zh/docs/concepts/traffic-management/#gateways">网关</a>(Gateway) 为HTTP/TCP流量配置负载均衡器，最常见的是在网格的边缘的操作，以启用应用程序的入口流量</li><li><a href="https://istio.io/latest/zh/docs/concepts/traffic-management/#service-entries">服务入口</a>(ServiceEntry) 是通常用于在Istio服务网格之外启用对服务的请求 参考类似k8s的service</li><li><a href="https://istio.io/latest/zh/docs/reference/config/networking/workload-entry/">外部工作负载</a>(WorkloadEntry) 参考类似k8s中svc+ep</li><li><a href="https://istio.io/latest/zh/docs/reference/config/networking/workload-group/#WorkloadGroup">外部工作负载组</a>(WorkloadGroup) 官方参考主要用于虚机加入网格情况（不进行介绍）</li><li><a href="https://istio.io/latest/zh/docs/concepts/traffic-management/#sidecars">Sidecar</a>(Sidecar)用于配置进出网格的流量信息，可针对流量进行更精细的配置</li></ul><h2 id="2-虚拟服务-Virtual-Service"><a href="#2-虚拟服务-Virtual-Service" class="headerlink" title="2. 虚拟服务(Virtual Service)"></a>2. 虚拟服务(Virtual Service)</h2><p>虚拟服务让您配置如何在服务网格内将请求路由到服务， 这基于 Istio 和平台提供的基本的连通性和服务发现能力。每个虚拟服务包含一组路由规则， Istio 按顺序评估它们，Istio 将每个给定的<strong>请求匹配到虚拟服务指定的实际目标地址</strong>。</p><h3 id="2-1-示例"><a href="#2-1-示例" class="headerlink" title="2.1 示例"></a>2.1 示例</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Gateway<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> bookinfo<span class="token punctuation">-</span>gateway  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> istio<span class="token punctuation">-</span>system<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token comment"># The selector matches the ingress gateway pod labels.</span>  <span class="token comment"># If you installed Istio using Helm following the standard documentation, this would be "istio=ingress"</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">istio</span><span class="token punctuation">:</span> ingress <span class="token comment"># use istio default controller</span>  <span class="token key atrule">servers</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">port</span><span class="token punctuation">:</span>      <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token number">80</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> http      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> HTTP    <span class="token key atrule">hosts</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token string">"*"</span><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> bookinfo  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> istio<span class="token punctuation">-</span>xjy<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token string">"*"</span>  <span class="token key atrule">gateways</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> istio<span class="token punctuation">-</span>system/bookinfo<span class="token punctuation">-</span>gateway  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">match</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">uri</span><span class="token punctuation">:</span>        <span class="token key atrule">exact</span><span class="token punctuation">:</span> /productpage    <span class="token punctuation">-</span> <span class="token key atrule">uri</span><span class="token punctuation">:</span>        <span class="token key atrule">prefix</span><span class="token punctuation">:</span> /static    <span class="token punctuation">-</span> <span class="token key atrule">uri</span><span class="token punctuation">:</span>        <span class="token key atrule">exact</span><span class="token punctuation">:</span> /login    <span class="token punctuation">-</span> <span class="token key atrule">uri</span><span class="token punctuation">:</span>        <span class="token key atrule">exact</span><span class="token punctuation">:</span> /logout    <span class="token punctuation">-</span> <span class="token key atrule">uri</span><span class="token punctuation">:</span>        <span class="token key atrule">prefix</span><span class="token punctuation">:</span> /api/v1/products    <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> productpage        <span class="token key atrule">port</span><span class="token punctuation">:</span>          <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token number">9080</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1alpha3<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> helloworld<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> helloworld   <span class="token comment"># 配置svc名称 或则ip之类</span>  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">match</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">headers</span><span class="token punctuation">:</span>        <span class="token key atrule">cookie</span><span class="token punctuation">:</span>          <span class="token key atrule">regex</span><span class="token punctuation">:</span> <span class="token string">"^(.*?;)?(email=[^;]*@some-company-name.com)(;.*)?$"</span>    <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> helloworld        <span class="token key atrule">subset</span><span class="token punctuation">:</span> v1        <span class="token key atrule">weight</span><span class="token punctuation">:</span> <span class="token number">50</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> helloworld        <span class="token key atrule">subset</span><span class="token punctuation">:</span> v2        <span class="token key atrule">weight</span><span class="token punctuation">:</span> <span class="token number">50</span>  <span class="token punctuation">-</span> <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> helloworld        <span class="token key atrule">subset</span><span class="token punctuation">:</span> v1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-2-hosts字段"><a href="#2-2-hosts字段" class="headerlink" title="2.2 hosts字段"></a>2.2 hosts字段</h3><p>使用 <code>hosts</code> 字段列举虚拟服务的主机——即用户指定的目标或是路由规则设定的目标。 这是客户端向服务发送请求时使用的一个或多个地址。</p><p>虚拟服务主机名可以是 IP 地址、DNS 名称，或者依赖于平台的一个简称（例如 Kubernetes 服务的短名称，ServiceEntries声明主机），隐式或显式地指向一个完全限定域名（FQDN）。您也可以使用通配符（“*”）前缀， 让您创建一组匹配所有服务的路由规则(比如：reviews.default.svc.cluster.local 为了避免潜在的错误配置，建议始终使用完全限定的域名而不是短域名。)</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">hosts</span><span class="token punctuation">:</span><span class="token punctuation">-</span> reviews<span class="token punctuation">-</span> bookinfo.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-3-匹配规则"><a href="#2-3-匹配规则" class="headerlink" title="2.3 匹配规则"></a>2.3 匹配规则</h3><p>在 <code>http</code> 字段包含了虚拟服务的路由规则，用来描述匹配条件和路由行为， 它们把 HTTP/1.1、HTTP2 和 gRPC 等流量发送到 hosts 字段指定的目标。</p><h4 id="2-3-1-根据header匹配"><a href="#2-3-1-根据header匹配" class="headerlink" title="2.3.1 根据header匹配"></a>2.3.1 根据<strong>header</strong>匹配</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1alpha3<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> helloworld<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> helloworld   <span class="token comment"># 配置svc名称 或则ip之类</span>  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">match</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">headers</span><span class="token punctuation">:</span>  <span class="token comment"># 根据请求头部访问</span>        <span class="token key atrule">cookie</span><span class="token punctuation">:</span>          <span class="token key atrule">regex</span><span class="token punctuation">:</span> <span class="token string">"^(.*?;)?(email=[^;]*@some-company-name.com)(;.*)?$"</span>          <span class="token punctuation">...</span><span class="token punctuation">...</span>.=<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>参考其他路由规则：</p><p>HTTP:<a href="https://istio.io/latest/docs/reference/config/networking/virtual-service/#HTTPMatchRequest">https://istio.io/latest/docs/reference/config/networking/virtual-service/#HTTPMatchRequest</a></p><p>TCP:<a href="https://istio.io/latest/docs/reference/config/networking/virtual-service/#TCPRoute">https://istio.io/latest/docs/reference/config/networking/virtual-service/#TCPRoute</a></p><p>TLS:<a href="https://istio.io/latest/docs/reference/config/networking/virtual-service/#TLSRoute">https://istio.io/latest/docs/reference/config/networking/virtual-service/#TLSRoute</a></p></blockquote><h4 id="2-3-2-根据uri匹配"><a href="#2-3-2-根据uri匹配" class="headerlink" title="2.3.2 根据uri匹配"></a>2.3.2 根据<strong>uri</strong>匹配</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1alpha3<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> helloworld<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> helloworld   <span class="token comment"># 配置svc名称 或则ip之类</span>  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">match</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">uri</span><span class="token punctuation">:</span>   <span class="token comment"># 根据url 前缀匹配</span>        <span class="token key atrule">prefix</span><span class="token punctuation">:</span> /api/v1        <span class="token punctuation">...</span>..<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-3-3-根据sourceLabels-x2F-sourceNamespace-匹配"><a href="#2-3-3-根据sourceLabels-x2F-sourceNamespace-匹配" class="headerlink" title="2.3.3 根据sourceLabels/ sourceNamespace 匹配"></a>2.3.3 根据<strong>sourceLabels</strong>/ <strong>sourceNamespace</strong> 匹配</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1alpha3<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> helloworld<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> helloworld   <span class="token comment"># 配置svc名称 或则ip之类</span>  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">match</span><span class="token punctuation">:</span>      <span class="token key atrule">sourceLabels</span><span class="token punctuation">:</span>  <span class="token comment"># 根据请求服务的标签匹配</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> test      <span class="token key atrule">sourceNamespace</span><span class="token punctuation">:</span> default   <span class="token comment"># 根据请求的命名空间匹配</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>具体详细使用规则可以参考文档： <a href="https://istio.io/latest/zh/docs/reference/config/networking/virtual-service/#HTTPMatchRequest">https://istio.io/latest/zh/docs/reference/config/networking/virtual-service/#HTTPMatchRequest</a></p></blockquote><h3 id="2-4-路由规则"><a href="#2-4-路由规则" class="headerlink" title="2.4 路由规则"></a>2.4 路由规则</h3><p>可以将匹配的流量按照一定的规则进行分发到对应的服务中心。</p><p><strong>路由规则</strong>按从<strong>上到下的顺序选择</strong>，虚拟服务中定义的第一条规则有最高优先级。 不满足第一个路由规则的流量均流向下一一个默认的目标，该目标在第二条规则中指定。</p><p><strong>subset</strong>  需要设置subset，否则不会以pod作为基础去检测，而是以service来检测异常</p><h4 id="2-4-1-服务间的流量拆分"><a href="#2-4-1-服务间的流量拆分" class="headerlink" title="2.4.1 服务间的流量拆分"></a>2.4.1 服务间的流量拆分</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> reviews<span class="token punctuation">-</span>route<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> reviews.prod.svc.cluster.local  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> reviews.prod.svc.cluster.local        <span class="token key atrule">subset</span><span class="token punctuation">:</span> v2  <span class="token comment"># # 需要设置subset，否则不会以pod作为基础去检测，而是以service来检测异常</span>      <span class="token key atrule">weight</span><span class="token punctuation">:</span> <span class="token number">25</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> reviews.prod.svc.cluster.local        <span class="token key atrule">subset</span><span class="token punctuation">:</span> v1      <span class="token key atrule">weight</span><span class="token punctuation">:</span> <span class="token number">75</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-5-超时与重试"><a href="#2-5-超时与重试" class="headerlink" title="2.5 超时与重试"></a>2.5 超时与重试</h3><h4 id="2-5-1-超时"><a href="#2-5-1-超时" class="headerlink" title="2.5.1 超时"></a>2.5.1 超时</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 超时</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>productpage<span class="token punctuation">-</span>rule  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> istio<span class="token punctuation">-</span>system<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> productpage.prod.svc.cluster.local <span class="token comment"># ignores rule namespace</span>  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">timeout</span><span class="token punctuation">:</span> 5s  <span class="token comment"># 设置超时</span>    <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> productpage.prod.svc.cluster.local<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-5-2-重试"><a href="#2-5-2-重试" class="headerlink" title="2.5.2 重试"></a>2.5.2 重试</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 重试  https://istio.io/latest/zh/docs/reference/config/networking/virtual-service/#HTTPRetry</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ratings<span class="token punctuation">-</span>route<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> ratings.prod.svc.cluster.local  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> ratings.prod.svc.cluster.local        <span class="token key atrule">subset</span><span class="token punctuation">:</span> v1    <span class="token key atrule">retries</span><span class="token punctuation">:</span>      <span class="token key atrule">attempts</span><span class="token punctuation">:</span> <span class="token number">3</span>  <span class="token comment"># 给定重试的次数，重试之间的间隔将自动确定(25ms以上)</span>      <span class="token key atrule">perTryTimeout</span><span class="token punctuation">:</span> 2s <span class="token comment"># 重试超时时间 </span>      <span class="token key atrule">retryOn</span><span class="token punctuation">:</span> gateway<span class="token punctuation">-</span>error<span class="token punctuation">,</span>connect<span class="token punctuation">-</span>failure<span class="token punctuation">,</span>refused<span class="token punctuation">-</span>stream <span class="token comment"># 重试策略，具体可以参考envoy https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#x-envoy-retry-on</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-6-延迟、故障注入"><a href="#2-6-延迟、故障注入" class="headerlink" title="2.6 延迟、故障注入"></a>2.6 延迟、故障注入</h3><h4 id="2-6-1-延迟注入"><a href="#2-6-1-延迟注入" class="headerlink" title="2.6.1 延迟注入"></a>2.6.1 延迟注入</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 延迟注入  https://istio.io/latest/zh/docs/reference/config/networking/virtual-service/#HTTPFaultInjection-Delay</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> reviews<span class="token punctuation">-</span>route<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> reviews.prod.svc.cluster.local  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">match</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">sourceLabels</span><span class="token punctuation">:</span>        <span class="token key atrule">env</span><span class="token punctuation">:</span> prod    <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> reviews.prod.svc.cluster.local        <span class="token key atrule">subset</span><span class="token punctuation">:</span> v1    <span class="token key atrule">fault</span><span class="token punctuation">:</span>      <span class="token key atrule">delay</span><span class="token punctuation">:</span>        <span class="token key atrule">percentage</span><span class="token punctuation">:</span>          <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token number">10</span>   <span class="token comment"># 10%的流量会进行延迟5秒返回</span>        <span class="token key atrule">fixedDelay</span><span class="token punctuation">:</span> 5s  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-6-2-故障注入"><a href="#2-6-2-故障注入" class="headerlink" title="2.6.2 故障注入"></a>2.6.2 故障注入</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 故障注入 https://istio.io/latest/zh/docs/reference/config/networking/virtual-service/#HTTPFaultInjection-Abort</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ratings<span class="token punctuation">-</span>route<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> ratings.prod.svc.cluster.local  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> ratings.prod.svc.cluster.local        <span class="token key atrule">subset</span><span class="token punctuation">:</span> v1    <span class="token key atrule">fault</span><span class="token punctuation">:</span>      <span class="token key atrule">abort</span><span class="token punctuation">:</span>        <span class="token key atrule">percentage</span><span class="token punctuation">:</span>          <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token number">10</span> <span class="token comment"># 10%的流量返回400 错误状态码</span>        <span class="token key atrule">httpStatus</span><span class="token punctuation">:</span> <span class="token number">400</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-7-流量镜像"><a href="#2-7-流量镜像" class="headerlink" title="2.7 流量镜像"></a>2.7 流量镜像</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> reviews<span class="token punctuation">-</span>route<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> reviews.prod.svc.cluster.local  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> reviews.prod.svc.cluster.local        <span class="token key atrule">subset</span><span class="token punctuation">:</span> v1      <span class="token key atrule">weight</span><span class="token punctuation">:</span> <span class="token number">100</span>    <span class="token key atrule">mirror</span><span class="token punctuation">:</span>  <span class="token comment"># 流量镜像，访问了v1之后 还会在额外同步相同请求访问到v2中</span>      <span class="token key atrule">host</span><span class="token punctuation">:</span> reviews.prod.svc.cluster.local      <span class="token key atrule">subset</span><span class="token punctuation">:</span> v2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-8-规则委托"><a href="#2-8-规则委托" class="headerlink" title="2.8 规则委托"></a>2.8 规则委托</h3><p>描述委托VirtualService。以下路由规则通过名为<code>productpage</code>的委派VirtualService将流量转发到<code>/productpage</code>，通过名为<code>reviews</code>的委派VirtualService将流量转发到<code>/reviews</code>。 <a href="https://istio.io/latest/zh/docs/reference/config/networking/virtual-service/#Delegate">https://istio.io/latest/zh/docs/reference/config/networking/virtual-service/#Delegate</a></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1alpha3<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> bookinfo<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token string">"bookinfo.com"</span>  <span class="token key atrule">gateways</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> mygateway  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">match</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">uri</span><span class="token punctuation">:</span>        <span class="token key atrule">prefix</span><span class="token punctuation">:</span> <span class="token string">"/productpage"</span>    <span class="token key atrule">delegate</span><span class="token punctuation">:</span> <span class="token comment"># 只有“路由”和“重定向”为空时才能设置，并且VirtualService委托的路由规则将与当前委托的路由规则合并。</span>       <span class="token key atrule">name</span><span class="token punctuation">:</span> productpage       <span class="token key atrule">namespace</span><span class="token punctuation">:</span> nsA  <span class="token punctuation">-</span> <span class="token key atrule">match</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">uri</span><span class="token punctuation">:</span>        <span class="token key atrule">prefix</span><span class="token punctuation">:</span> <span class="token string">"/reviews"</span>    <span class="token key atrule">delegate</span><span class="token punctuation">:</span>        <span class="token key atrule">name</span><span class="token punctuation">:</span> reviews        <span class="token key atrule">namespace</span><span class="token punctuation">:</span> nsB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1alpha3<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> productpage  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> nsA<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">match</span><span class="token punctuation">:</span>     <span class="token punctuation">-</span> <span class="token key atrule">uri</span><span class="token punctuation">:</span>        <span class="token key atrule">prefix</span><span class="token punctuation">:</span> <span class="token string">"/productpage/v1/"</span>    <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> productpage<span class="token punctuation">-</span>v1.nsA.svc.cluster.local  <span class="token punctuation">-</span> <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> productpage.nsA.svc.cluster.local<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1alpha3<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> reviews  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> nsB<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> reviews.nsB.svc.cluster.local<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-9-重定向与重写"><a href="#2-9-重定向与重写" class="headerlink" title="2.9 重定向与重写"></a>2.9 重定向与重写</h3><h4 id="2-9-1-重定向"><a href="#2-9-1-重定向" class="headerlink" title="2.9.1 重定向"></a>2.9.1 重定向</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 重定向 https://istio.io/latest/zh/docs/reference/config/networking/virtual-service/#HTTPRedirect</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ratings<span class="token punctuation">-</span>route<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> ratings.prod.svc.cluster.local  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">match</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">uri</span><span class="token punctuation">:</span>        <span class="token key atrule">exact</span><span class="token punctuation">:</span> /v1/getProductRatings    <span class="token key atrule">redirect</span><span class="token punctuation">:</span>      <span class="token key atrule">uri</span><span class="token punctuation">:</span> /v1/bookRatings  <span class="token comment"># 将ratings的/v1/getProductRatings请求 重定向到newratings的 /v1/bookRatings地址上</span>      <span class="token key atrule">authority</span><span class="token punctuation">:</span> newratings.default.svc.cluster.local <span class="token comment"># 覆盖主机部分</span>  <span class="token punctuation">...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-9-2-重写"><a href="#2-9-2-重写" class="headerlink" title="2.9.2 重写"></a>2.9.2 重写</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 重写 https://istio.io/latest/zh/docs/reference/config/networking/virtual-service/#HTTPRewrite</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ratings<span class="token punctuation">-</span>route<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> ratings.prod.svc.cluster.local  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">match</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">uri</span><span class="token punctuation">:</span>        <span class="token key atrule">prefix</span><span class="token punctuation">:</span> /ratings    <span class="token key atrule">rewrite</span><span class="token punctuation">:</span>      <span class="token key atrule">uri</span><span class="token punctuation">:</span> /v1/bookRatings  <span class="token comment"># 重写uri请求</span>      <span class="token key atrule">authority</span><span class="token punctuation">:</span> newratings.default.svc.cluster.local <span class="token comment"># 覆盖主机部分</span>    <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> ratings.prod.svc.cluster.local        <span class="token key atrule">subset</span><span class="token punctuation">:</span> v1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-目标规则-Destination-Rule"><a href="#3-目标规则-Destination-Rule" class="headerlink" title="3. 目标规则(Destination Rule)"></a>3. 目标规则(Destination Rule)</h2><p>DestinationRule定义了在路由发生后应用于服务的流量的策略。这些规则指定负载平衡的配置、侧车的连接池大小，以及用于从负载平衡池中检测和排除不健康主机的离群值检测设置。这些策略包含了断路器、负载均衡和TLS配置相关内容。</p><h3 id="3-1-示例"><a href="#3-1-示例" class="headerlink" title="3.1 示例"></a>3.1 示例</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1alpha3<span class="token key atrule">kind</span><span class="token punctuation">:</span> DestinationRule<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>destination<span class="token punctuation">-</span>rule<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">host</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>svc  <span class="token key atrule">trafficPolicy</span><span class="token punctuation">:</span>    <span class="token key atrule">loadBalancer</span><span class="token punctuation">:</span>  <span class="token comment"># 负载配置 https://istio.io/latest/zh/docs/reference/config/networking/destination-rule/#LoadBalancerSettings</span>      <span class="token key atrule">simple</span><span class="token punctuation">:</span> RANDOM   <span class="token key atrule">subsets</span><span class="token punctuation">:</span> <span class="token comment"># 需要设置subset，否则不会以pod作为基础去检测，而是以service来检测异常</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> v1    <span class="token key atrule">labels</span><span class="token punctuation">:</span> <span class="token comment"># 每个子集都是基于一个或多个 labels 定义的，在 Kubernetes 中它是附加到像 Pod 这种对象上的键/值对。</span>      <span class="token key atrule">version</span><span class="token punctuation">:</span> v1  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> v2    <span class="token key atrule">labels</span><span class="token punctuation">:</span>      <span class="token key atrule">version</span><span class="token punctuation">:</span> v2    <span class="token key atrule">trafficPolicy</span><span class="token punctuation">:</span>      <span class="token key atrule">loadBalancer</span><span class="token punctuation">:</span>        <span class="token key atrule">simple</span><span class="token punctuation">:</span> ROUND_ROBIN  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> v3    <span class="token key atrule">labels</span><span class="token punctuation">:</span>      <span class="token key atrule">version</span><span class="token punctuation">:</span> v3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-2-负载连接配置"><a href="#3-2-负载连接配置" class="headerlink" title="3.2 负载连接配置"></a>3.2 负载连接配置</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># https://istio.io/latest/zh/docs/reference/config/networking/destination-rule/#ConnectionPoolSettings</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> DestinationRule<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> bookinfo<span class="token punctuation">-</span>redis<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">host</span><span class="token punctuation">:</span> myredissrv.prod.svc.cluster.local  <span class="token key atrule">trafficPolicy</span><span class="token punctuation">:</span>    <span class="token key atrule">connectionPool</span><span class="token punctuation">:</span>      <span class="token key atrule">tcp</span><span class="token punctuation">:</span>        <span class="token key atrule">maxConnections</span><span class="token punctuation">:</span> <span class="token number">100</span>        <span class="token key atrule">connectTimeout</span><span class="token punctuation">:</span> 30ms        <span class="token key atrule">tcpKeepalive</span><span class="token punctuation">:</span>          <span class="token key atrule">time</span><span class="token punctuation">:</span> 7200s          <span class="token key atrule">interval</span><span class="token punctuation">:</span> 75s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-3-断路器"><a href="#3-3-断路器" class="headerlink" title="3.3 断路器"></a>3.3 断路器</h3><p>一种断路器实现，用于跟踪上游服务中每个单独主机的状态。HTTP服务和TCP服务均可使用。对于HTTP服务，对于API调用连续返回5xx错误的主机将在预定义的时间段内从池中弹出。对于TCP服务，在测量连续错误度量时，连接超时或到给定主机的连接失败算作错误。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># https://istio.io/latest/zh/docs/reference/config/networking/destination-rule/#OutlierDetection</span><span class="token comment"># 下面的规则将连接池大小设置为100个HTTP1连接，并且不超过10个请求/连接到“reviews”服务。此外，它还设置了1000个并发HTTP2请求的限制，并将上游主机配置为每5分钟扫描一次，以便任何连续7次失败并出现502、503或504错误码的主机将被驱逐15分钟。</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> DestinationRule<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> reviews<span class="token punctuation">-</span>cb<span class="token punctuation">-</span>policy<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">host</span><span class="token punctuation">:</span> reviews.prod.svc.cluster.local  <span class="token key atrule">trafficPolicy</span><span class="token punctuation">:</span>    <span class="token key atrule">connectionPool</span><span class="token punctuation">:</span>      <span class="token key atrule">tcp</span><span class="token punctuation">:</span>        <span class="token key atrule">maxConnections</span><span class="token punctuation">:</span> <span class="token number">100</span>      <span class="token key atrule">http</span><span class="token punctuation">:</span>        <span class="token key atrule">http2MaxRequests</span><span class="token punctuation">:</span> <span class="token number">1000</span>        <span class="token key atrule">maxRequestsPerConnection</span><span class="token punctuation">:</span> <span class="token number">10</span>    <span class="token key atrule">outlierDetection</span><span class="token punctuation">:</span>      <span class="token key atrule">consecutive5xxErrors</span><span class="token punctuation">:</span> <span class="token number">7</span> <span class="token comment"># 5xx的错误失败7次，即认为该endpoint有问题</span>      <span class="token key atrule">interval</span><span class="token punctuation">:</span> 5m <span class="token comment"># 5分钟检测一次（实际验证的话，如果连续3个请求是失败的话，也可以触发异常）</span>      <span class="token key atrule">baseEjectionTime</span><span class="token punctuation">:</span> 15m <span class="token comment">#（异常之后，将该endpoint”隔离“的时间）</span>      <span class="token key atrule">maxEjectionPercent</span><span class="token punctuation">:</span> <span class="token number">100</span> <span class="token comment">#（最多允许多少个endpoint异常被隔离，百分比）</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-网关-Gateway"><a href="#4-网关-Gateway" class="headerlink" title="4. 网关(Gateway)"></a>4. 网关(Gateway)</h2><p><code>GateWay</code>为HTTP/TCP配置了一个负载均衡器。多数情况下载网格边缘进行操作，用于启用一个服务入口<code>ingress</code>流量。</p><p>与Kubernetes Ingress 不同，lstio Gateway只配置四层到六层的功能(例如开放端口或者TLS 配置)。绑定一个<code>VitualService</code> 到<code>Gateway</code> 上，用户就可以使用标准的Istio 规则来控制进入的HTTP和TCP流量。</p><h3 id="4-1-示例"><a href="#4-1-示例" class="headerlink" title="4.1 示例"></a>4.1 示例</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1alpha3<span class="token key atrule">kind</span><span class="token punctuation">:</span> Gateway<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> httpbin<span class="token punctuation">-</span>gateway<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">istio</span><span class="token punctuation">:</span> ingressgateway <span class="token comment"># use Istio default gateway implementation</span>  <span class="token key atrule">servers</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">port</span><span class="token punctuation">:</span>      <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token number">80</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> http      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> HTTP    <span class="token key atrule">hosts</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token string">"httpbin.example.com"</span>    <span class="token key atrule">tls</span><span class="token punctuation">:</span>      <span class="token key atrule">mode</span><span class="token punctuation">:</span> SIMPLE      <span class="token key atrule">credentialName</span><span class="token punctuation">:</span> ext<span class="token punctuation">-</span>host<span class="token punctuation">-</span>cert <span class="token comment"># 这个网关配置让 HTTPS 流量从 httpbin.example.com 通过 443 端口流入网格， 但没有为请求指定任何路由规则。要指定路由并让网关按预期工作，您必须把网关绑定到虚拟服务上。 正如下面的示例所示，使用虚拟服务的 gateways 字段进行设置：  </span>  <span class="token punctuation">---</span>   <span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1alpha3<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> httpbin<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token string">"httpbin.example.com"</span>  <span class="token key atrule">gateways</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> httpbin<span class="token punctuation">-</span>gateway  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">match</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">uri</span><span class="token punctuation">:</span>        <span class="token key atrule">prefix</span><span class="token punctuation">:</span> /status    <span class="token punctuation">-</span> <span class="token key atrule">uri</span><span class="token punctuation">:</span>        <span class="token key atrule">prefix</span><span class="token punctuation">:</span> /delay    <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">port</span><span class="token punctuation">:</span>          <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token number">8000</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> httpbin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-2-网关加固"><a href="#4-2-网关加固" class="headerlink" title="4.2 网关加固"></a>4.2 网关加固</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment">#  创建secret kubectl create -n istio-system secret tls httpbin-credential \</span><span class="token comment">#   --key=example_certs1/httpbin.example.com.key \</span><span class="token comment">#   --cert=example_certs1/httpbin.example.com.crt</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1alpha3<span class="token key atrule">kind</span><span class="token punctuation">:</span> Gateway<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> mygateway<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">istio</span><span class="token punctuation">:</span> ingressgateway <span class="token comment"># use istio default ingress gateway controller </span>  <span class="token key atrule">servers</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">port</span><span class="token punctuation">:</span>      <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token number">443</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> https      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> HTTPS    <span class="token key atrule">tls</span><span class="token punctuation">:</span>      <span class="token key atrule">mode</span><span class="token punctuation">:</span> SIMPLE      <span class="token key atrule">credentialName</span><span class="token punctuation">:</span> httpbin<span class="token punctuation">-</span>credential <span class="token comment"># secret 名称</span>    <span class="token key atrule">hosts</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> httpbin.example.com      <span class="token punctuation">---</span>  <span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1alpha3<span class="token key atrule">kind</span><span class="token punctuation">:</span> Gateway<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> mygateway<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">istio</span><span class="token punctuation">:</span> ingressgateway <span class="token comment"># use istio default ingress gateway controller </span>  <span class="token key atrule">servers</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">port</span><span class="token punctuation">:</span>      <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token number">443</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> https      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> HTTPS    <span class="token key atrule">tls</span><span class="token punctuation">:</span>      <span class="token key atrule">mode</span><span class="token punctuation">:</span> SIMPLE <span class="token comment"># enables HTTPS on this port</span>      <span class="token key atrule">serverCertificate</span><span class="token punctuation">:</span> /etc/certs/servercert.pem      <span class="token key atrule">privateKey</span><span class="token punctuation">:</span> /etc/certs/privatekey.pem    <span class="token key atrule">hosts</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> httpbin.example.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-服务入口-ServiceEntry"><a href="#5-服务入口-ServiceEntry" class="headerlink" title="5. 服务入口(ServiceEntry)"></a>5. 服务入口(ServiceEntry)</h2><p><code>Istio</code>内部会维护一个服务注册表，可以用<code>ServiceEntry</code>向其中<strong>加入额外的条目</strong>。通常这个对象用来启用对Isto服务网格之外的服务发出请求ServiceEntry中使用hosts字段来指定目标，字段值可以是一个完全限定名，也可以是个通配符域名。<br>其中包含的白名单，包含一或多个允许网格中服务访问的服务。<br>只要ServiceEntry涉及到了匹配host的服务，就可以和VirtualService以及DestinationRule配合工作。</p><img src="/kubernetes/istio-xiang-xi-shi-yong-er/image-20230808171137396.png" class="" title="image-20230808171137396"><h3 id="5-1-示例"><a href="#5-1-示例" class="headerlink" title="5.1 示例"></a>5.1 示例</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment">#  访问foo.bar.com可以访问到其他endpoints</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceEntry<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> external<span class="token punctuation">-</span>svc<span class="token punctuation">-</span>dns<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> foo.bar.com  <span class="token key atrule">location</span><span class="token punctuation">:</span> MESH_EXTERNAL  <span class="token comment"># 外部服务</span>  <span class="token key atrule">ports</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token number">80</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> http    <span class="token key atrule">protocol</span><span class="token punctuation">:</span> HTTP  <span class="token key atrule">resolution</span><span class="token punctuation">:</span> DNS  <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">address</span><span class="token punctuation">:</span> us.foo.bar.com    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token key atrule">http</span><span class="token punctuation">:</span> <span class="token number">8080</span>  <span class="token punctuation">-</span> <span class="token key atrule">address</span><span class="token punctuation">:</span> uk.foo.bar.com    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token key atrule">http</span><span class="token punctuation">:</span> <span class="token number">9080</span>  <span class="token punctuation">-</span> <span class="token key atrule">address</span><span class="token punctuation">:</span> in.foo.bar.com    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token key atrule">http</span><span class="token punctuation">:</span> <span class="token number">7080</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># https://istio.io/latest/zh/docs/reference/config/networking/service-entry/#ServicePort</span><span class="token comment"># https://istio.io/latest/zh/docs/tasks/traffic-management/egress/egress-control/</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1alpha3<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceEntry<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> external<span class="token punctuation">-</span>svc<span class="token punctuation">-</span>mongocluster<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token comment"># DNS名称</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> mymongodb.somedomain <span class="token comment"># not used</span>  <span class="token key atrule">addresses</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> 192.192.192.192/24 <span class="token comment"># VIPs</span>  <span class="token comment"># 关联的端口</span>  <span class="token key atrule">ports</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token number">27018</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> mongodb    <span class="token comment"># 端口协议：HTTP, HTTPS, HTTP2, GRPC, MONGO, TCP或TLS</span>    <span class="token key atrule">protocol</span><span class="token punctuation">:</span> MONGO  <span class="token comment"># 网格的角度，内部 or 外部服务，MESH_INTERNAL / MESH_EXTERNAL</span>  <span class="token key atrule">location</span><span class="token punctuation">:</span> MESH_INTERNAL  <span class="token comment"># 主机的服务发现模式： NONE / STATIC / DNS</span>  <span class="token key atrule">resolution</span><span class="token punctuation">:</span> STATIC  <span class="token comment"># 外部服务在网格内的域名和网格外的域名不同，在 endpoints 中配置原始域名：</span>  <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">address</span><span class="token punctuation">:</span> us.foo.bar.com    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token key atrule">https</span><span class="token punctuation">:</span> <span class="token number">8080</span>  <span class="token punctuation">-</span> <span class="token key atrule">address</span><span class="token punctuation">:</span> uk.foo.bar.com    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token key atrule">https</span><span class="token punctuation">:</span> <span class="token number">9080</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><ol><li>使用默认的Allow-all的访问外部服务控制使用简单，但缺点，即丢失了对外部服务流量的 Istio 监控和控制；比如，允许调用所有未知的外部服务，外部服务的调用没有记录到 Mixer 的日志中。</li><li>在服务调用过程中会使用到外部的服务，外部服务和本身集群内的服务无任何关系，通过ServiceEntry将该服务注册到 Istio 网格，在集群内部就好像访问自身的服务一样，我们还可以结合VirtualService、DestinationRule进而对网格内调用外部服务使用一些高级的治理能力，例如限流、重试等等对服务治理能力支持。– 总体可以认为是k8s的svc+endpoint类似功能</li><li>现实的世界中，并不能做到所有的业务都容器化，Istio也意识到了这个问题，所以正在支持非容器部署的业务。除了ServiceEntry，又增加了WorkloadEntry，从而支持将vm部署的业务纳入mesh中。</li><li>管理外部流量<a href="https://istio.io/latest/zh/docs/tasks/traffic-management/egress/egress-control/#manage-traffic-to-external-services">https://istio.io/latest/zh/docs/tasks/traffic-management/egress/egress-control/#manage-traffic-to-external-services</a></li></ol></blockquote><h2 id="6-外部工作负载-WorkloadEntry"><a href="#6-外部工作负载-WorkloadEntry" class="headerlink" title="6. 外部工作负载(WorkloadEntry)"></a>6. 外部工作负载(WorkloadEntry)</h2><p><code>WorkloadEntry</code>使操作员能够描述单个非kubernetes工作负载的属性，例如<strong>虚拟机</strong>或<strong>裸机服务器</strong>，把它<strong>加载到网格</strong>中。WorkloadEntry必须伴随着Istio ServiceEntry，它通过适当的标签选择工作负载，并为MESH_INTERNAL服务(主机名、端口属性等)提供服务定义。ServiceEntry对象可以根据服务条目中指定的标签选择器选择多个工作负载条目以及Kubernetes pod。</p><h3 id="6-1-示例"><a href="#6-1-示例" class="headerlink" title="6.1 示例"></a>6.1 示例</h3><p>通过details-svc访问到对应的虚拟机或物理机上</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># https://istio.io/latest/zh/docs/reference/config/networking/workload-entry/</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> WorkloadEntry<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> details<span class="token punctuation">-</span>svc<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token comment"># use of the service account indicates that the workload has a</span>  <span class="token comment"># sidecar proxy bootstrapped with this service account. Pods with</span>  <span class="token comment"># sidecars will automatically communicate with the workload using</span>  <span class="token comment"># istio mutual TLS.</span>  <span class="token key atrule">serviceAccount</span><span class="token punctuation">:</span> details<span class="token punctuation">-</span>legacy  <span class="token key atrule">address</span><span class="token punctuation">:</span> 172.31.12.217  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token key atrule">http</span><span class="token punctuation">:</span> <span class="token number">4000</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> zstone<span class="token punctuation">-</span>nginx    <span class="token key atrule">instance-id</span><span class="token punctuation">:</span> vm1<span class="token punctuation">---</span><span class="token comment"># 关联到serviceEntry</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceEntry<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> details<span class="token punctuation">-</span>svc<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> details.bookinfo.com  <span class="token key atrule">location</span><span class="token punctuation">:</span> MESH_INTERNAL  <span class="token key atrule">ports</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token number">80</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> http    <span class="token key atrule">protocol</span><span class="token punctuation">:</span> HTTP    <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">4000</span>  <span class="token key atrule">resolution</span><span class="token punctuation">:</span> STATIC  <span class="token key atrule">workloadSelector</span><span class="token punctuation">:</span>    <span class="token key atrule">labels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> zstone<span class="token punctuation">-</span>nginx      echo "172.31.12.216 details.bookinfo.com" <span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span> /etc/hostskubectl <span class="token punctuation">-</span>n istio<span class="token punctuation">-</span>xjy run client <span class="token punctuation">-</span><span class="token punctuation">-</span>image=ikubernetes/admin<span class="token punctuation">-</span>box <span class="token punctuation">-</span>it <span class="token punctuation">-</span><span class="token punctuation">-</span>rm <span class="token punctuation">-</span><span class="token punctuation">-</span>restart=Never <span class="token punctuation">-</span><span class="token punctuation">-</span>command <span class="token punctuation">-</span><span class="token punctuation">-</span> /bin/shcurl details.bookinfo.com   <span class="token comment"># 会变成请求到 172.31.12.217:4000服务上</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7-外部工作负载组-WorkloadGroup"><a href="#7-外部工作负载组-WorkloadGroup" class="headerlink" title="7. 外部工作负载组(WorkloadGroup)"></a>7. 外部工作负载组(WorkloadGroup)</h2><p>参考：<a href="https://istio.io/latest/zh/docs/setup/install/virtual-machine/#create-files-to-transfer-to-the-virtual-machine">https://istio.io/latest/zh/docs/setup/install/virtual-machine/#create-files-to-transfer-to-the-virtual-machine</a></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="IstioCtl使用查看代理情况"><a href="#IstioCtl使用查看代理情况" class="headerlink" title="IstioCtl使用查看代理情况"></a>IstioCtl使用查看代理情况</h3><ul><li>网格概览</li></ul><blockquote><p>istioctl proxy-status   /  istioctl ps </p><img src="/kubernetes/istio-xiang-xi-shi-yong-er/image-20231201161533880.png" class="" title="image-20231201161533880"></blockquote><ul><li>检索特定 Pod 中 Envoy 实例的集群配置的信息（service服务）</li></ul><blockquote><p>istioctl proxy-config cluster -n istio-xjy details-v1-795f98b94c-gm7rb</p><img src="/kubernetes/istio-xiang-xi-shi-yong-er/image-20231201171533715.png" class="" title="image-20231201171533715"></blockquote><ul><li>检索特定 Pod 中 Envoy 实例的 bootstrap 配置的信息：</li></ul><blockquote><p>istioctl proxy-config bootstrap -n istio-xjy details-v1-795f98b94c-gm7rb</p></blockquote><ul><li>检索特定 Pod 中 Envoy 实例的监听器配置的信息：</li></ul><blockquote><p>istioctl proxy-config listener -n istio-xjy details-v1-795f98b94c-gm7rb </p></blockquote><ul><li>检索特定 Pod 中 Envoy 实例的路由配置的信息：</li></ul><blockquote><p>istioctl proxy-config route -n istio-xjy details-v1-795f98b94c-gm7rb </p><img src="/kubernetes/istio-xiang-xi-shi-yong-er/image-20231201163223761.png" class="" title="image-20231201163223761"></blockquote><ul><li>检索特定 Pod 中 Envoy 实例的 endpoint 配置的信息：</li></ul><blockquote><p>istioctl proxy-config endpoints -n istio-xjy details-v1-795f98b94c-gm7rb </p><img src="/kubernetes/istio-xiang-xi-shi-yong-er/image-20231201163612298.png" class="" title="image-20231201163612298"></blockquote><h2 id="外部引用"><a href="#外部引用" class="headerlink" title="外部引用"></a>外部引用</h2><p>[Istio官网]: <a href="https://istio.io/latest/zh/docs/concepts/">https://istio.io/latest/zh/docs/concepts/</a>“Istio官网”<br>[流量管理]: <a href="https://istio.io/latest/zh/docs/concepts/traffic-management/#sidecars">https://istio.io/latest/zh/docs/concepts/traffic-management/#sidecars</a>“流量管理”<br>[ServiceEntry]: <a href="https://zhuanlan.zhihu.com/p/360760454">https://zhuanlan.zhihu.com/p/360760454</a>“Istio学习之CRD：ServiceEntry”</p>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
          <category> istio </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> 服务网格 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Istio详细使用-环境安装与介绍（一）</title>
      <link href="/kubernetes/istio-xiang-xi-shi-yong-yi.html"/>
      <url>/kubernetes/istio-xiang-xi-shi-yong-yi.html</url>
      
        <content type="html"><![CDATA[<h1 id="Istio详细使用（一）"><a href="#Istio详细使用（一）" class="headerlink" title="Istio详细使用（一）"></a>Istio详细使用（一）</h1><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1.介绍"></a>1.介绍</h2><h3 id="1-1-简介"><a href="#1-1-简介" class="headerlink" title="1.1 简介"></a>1.1 简介</h3><p><a href="https://istio.io/">Istio</a> 是由 Google、IBM 和 Lyft 开源的微服务管理、保护和监控框架。Istio 为希腊语，意思是”起航“。</p><p>Istio 解决了开发人员和运维人员所面临的从单体应用向分布式微服务架构转变的挑战。了解它是如何做到这一点的可以让我们更详细地理解 Istio 的<strong>服务网格</strong>。</p><blockquote><p><strong>服务网格</strong>用来描述组成这些应用程序的微服务网络以及它们之间的交互。随着服务网格的规模和复杂性不断的增长，它将会变得越来越难以理解和管理。它的需求包括服务发现、负载均衡、故障恢复、度量和监控等。服务网格通常还有更复杂的运维需求，比如 A/B 测试、金丝雀发布、速率限制、访问控制和端到端认证。</p></blockquote><img src="/kubernetes/istio-xiang-xi-shi-yong-yi/image-20230807142005796.png" class="" title="image-20230807142005796"><h3 id="1-2-特性"><a href="#1-2-特性" class="headerlink" title="1.2 特性"></a>1.2 特性</h3><ul><li><strong>流量管理</strong>：通过丰富的路由规则、重试、故障转移和故障注入，可以对流量行为进行细粒度的控制</li><li><strong>可观测性</strong>：了解服务之间的依赖关系和它们之间的性质和流量，提供快速识别定位问题的能力。</li><li><strong>策略实施</strong>：通过配置mesh而不是以改变代码的方式来控制服务之间的访问策略。</li><li><strong>服务识别和安全</strong>：提供在mesh里的服务可识别性和安全性保护。</li></ul><h3 id="1-3-组件"><a href="#1-3-组件" class="headerlink" title="1.3 组件"></a>1.3 组件</h3><img src="/kubernetes/istio-xiang-xi-shi-yong-yi/image-20230807152434559-16913930761591.png" class="" title="image-20230807152434559"><h3 id="1-4-架构"><a href="#1-4-架构" class="headerlink" title="1.4 架构"></a>1.4 架构</h3><p>Istio 服务网格从逻辑上分为数据平面和控制平面。</p><ul><li><strong>数据平面</strong>由一组智能代理（<a href="https://www.envoyproxy.io/">Envoy</a>）组成，被部署为 <a href="https://jimmysong.io/kubernetes-handbook/GLOSSARY.html#sidecar">sidecar</a>。</li><li><strong>控制平面</strong>管理并配置代理来进行流量路由。</li></ul><p>下图展示了组成每个平面的不同组件：</p><img src="/kubernetes/istio-xiang-xi-shi-yong-yi/image-20230807152544899-16913931473141.png" class="" title="image-20230807152544899"><p>Istio 的架构分为控制平面和数据平面。</p><ul><li><strong>数据平面</strong>：由一组智能代理（Envoy）以 <a href="https://jimmysong.io/kubernetes-handbook/GLOSSARY.html#sidecar">sidecar</a> 模式部署，协调和控制所有服务之间的网络通信。</li><li><strong>控制平面</strong>：负责管理和配置代理路由流量，以及在运行时执行的政策。</li></ul><h2 id="2-入门以及使用"><a href="#2-入门以及使用" class="headerlink" title="2. 入门以及使用"></a>2. 入门以及使用</h2><h3 id="2-1-安装"><a href="#2-1-安装" class="headerlink" title="2.1 安装"></a>2.1 安装</h3><ul><li><p>安装helm源</p><blockquote><p>helm repo add istio <a href="https://istio-release.storage.googleapis.com/charts">https://istio-release.storage.googleapis.com/charts</a><br>helm repo update</p></blockquote></li><li><p>为 Istio 组件，创建命名空间 <code>istio-system</code></p><blockquote><p>kubectl create namespace istio-system</p></blockquote></li><li><p>安装 Istio base chart，它包含了集群范围的自定义资源定义 (CRD)</p><blockquote><p>helm install istio-base istio/base -n istio-system</p></blockquote></li><li><p>安装 Istio discovery chart，它用于部署 <code>istiod</code> 服务</p><blockquote><p>helm install istiod istio/istiod -n istio-system </p></blockquote></li><li><p>查看安装情况</p><img src="/kubernetes/istio-xiang-xi-shi-yong-yi/image-20230807144727413.png" class="" title="image-20230807144727413"></li><li><p>安装网关</p><blockquote><p>kubectl create namespace istio-ingress<br>helm install istio-ingress istio/gateway -n istio-ingress –wait</p></blockquote></li></ul><img src="/kubernetes/istio-xiang-xi-shi-yong-yi/image-20230807144847511.png" class="" title="image-20230807144847511"><h3 id="2-2-官方Bookinfo-应用-示例"><a href="#2-2-官方Bookinfo-应用-示例" class="headerlink" title="2.2 官方Bookinfo 应用 示例"></a>2.2 官方Bookinfo 应用 示例</h3><p>Bookinfo 应用分为四个单独的微服务：</p><ul><li><code>productpage</code>：这个微服务会调用 <code>details</code> 和 <code>reviews</code> 两个微服务，用来生成页面。</li><li><code>details</code>：这个微服务中包含了书籍的信息。</li><li><code>reviews</code>：这个微服务中包含了书籍相关的评论。它还会调用 <code>ratings</code> 微服务。</li><li><code>ratings</code>：这个微服务中包含了由书籍评价组成的评级信息。</li></ul><p><code>reviews</code> 微服务有 3 个版本：</p><ul><li>v1 版本不会调用 <code>ratings</code> 服务。</li><li>v2 版本会调用 <code>ratings</code> 服务，并使用 1 到 5 个黑色星形图标来显示评分信息。</li><li>v3 版本会调用 <code>ratings</code> 服务，并使用 1 到 5 个红色星形图标来显示评分信息。</li></ul><p>下图展示了这个应用的端到端架构。</p><p><img src="https://istio.io/latest/zh/docs/examples/bookinfo/noistio.svg" alt="Bookinfo Application without Istio"></p><p>Bookinfo 应用中的几个微服务是由不同的语言编写的。 这些服务对 Istio 并无依赖，但是构成了一个有代表性的服务网格的例子： 它由多个服务、多个语言构成，并且 <code>reviews</code> 服务具有多个版本。</p><h4 id="2-2-1-启动应用服务"><a href="#2-2-1-启动应用服务" class="headerlink" title="2.2.1 启动应用服务"></a>2.2.1 启动应用服务</h4><ol><li><p>Istio 默认<a href="https://istio.io/latest/zh/docs/setup/additional-setup/sidecar-injection/#automatic-sidecar-injection">自动注入 Sidecar</a>. 请为 <code>default</code> 命名空间打上标签 <code>istio-injection=enabled</code>：</p><blockquote><p>kubectl label namespace default istio-injection=enabled</p></blockquote></li><li><p>使用 <code>kubectl</code> 部署应用</p><blockquote><p>kubectl apply -f  <a href="https://raw.githubusercontent.com/istio/istio/release-1.18/samples/bookinfo/platform/kube/bookinfo.yaml">https://raw.githubusercontent.com/istio/istio/release-1.18/samples/bookinfo/platform/kube/bookinfo.yaml</a></p></blockquote></li><li><p>确认所有的服务和 Pod 都已经正确的定义和启动：</p><blockquote><img src="/kubernetes/istio-xiang-xi-shi-yong-yi/image-20230807151452132.png" class="" title="image-20230807151452132"></blockquote></li><li><p>要确认 Bookinfo 应用是否正在运行，请在某个 Pod 中用 <code>curl</code> 命令对应用发送请求，例如 <code>ratings</code>：</p><blockquote><p>kubectl exec “$(kubectl get pod -l app=ratings -o jsonpath=’{.items[0].metadata.name}’)” -c ratings – curl -sS productpage:9080/productpage | grep -o “<title>.*</title>“</p><img src="/kubernetes/istio-xiang-xi-shi-yong-yi/image-20230807151509822.png" class="" title="image-20230807151509822"></blockquote></li><li><p>创建网关</p><blockquote><p>使用以下命令创建 <a href="https://istio.io/latest/zh/docs/concepts/traffic-management/#gateways">Istio Gateway</a>：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ kubectl apply <span class="token parameter variable">-f</span> samples/bookinfo/networking/bookinfo-gateway.yamlgateway.networking.istio.io/bookinfo-gateway createdvirtualservice.networking.istio.io/bookinfo created<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Gateway<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> bookinfo<span class="token punctuation">-</span>gateway<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token comment"># The selector matches the ingress gateway pod labels.</span>  <span class="token comment"># If you installed Istio using Helm following the standard documentation, this would be "istio=ingress"</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">istio</span><span class="token punctuation">:</span> ingress <span class="token comment"># use istio default controller</span>  <span class="token key atrule">servers</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">port</span><span class="token punctuation">:</span>      <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token number">80</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> http      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> HTTP    <span class="token key atrule">hosts</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token string">"*"</span><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.istio.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> VirtualService<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> bookinfo<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token string">"*"</span>  <span class="token key atrule">gateways</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> bookinfo<span class="token punctuation">-</span>gateway  <span class="token key atrule">http</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">match</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">uri</span><span class="token punctuation">:</span>        <span class="token key atrule">exact</span><span class="token punctuation">:</span> /productpage    <span class="token punctuation">-</span> <span class="token key atrule">uri</span><span class="token punctuation">:</span>        <span class="token key atrule">prefix</span><span class="token punctuation">:</span> /static    <span class="token punctuation">-</span> <span class="token key atrule">uri</span><span class="token punctuation">:</span>        <span class="token key atrule">exact</span><span class="token punctuation">:</span> /login    <span class="token punctuation">-</span> <span class="token key atrule">uri</span><span class="token punctuation">:</span>        <span class="token key atrule">exact</span><span class="token punctuation">:</span> /logout    <span class="token punctuation">-</span> <span class="token key atrule">uri</span><span class="token punctuation">:</span>        <span class="token key atrule">prefix</span><span class="token punctuation">:</span> /api/v1/products    <span class="token key atrule">route</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">destination</span><span class="token punctuation">:</span>        <span class="token key atrule">host</span><span class="token punctuation">:</span> productpage        <span class="token key atrule">port</span><span class="token punctuation">:</span>          <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token number">9080</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>确认网关创建完成：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ kubectl get gatewayNAME               AGEbookinfo-gateway   32s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></blockquote></li><li><p>访问</p><img src="/kubernetes/istio-xiang-xi-shi-yong-yi/image-20230807152208678.png" class="" title="image-20230807152208678"><img src="/kubernetes/istio-xiang-xi-shi-yong-yi/image-20230807152146738.png" class="" title="image-20230807152146738"></li><li><p>在可以使用 Istio 控制 Bookinfo 版本路由之前，您需要定义可用的版本。</p><blockquote><p>kubectl apply -f <a href="https://raw.githubusercontent.com/istio/istio/release-1.18/samples/bookinfo/networking/destination-rule-all.yaml">https://raw.githubusercontent.com/istio/istio/release-1.18/samples/bookinfo/networking/destination-rule-all.yaml</a></p><p> kubectl get destinationrules -o yaml</p></blockquote></li></ol><h3 id="2-3-Kiali——Istio-Service-Mesh-的可观察性工具"><a href="#2-3-Kiali——Istio-Service-Mesh-的可观察性工具" class="headerlink" title="2.3 Kiali——Istio Service Mesh 的可观察性工具"></a>2.3 Kiali——Istio Service Mesh 的可观察性工具</h3><h4 id="2-3-1Kiali-中的基本概念"><a href="#2-3-1Kiali-中的基本概念" class="headerlink" title="2.3.1Kiali 中的基本概念"></a>2.3.1Kiali 中的基本概念</h4><p>在了解 Kiali 如何提供 Service Mesh 中微服务可观察性之前，我们需要先了解下 Kiali 如何划分监控类别的。</p><ul><li>Application：使用运行的工作负载，必须使用 Istio 的将 Label 标记为 app 才算。注意，如果一个应用有多个版本，只要 app 标签的值相同就是属于同一个应用。</li><li>Deployment：即 Kubernetes 中的 Deployment。</li><li>Label：这个值对于 Istio 很重要，因为 Istio 要用它来标记 metrics。每个 Application 要求包括 app 和 version 两个 label。</li><li>Namespace：通常用于区分项目和用户。</li><li>Service：即 Kubernetes 中的 Service，不过要求必须有 app label。</li><li>Workload：Kubernetes 中的所有常用资源类型如 Deployment、StatefulSet、Job 等都可以检测到，不论这些负载是否加入到 Istio Service Mesh 中。</li></ul><img src="/kubernetes/istio-xiang-xi-shi-yong-yi/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x1YW5wZW5nODI1NDg1Njk3,size_16,color_FFFFFF,t_70.png" class="" title="在这里插入图片描述"><h2 id="外部引用"><a href="#外部引用" class="headerlink" title="外部引用"></a>外部引用</h2><p>[Istio云原生资料库]: <a href="https://jimmysong.io/kubernetes-handbook/usecases/istio.html">https://jimmysong.io/kubernetes-handbook/usecases/istio.html</a>“Istio云原生资料库”<br>[Istio官网]: <a href="https://istio.io/latest/zh/docs/concepts/">https://istio.io/latest/zh/docs/concepts/</a>“Istio官网”</p>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
          <category> istio </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> 服务网格 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下未使用磁盘扩容到根目录（PV）</title>
      <link href="/other/linux-xia-wei-shi-yong-ci-pan-kuo-rong-dao-gen-mu-lu-pv.html"/>
      <url>/other/linux-xia-wei-shi-yong-ci-pan-kuo-rong-dao-gen-mu-lu-pv.html</url>
      
        <content type="html"><![CDATA[<h2 id="Linux下未使用磁盘扩容到根目录（PV）"><a href="#Linux下未使用磁盘扩容到根目录（PV）" class="headerlink" title="Linux下未使用磁盘扩容到根目录（PV）"></a>Linux下未使用磁盘扩容到根目录（PV）</h2><h3 id="1-从虚机从创建一个空磁盘"><a href="#1-从虚机从创建一个空磁盘" class="headerlink" title="1.从虚机从创建一个空磁盘"></a>1.从虚机从创建一个空磁盘</h3><img src="/other/linux-xia-wei-shi-yong-ci-pan-kuo-rong-dao-gen-mu-lu-pv/image-20230804095050864.png" class="" title="image-20230804095050864"><h3 id="2-查看根目录容量大小、查看磁盘分区情况"><a href="#2-查看根目录容量大小、查看磁盘分区情况" class="headerlink" title="2.查看根目录容量大小、查看磁盘分区情况"></a>2.查看根目录容量大小、查看磁盘分区情况</h3><p><strong>lsblk</strong></p><img src="/other/linux-xia-wei-shi-yong-ci-pan-kuo-rong-dao-gen-mu-lu-pv/image-20230804095214476.png" class="" title="image-20230804095214476"><h3 id="3-格式化磁盘"><a href="#3-格式化磁盘" class="headerlink" title="3.格式化磁盘"></a>3.格式化磁盘</h3><p><em><strong>mkfs -t ext3 /dev/sda</strong></em></p><img src="/other/linux-xia-wei-shi-yong-ci-pan-kuo-rong-dao-gen-mu-lu-pv/image-20230804095400819.png" class="" title="image-20230804095400819"><h3 id="4-创建物理卷"><a href="#4-创建物理卷" class="headerlink" title="4.创建物理卷"></a>4.创建物理卷</h3><p><em><strong>pvcreate /dev/vda</strong></em></p><h3 id="5-将分区-x2F-dev-x2F-sda加入到根目录分区zstack"><a href="#5-将分区-x2F-dev-x2F-sda加入到根目录分区zstack" class="headerlink" title="5.将分区/dev/sda加入到根目录分区zstack"></a>5.将分区/dev/sda加入到根目录分区zstack</h3><p><em><strong>vgextend zstack /dev/sda</strong></em></p><img src="/other/linux-xia-wei-shi-yong-ci-pan-kuo-rong-dao-gen-mu-lu-pv/image-20230804095553507.png" class="" title="image-20230804095553507"><h3 id="6-对根目录进行扩容"><a href="#6-对根目录进行扩容" class="headerlink" title="6.对根目录进行扩容"></a>6.对根目录进行扩容</h3><p><em><strong>lvextend -l +100%FREE /dev/mapper/zstack-root</strong></em></p><img src="/other/linux-xia-wei-shi-yong-ci-pan-kuo-rong-dao-gen-mu-lu-pv/image-20230804095658700.png" class="" title="image-20230804095658700"><h3 id="7-调整分区大小"><a href="#7-调整分区大小" class="headerlink" title="7.调整分区大小"></a>7.调整分区大小</h3><p><strong>xfs_growfs /dev/mapper/zstack-root</strong></p><img src="/other/linux-xia-wei-shi-yong-ci-pan-kuo-rong-dao-gen-mu-lu-pv/image-20230804095733381.png" class="" title="image-20230804095733381">]]></content>
      
      
      <categories>
          
          <category> disk </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 其他 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cloudflare机场使用</title>
      <link href="/vps/cloudflare-ji-chang-shi-yong.html"/>
      <url>/vps/cloudflare-ji-chang-shi-yong.html</url>
      
        <content type="html"><![CDATA[<h1 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h1><p>地址： <a href="https://raw.githubusercontent.com/leilei223/works/main/index.js">https://raw.githubusercontent.com/leilei223/works/main/index.js</a><br>干净ip阿拉伯文字网站:  <a href="https://vfarid.github.io/cf-ip-scanner/?max=30">https://vfarid.github.io/cf-ip-scanner/?max=30</a></p><p>v2rayN修改订阅</p><img src="/vps/cloudflare-ji-chang-shi-yong/image-20230731171720543.png" class="" title="image-20230731171720543"><h1 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h1><p><strong>WIN:</strong></p><p>v2rayN 最新版<a href="https://github.com/2dust/v2rayN/releases">下载地址&gt;&gt;</a></p><p>cloudflare<a href="https://dash.cloudflare.com/">网站链接&gt;&gt;</a></p><p>临时邮箱：<a href="https://www.linshiyouxiang.net/">https://www.linshiyouxiang.net/</a></p><p>部署代码：<a href="https://github.com/zizifn/edgetunnel/blob/main/src/worker-vless.js">https://github.com/zizifn/edgetunnel/blob/main/src/worker-vless.js</a></p><p>uuid生成：<a href="https://1024tools.com/uuid">https://1024tools.com/uuid</a></p><p>免费域名注册：<a href="https://www.dynadot.com/register-your-free-link-domain">https://www.dynadot.com/register-your-free-link-domain</a></p><p>付费域名注册：<a href="http://www.namesilo.com/">www.namesilo.com</a>（付费域名注册和解析<a href="https://www.youtube.com/watch?v=5pb4yQwu1T4">点击查看这个视频&gt;&gt;跳转到4分17秒处</a>）</p><p>workers win专用ip优选：<a href="https://jdssl.top/wp-content/uploads/2023/07/works%E4%B8%93%E7%94%A8ip%E4%BC%98%E9%80%89.zip">下载地址&gt;&gt;</a></p><p>ip查看：<a href="https://whatismyipaddress.com/">https://whatismyipaddress.com/</a></p><p>cf ip优选；<a href="https://stock.hostmonit.com/CloudFlareYes">https://stock.hostmonit.com/CloudFlareYes</a></p><p>网络测速：<a href="https://www.speedtest.net/result/14952074175">https://www.speedtest.net/result/14952074175</a></p><p>openclash转换订阅网址：<a href="https://sub-web.netlify.app/">https://sub-web.netlify.app/</a></p><p><strong>cdn加速</strong></p><pre class="line-numbers language-none"><code class="language-none">cdn-all.xn--b6gac.eu.orgcdn.xn--b6gac.eu.org cdn-b100.xn--b6gac.eu.org edgetunnel.anycast.eu.org cdn.anycast.eu.org （亚洲地区）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/vps/cloudflare-ji-chang-shi-yong/image-20230731171849629.png" class="" title="image-20230731171849629"><p><a href="https://v2ray.looknicemm.workers.dev/098c12fd-0c46-4f61-95dd-574e4b0ec07d">https://v2ray.looknicemm.workers.dev/098c12fd-0c46-4f61-95dd-574e4b0ec07d</a></p><img src="/vps/cloudflare-ji-chang-shi-yong/image-20230731172030461.png" class="" title="image-20230731172030461"><img src="/vps/cloudflare-ji-chang-shi-yong/image-20230731171908540.png" class="" title="image-20230731171908540">]]></content>
      
      
      <categories>
          
          <category> vps </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K8S NetworkPolicy(网络策略)</title>
      <link href="/kubernetes/networkpolicy-wang-luo-ce-lue.html"/>
      <url>/kubernetes/networkpolicy-wang-luo-ce-lue.html</url>
      
        <content type="html"><![CDATA[<h1 id="NetworkPolicy-网络策略"><a href="#NetworkPolicy-网络策略" class="headerlink" title="NetworkPolicy(网络策略)"></a>NetworkPolicy(网络策略)</h1><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><h3 id="1-1-基本概念"><a href="#1-1-基本概念" class="headerlink" title="1.1 基本概念"></a>1.1 基本概念</h3><p><strong>NetworkPolicy</strong> 是一种以应用为中心的结构，允许你设置如何允许 <strong>Pod</strong> 与网络上的各类网络“实体”，实现以下功能：</p><ul><li>限制 Pod 之间和外部网络的流量：通过指定 <strong>Ingress</strong> 规则，可以阻止来自其他<strong>网络段</strong>、<strong>命名空间</strong>、 <strong>Pod</strong>的流量进入目标 Pod。</li><li>允许 Pod 之间和外部网络的流量：需要为目标 Pod 配置 Egress 规则，允许访问其他<strong>网络段</strong>、<strong>命名空间</strong>、pod。</li></ul><h3 id="1-2-使用原理"><a href="#1-2-使用原理" class="headerlink" title="1.2 使用原理"></a>1.2 使用原理</h3><p>使用 NetworkPolicy 时，需要考虑以下几个方面：</p><ul><li>NetworkPolicy 只在支持它的网络插件中起作用，例如 Calico、Cilium 和 Weave Net 等。</li><li>没有定义任何 NetworkPolicy 规则，则所有的流量都会被允许。</li><li>定义 NetworkPolicy 后，它只适用于当前命名空间中的 Pod。</li><li>在 NetworkPolicy 中指定标签选择器时，应保证其唯一性，以免给其他 Pod 带来影响。</li><li>网络策略是相加的，所以不会产生冲突。如果策略适用于 Pod 某一特定方向的流量， Pod 在对应方向所允许的连接是适用的网络策略所允许的集合。 因此，<strong>评估的顺序不影响策略</strong>的结果。要允许从源 Pod 到目的 Pod 的连接，源 Pod 的出口策略和目的 Pod 的入口策略都需要允许连接。 <strong>如果任何一方不允许连接，建立连接将会失败</strong>。</li><li>默认pod都是未隔离的，如果指定某个命名空间pod进行网络策略隔离，其他未被指定的pod不会收到影响，将会继续接收流量</li></ul><h2 id="2-资源定义"><a href="#2-资源定义" class="headerlink" title="2. 资源定义"></a>2. 资源定义</h2><p>下面是一个 NetworkPolicy 的示例:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> NetworkPolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> test<span class="token punctuation">-</span>network<span class="token punctuation">-</span>policy  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">podSelector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">role</span><span class="token punctuation">:</span> db  <span class="token key atrule">policyTypes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> Ingress    <span class="token punctuation">-</span> Egress  <span class="token key atrule">ingress</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">from</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">ipBlock</span><span class="token punctuation">:</span>            <span class="token key atrule">cidr</span><span class="token punctuation">:</span> 172.17.0.0/16            <span class="token key atrule">except</span><span class="token punctuation">:</span>              <span class="token punctuation">-</span> 172.17.1.0/24        <span class="token punctuation">-</span> <span class="token key atrule">namespaceSelector</span><span class="token punctuation">:</span>            <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>              <span class="token key atrule">project</span><span class="token punctuation">:</span> myproject        <span class="token punctuation">-</span> <span class="token key atrule">podSelector</span><span class="token punctuation">:</span>            <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>              <span class="token key atrule">role</span><span class="token punctuation">:</span> frontend      <span class="token key atrule">ports</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP          <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">6379</span>  <span class="token key atrule">egress</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">to</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">ipBlock</span><span class="token punctuation">:</span>            <span class="token key atrule">cidr</span><span class="token punctuation">:</span> 10.0.0.0/24      <span class="token key atrule">ports</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP          <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">5978</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-1-字段含义"><a href="#2-1-字段含义" class="headerlink" title="2.1 字段含义"></a>2.1 字段含义</h3><p><strong>必需字段</strong>：与所有其他的 Kubernetes 配置一样，NetworkPolicy 需要 <code>apiVersion</code>、 <code>kind</code> 和 <code>metadata</code> 字段。</p><p><strong>spec</strong>：NetworkPolicy 中包含了在一个名字空间中定义特定网络策略所需的所有信息。</p><p><strong>podSelector</strong>： 它对该策略所适用的一组 Pod 进行选择。示例中的策略选择带有 “role=db” 标签的 Pod。 <strong>空的 <code>podSelector</code> 选择名字空间下的所有 Pod</strong>。</p><p><strong>policyTypes</strong>：包含 <code>Ingress</code> 或 <code>Egress</code> 或两者兼具。 如果 NetworkPolicy 未指定 <code>policyTypes</code> 则<strong>默认</strong>情况下始终设置 <code>Ingress</code>； 如果 NetworkPolicy 有任何出口规则的话则设置 <code>Egress</code>。</p><p><strong>ingress</strong>：每个 NetworkPolicy 可包含一个 <code>ingress</code> 规则的白名单列表。 每个规则都允许同时匹配 <code>from</code> 和 <code>ports</code> 部分的流量。示例策略中包含一条简单的规则： 它匹配某个特定端口，来自三个来源中的一个，第一个通过 <code>ipBlock</code> 指定，第二个通过 <code>namespaceSelector</code> 指定，第三个通过 <code>podSelector</code> 指定。</p><p><strong>egress</strong>：每个 NetworkPolicy 可包含一个 <code>egress</code> 规则的白名单列表。 每个规则都允许匹配 <code>to</code> 和 <code>port</code> 部分的流量。该示例策略包含一条规则， 该规则将指定端口上的流量匹配到 <code>10.0.0.0/24</code> 中的任何目的地。</p><p>所以，该网络策略示例:</p><ol><li>隔离 <code>default</code> 名字空间下 <code>role=db</code> 的 Pod （如果它们不是已经被隔离的话）。</li><li>（Ingress 规则）允许以下 Pod 连接到 <code>default</code> 名字空间下的带有 <code>role=db</code> 标签的所有 Pod 的 6379 TCP 端口：<ul><li><code>default</code> 名字空间下带有 <code>role=frontend</code> 标签的所有 Pod</li><li>带有 <code>project=myproject</code> 标签的所有名字空间中的 Pod</li><li>IP 地址范围为 172.17.0.0–172.17.0.255 和 172.17.2.0–172.17.255.255 （即，除了 172.17.1.0/24 之外的所有 172.17.0.0/16）</li></ul></li><li>（Egress 规则）允许 <code>default</code> 名字空间中任何带有标签 <code>role=db</code> 的 Pod 到 CIDR 10.0.0.0/24 下 5978 TCP 端口的连接。</li></ol><p><strong>每个 ingress 或 egress 规则包括以下部分</strong>： </p><ul><li>from(ingress) 或to(egress): 定义流量的源 (ingress) 或目的地 (egress)。这可以包括以下一个或多个字段：<ul><li><code>podSelector</code>: 选择符合特定 label 的 Pod。</li><li><code>namespaceSelector</code>: 选择符合特定 label 的命名空间。</li><li><code>ipBlock</code>: 定义一个 IP 地址范围。</li></ul></li><li><code>ports</code>: 定义流量可以使用的端口/范围和协议。</li></ul><h3 id="2-2-使用案例"><a href="#2-2-使用案例" class="headerlink" title="2.2 使用案例"></a>2.2 使用案例</h3><h4 id="2-2-1-默认拒绝所有入站流量"><a href="#2-2-1-默认拒绝所有入站流量" class="headerlink" title="2.2.1 默认拒绝所有入站流量"></a>2.2.1 默认拒绝所有入站流量</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> NetworkPolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> default<span class="token punctuation">-</span>deny<span class="token punctuation">-</span>ingress<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">podSelector</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>  <span class="token key atrule">policyTypes</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Ingress<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-2-2-允许所有入站流量"><a href="#2-2-2-允许所有入站流量" class="headerlink" title="2.2.2 允许所有入站流量"></a>2.2.2 允许所有入站流量</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> NetworkPolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> allow<span class="token punctuation">-</span>all<span class="token punctuation">-</span>ingress<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">podSelector</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>  <span class="token key atrule">ingress</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>  <span class="token key atrule">policyTypes</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Ingress<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-2-3-默认拒绝所有出站流量"><a href="#2-2-3-默认拒绝所有出站流量" class="headerlink" title="2.2.3 默认拒绝所有出站流量"></a>2.2.3 默认拒绝所有出站流量</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> NetworkPolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> default<span class="token punctuation">-</span>deny<span class="token punctuation">-</span>egress<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">podSelector</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>  <span class="token key atrule">policyTypes</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Egress<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-2-4-允许所有出站流量"><a href="#2-2-4-允许所有出站流量" class="headerlink" title="2.2.4 允许所有出站流量"></a>2.2.4 允许所有出站流量</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> NetworkPolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> allow<span class="token punctuation">-</span>all<span class="token punctuation">-</span>egress<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">podSelector</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>  <span class="token key atrule">egress</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>  <span class="token key atrule">policyTypes</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Egress<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-2-5-实验"><a href="#2-2-5-实验" class="headerlink" title="2.2.5 实验"></a>2.2.5 实验</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> xjy1  <span class="token key atrule">name</span><span class="token punctuation">:</span> xjy1  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> xjy<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">progressDeadlineSeconds</span><span class="token punctuation">:</span> <span class="token number">600</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">revisionHistoryLimit</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> xjy1  <span class="token key atrule">strategy</span><span class="token punctuation">:</span>    <span class="token key atrule">rollingUpdate</span><span class="token punctuation">:</span>      <span class="token key atrule">maxSurge</span><span class="token punctuation">:</span> 25%      <span class="token key atrule">maxUnavailable</span><span class="token punctuation">:</span> 25%    <span class="token key atrule">type</span><span class="token punctuation">:</span> RollingUpdate  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> xjy1      <span class="token key atrule">name</span><span class="token punctuation">:</span> xjy1      <span class="token key atrule">namespace</span><span class="token punctuation">:</span> xjy    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx<span class="token punctuation">:</span><span class="token number">1.20</span>        <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent        <span class="token key atrule">name</span><span class="token punctuation">:</span> xjy1        <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>        <span class="token key atrule">terminationMessagePath</span><span class="token punctuation">:</span> /dev/termination<span class="token punctuation">-</span>log        <span class="token key atrule">terminationMessagePolicy</span><span class="token punctuation">:</span> File<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">creationTimestamp</span><span class="token punctuation">:</span> <span class="token string">"2023-07-27T07:23:23Z"</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> sv1  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> xjy  <span class="token key atrule">resourceVersion</span><span class="token punctuation">:</span> <span class="token string">"116021339"</span>  <span class="token key atrule">uid</span><span class="token punctuation">:</span> db6f12c3<span class="token punctuation">-</span>0380<span class="token punctuation">-</span>4dc0<span class="token punctuation">-</span>996d<span class="token punctuation">-</span>6695cb6f36ab<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">clusterIP</span><span class="token punctuation">:</span> 10.233.17.100  <span class="token key atrule">clusterIPs</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> 10.233.17.100  <span class="token key atrule">internalTrafficPolicy</span><span class="token punctuation">:</span> Cluster  <span class="token key atrule">ipFamilies</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> IPv4  <span class="token key atrule">ipFamilyPolicy</span><span class="token punctuation">:</span> SingleStack  <span class="token key atrule">ports</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> sv1<span class="token punctuation">-</span>8080<span class="token punctuation">-</span><span class="token number">8080</span>    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span>    <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP    <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">8080</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> xjy1  <span class="token key atrule">sessionAffinity</span><span class="token punctuation">:</span> None  <span class="token key atrule">type</span><span class="token punctuation">:</span> ClusterIP<span class="token punctuation">---</span> <span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">deployment.kubernetes.io/revision</span><span class="token punctuation">:</span> <span class="token string">"1"</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> dev<span class="token punctuation">-</span>test<span class="token punctuation">-</span>xjy  <span class="token key atrule">name</span><span class="token punctuation">:</span> dev<span class="token punctuation">-</span>test<span class="token punctuation">-</span>xjy  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> xjy2<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">progressDeadlineSeconds</span><span class="token punctuation">:</span> <span class="token number">600</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">revisionHistoryLimit</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> dev<span class="token punctuation">-</span>test<span class="token punctuation">-</span>xjy  <span class="token key atrule">strategy</span><span class="token punctuation">:</span>    <span class="token key atrule">rollingUpdate</span><span class="token punctuation">:</span>      <span class="token key atrule">maxSurge</span><span class="token punctuation">:</span> 25%      <span class="token key atrule">maxUnavailable</span><span class="token punctuation">:</span> 25%    <span class="token key atrule">type</span><span class="token punctuation">:</span> RollingUpdate  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> dev<span class="token punctuation">-</span>test<span class="token punctuation">-</span>xjy      <span class="token key atrule">name</span><span class="token punctuation">:</span> dev<span class="token punctuation">-</span>test<span class="token punctuation">-</span>xjy      <span class="token key atrule">namespace</span><span class="token punctuation">:</span> xjy2    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx<span class="token punctuation">:</span><span class="token number">1.20</span>        <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent        <span class="token key atrule">name</span><span class="token punctuation">:</span> dev<span class="token punctuation">-</span>test<span class="token punctuation">-</span>xjy        <span class="token key atrule">resources</span><span class="token punctuation">:</span>          <span class="token key atrule">limits</span><span class="token punctuation">:</span>            <span class="token key atrule">cpu</span><span class="token punctuation">:</span> <span class="token string">"1"</span>            <span class="token key atrule">memory</span><span class="token punctuation">:</span> 100Mi          <span class="token key atrule">requests</span><span class="token punctuation">:</span>            <span class="token key atrule">cpu</span><span class="token punctuation">:</span> <span class="token string">"1"</span>            <span class="token key atrule">memory</span><span class="token punctuation">:</span> 100Mi<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> NetworkPolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> test<span class="token punctuation">-</span>network<span class="token punctuation">-</span>policy  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> xjy<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">podSelector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> xjy1  <span class="token key atrule">policyTypes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> Ingress    <span class="token punctuation">-</span> Egress  <span class="token key atrule">ingress</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">from</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">namespaceSelector</span><span class="token punctuation">:</span>            <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>              <span class="token key atrule">kubernetes.io/metadata.name</span><span class="token punctuation">:</span> xjy2      <span class="token key atrule">ports</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP          <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span>  <span class="token key atrule">egress</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">to</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">ipBlock</span><span class="token punctuation">:</span>            <span class="token key atrule">cidr</span><span class="token punctuation">:</span> 10.233.0.0/16      <span class="token key atrule">ports</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP          <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8081</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>[k8s NetworkPolicy]: <a href="https://kubernetes.io/zh-cn/docs/concepts/services-networking/network-policies/">https://kubernetes.io/zh-cn/docs/concepts/services-networking/network-policies/</a>“k8s官网”</p>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iptables详解使用</title>
      <link href="/wang-luo/iptables-xiang-jie-shi-yong.html"/>
      <url>/wang-luo/iptables-xiang-jie-shi-yong.html</url>
      
        <content type="html"><![CDATA[<h1 id="iptables详解使用"><a href="#iptables详解使用" class="headerlink" title="iptables详解使用"></a>iptables详解使用</h1><h2 id="1、介绍"><a href="#1、介绍" class="headerlink" title="1、介绍"></a>1、介绍</h2><h3 id="1-1简介"><a href="#1-1简介" class="headerlink" title="1.1简介"></a>1.1简介</h3><p>iptables是一个linux下的防火墙工具，它能帮助我们基于规则进行网络流量控制。使用 iptables 可以添加、删除具体的过滤规则，iptables 默认维护着 4 个表和 5 个链，所有的防火墙策略规则都被分别写入这些表与链中。它可以做到，但不限于以下功能：</p><ul><li>允许/拒绝某种协议的链接建立，比如TCP，UDP</li><li>允许/拒绝 来自某个ip的访问</li><li>允许/拒绝某个端口被访问</li><li>….</li></ul><h2 id="2、linux内核处理流程"><a href="#2、linux内核处理流程" class="headerlink" title="2、linux内核处理流程"></a>2、linux内核处理流程</h2><img src="/wang-luo/iptables-xiang-jie-shi-yong/image-20230726144559099.png" class="" title="image-20230726144559099"><h3 id="2-1-简化的流程介绍"><a href="#2-1-简化的流程介绍" class="headerlink" title="2.1 简化的流程介绍"></a>2.1 简化的流程介绍</h3><h4 id="2-1-1-一般流程介绍"><a href="#2-1-1-一般流程介绍" class="headerlink" title="2.1.1 一般流程介绍"></a>2.1.1 一般流程介绍</h4><p>这个流程是简化过的流程,但是对于整个流程的梳理是重要的,简单介绍这个流程:</p><ol><li>首先是数据包从网卡进入, 已经<strong>路由预处理</strong>链路(PREROUTING), 这个预处理可以用来修改ip包的目的地址等信息</li><li><strong>路由决策</strong>(Routing Decision)就是判断ip的目的地址是不是本机的ip</li><li>按照一般情况, 再进入<strong>输入</strong>链路(INPUT)这个链路,这个主要是决定进入上层应用层的处理前的链路</li><li><strong>上层应用处理</strong>,这个就是实际流入上层应用的数据包,例如用java或者Python构建的web服务就能接收到</li><li>再就是上层应用会做出响应的数据包进入<strong>输出</strong>链路(OUTPUT)</li><li><strong>路由决策</strong>这里根据目的ip选择将数据包发给哪个网卡</li><li>进入<strong>路由后处理</strong>链路(POSTROUTING), 这个后处理可以用来修改ip地址的源ip信息等</li><li>输出到网卡发送出去</li></ol><h4 id="2-1-2-转发流程"><a href="#2-1-2-转发流程" class="headerlink" title="2.1.2 转发流程"></a>2.1.2 转发流程</h4><ol><li><p>假如当前主机是<strong>网关</strong>(例如路由器),那么从网卡上就会接收到<strong>目的ip</strong>不是本机ip的数据包</p></li><li><p>这个时候<strong>路由预处理</strong>(PREROUTING)之后的<strong>路由决策</strong>就会进入路由<strong>路由转发</strong>(FORWARD)线路</p></li><li><p>然后到最终经过路由决策到路由后处理(POSTROUTING)</p><ul><li><p><strong>路由后处理</strong>(POSTROUTING)这里十分重要,一般路由器就会在这里将源ip地址换成路由器自己的外网ip,这样内网机器就可以通过路由器上网了</p></li><li><p>iptabels将这个操作称为SNAT,是可以通过命令简单配置下就能配好的</p></li></ul></li></ol><h3 id="2-2-表、链、规则介绍"><a href="#2-2-表、链、规则介绍" class="headerlink" title="2.2 表、链、规则介绍"></a>2.2 表、链、规则介绍</h3><h4 id="2-2-1-规则-rule"><a href="#2-2-1-规则-rule" class="headerlink" title="2.2.1 规则(rule)"></a>2.2.1 规则(rule)</h4><p><code>来自192.168.2.31的访问，就要将其拒绝`，这即是一条规则</code></p><p>一个规则一般分为两大部分：</p><ul><li>匹配： 即哪些数据包会命中这个规则，比如一个指定的ip，即是一个匹配规则</li><li>动作： 匹配到规则之后，需要做什么动作，是放行，还是拒绝。动作分为以下几种：<ul><li>ACCEPT： 直接接受该数据包，不会再走其他链条和规则。比如filter中的input表中的某个规则命中后，动作是ACCEPT，那么该数据包将被直接送达目标进程端口。</li><li>DROP： 直接抛弃该数据包，并且没有任何返回。且不会再走其他链和规则</li><li>REJECT: 跟DROP类似，但好歹还是会跟请求方返回一些拒绝信息，比如我们拒绝掉ICMP协议后，ping该主机，会返回“destination host unreachable”</li><li>RETURN: 当前规则不做任何处理，返回。让给下一个规则处理</li><li>LOG ： 同RETURN类似，但只是会将请求信息记录到系统日志中，记录路径</li></ul></li></ul><h4 id="2-2-2-链-chain"><a href="#2-2-2-链-chain" class="headerlink" title="2.2.2 链(chain)"></a>2.2.2 <strong>链(chain)</strong></h4><p>往往我们的安全策略不只一条规则，除了 <code>来自192.168.2.31的访问，就要将其拒绝</code> 这条规则之外，我们还有其它规则，比如： <code>来自192.168.43.22的访问，也要将其拒绝</code></p><p>甚至，我们可能还有多个互斥的规则，这多个规则，哪个规则先执行？ 这就涉及到链这个概念。简单来讲，链就是将多个规则从上大小串起来的一个集合单位。规则按从上倒下依次进行匹配</p><img src="iptables详解使用/v2-cf4a62d34c69eec3f9d6e762733b5535_720w-16903543266823.webp" alt="img" style="zoom:50%;"><h4 id="2-2-3-表-table"><a href="#2-2-3-表-table" class="headerlink" title="2.2.3 表(table)"></a>2.2.3 <strong>表(table)</strong></h4><p>链条可以有多个。将多个链条再规整在一起的集合，叫做表。</p><img src="/wang-luo/iptables-xiang-jie-shi-yong/v2-6281f8a21178c8fe6185493c631a1504_720w-16903543716187.webp" class="" title="img"><h4 id="2-2-4-四表五链"><a href="#2-2-4-四表五链" class="headerlink" title="2.2.4 四表五链"></a>2.2.4 四表五链</h4><ul><li><p>以上流程中还涉及到表(表是对功能的封装,例如filter专门用于防火墙),按照官方文档也有5张表</p><ul><li>filter 配置<strong>防火墙</strong>的规则, 可以决定一个数据包是否可以到达目标进程端口</li><li>nat 配置<strong>转发包</strong>的规则,可以修改源和目标的ip地址，从而进行包路由。</li><li>raw(不常用) 用来标记包让免于系统跟踪，能基于数据包的状态进行规则设定</li><li>mangle(不常用) 用于对特定数据包的修改, 可以修改数据包的内容，比如ttl</li><li>security(不常用) 用于访问控制。</li></ul></li><li><p>链就是数据包传输过程中经过的各个链路,有<strong>5</strong>个,包括路由<strong>PREROUTING（预处理）</strong>,<strong>INPUT（输入）</strong>,<strong>OUTPUT(输出)</strong>,<strong>POSTROUTING(路由后处理)</strong>,**FORWARD(转发)**这五条链路</p><ul><li><p><strong>PREROUTING 链</strong></p><p>PREROUTING 一般用作对包进行目标地址修改。比如将该包的目标地址，修改为非本机的另外的网络ip，一般通过<code>DNAT</code>规则进行修改。（例如虚机访问外网时，回包需要原链路返回需要<code>DNAT</code>)</p></li><li><p><strong>路由决策（Routing Decision）</strong></p><p>决定一个包该走哪个链。如果上述PREROUTING 链对包进行了目标网络ip更改。那么决策会觉得这个是一个需要转发的数据包，于是会将该包转发给 FORWARD 链。<strong>否则， 该包会走INPUT链</strong></p></li><li><p><strong>FORWARD 链</strong></p><p>FORWARD在各表中生效的优先顺序是：mangle(FORWARD) —-&gt; filter(FORWARD) 处理路由决策派发发过来的包，到这里的包一般目标网络地址在PREROUTING链被修改过</p></li><li><p><strong>INPUT 链</strong></p><p>其生效顺序是： mangle(INPUT) —-&gt; filter(INPUT) 处理路由决策派发发过来的包，到这里的包一般目标网络地址在PREROUTING链<strong>没有</strong>被修改过。</p></li><li><p><strong>OUTPUT 链</strong></p><p>在目标进程端口接收到输入数据包后，输出的数据包，将在这里进行规则应用。OUTPUT链在各表中生效的先后顺序是： raw(OUTPUT) —-&gt; mangle(OUTPUT) —-&gt; nat(OUTPUT) —-&gt; filter(OUTPUT)</p></li><li><p><strong>POSTROUTING</strong></p><p>POSTROUTING一般用作对包进行源地址修改，一般通过<code>SNAT</code>规则进行修改</p></li></ul></li><li><p>表能控制的链路关系如下</p></li></ul><table><thead><tr><th>表名/链名</th><th>raw</th><th>filter</th><th>nat</th><th>mangle</th><th>security</th></tr></thead><tbody><tr><td>PREROUTING</td><td>√</td><td></td><td>√</td><td>√</td><td></td></tr><tr><td>INPUT</td><td></td><td>√</td><td>√</td><td>√</td><td>√</td></tr><tr><td>OUTPUT</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td></tr><tr><td>POSTROUTING</td><td></td><td></td><td>√</td><td>√</td><td></td></tr><tr><td>FORWARD</td><td></td><td>√</td><td></td><td>√</td><td>√</td></tr></tbody></table><h2 id="3、iptables命令说明"><a href="#3、iptables命令说明" class="headerlink" title="3、iptables命令说明"></a>3、iptables命令说明</h2><p>iptables的命令格式较为复杂，一般的格式如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">iptables <span class="token punctuation">[</span>-t 表<span class="token punctuation">]</span> -命令 匹配   操作<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-1-t-表"><a href="#3-1-t-表" class="headerlink" title="3.1 -t 表"></a>3.1 <strong>-t 表</strong></h3><p>表选项用于指定命令应用于哪个iptables内置表。</p><h3 id="3-2-命令"><a href="#3-2-命令" class="headerlink" title="3.2 命令"></a>3.2 命令</h3><p>命令选项用于指定iptables的执行方式，包括插入规则，删除规则和添加规则，如下表所示</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token parameter variable">-P</span>  <span class="token parameter variable">--policy</span>        <span class="token operator">&lt;</span>链名<span class="token operator">&gt;</span>  定义默认策略<span class="token parameter variable">-L</span>  <span class="token parameter variable">--list</span>          <span class="token operator">&lt;</span>链名<span class="token operator">&gt;</span>  查看iptables规则列表<span class="token parameter variable">-A</span>  <span class="token parameter variable">--append</span>        <span class="token operator">&lt;</span>链名<span class="token operator">&gt;</span>  在规则列表的最后增加1条规则<span class="token parameter variable">-I</span>  <span class="token parameter variable">--insert</span>        <span class="token operator">&lt;</span>链名<span class="token operator">&gt;</span>  在指定的位置插入1条规则<span class="token parameter variable">-D</span>  <span class="token parameter variable">--delete</span>        <span class="token operator">&lt;</span>链名<span class="token operator">&gt;</span>  从规则列表中删除1条规则<span class="token parameter variable">-R</span>  <span class="token parameter variable">--replace</span>       <span class="token operator">&lt;</span>链名<span class="token operator">&gt;</span>  替换规则列表中的某条规则<span class="token parameter variable">-F</span>  <span class="token parameter variable">--flush</span>         <span class="token operator">&lt;</span>链名<span class="token operator">&gt;</span>  删除表中所有规则<span class="token parameter variable">-Z</span>  <span class="token parameter variable">--zero</span>          <span class="token operator">&lt;</span>链名<span class="token operator">&gt;</span>  将表中数据包计数器和流量计数器归零<span class="token parameter variable">-X</span>  --delete-chain  <span class="token operator">&lt;</span>链名<span class="token operator">&gt;</span>  删除自定义链<span class="token parameter variable">-v</span>  <span class="token parameter variable">--verbose</span>       <span class="token operator">&lt;</span>链名<span class="token operator">&gt;</span>  与-L他命令一起使用显示更多更详细的信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-3-匹配规则"><a href="#3-3-匹配规则" class="headerlink" title="3.3 匹配规则"></a>3.3 匹配规则</h3><p>匹配选项指定数据包与规则匹配所具有的特征，包括源地址，目的地址，传输协议和端口号，如下表所示</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token parameter variable">-i</span> --in-interface    网络接口名<span class="token operator">&gt;</span>     指定数据包从哪个网络接口进入，<span class="token parameter variable">-o</span> --out-interface   网络接口名<span class="token operator">&gt;</span>     指定数据包从哪个网络接口输出<span class="token parameter variable">-p</span> ---proto          协议类型        指定数据包匹配的协议，如TCP、UDP和ICMP等<span class="token parameter variable">-s</span> <span class="token parameter variable">--source</span>          源地址或子网<span class="token operator">&gt;</span>   指定数据包匹配的源地址   <span class="token parameter variable">--sport</span>           源端口号<span class="token operator">&gt;</span>       指定数据包匹配的源端口号   <span class="token parameter variable">--dport</span>           目的端口号<span class="token operator">&gt;</span>     指定数据包匹配的目的端口号<span class="token parameter variable">-m</span> <span class="token parameter variable">--match</span>           匹配的模块      指定数据包规则所使用的过滤模块<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-4-动作"><a href="#3-4-动作" class="headerlink" title="3.4 动作"></a>3.4 动作</h3><ul><li><strong>REJECT</strong> 拦阻该数据包，并返回数据包通知对方，可以返回的数据包有几个选择：ICMP port-unreachable、ICMP echo-reply 或是tcp-reset（这个数据包包会要求对方关闭联机），进行完此处理动作后，将不再比对其它规则，直接中断过滤程序。范例如下：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">iptables <span class="token parameter variable">-A</span>  INPUT <span class="token parameter variable">-p</span> TCP <span class="token parameter variable">--dport</span> <span class="token number">22</span> <span class="token parameter variable">-j</span> REJECT --reject-with ICMP echo-reply<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p><strong>DROP</strong> 丢弃数据包不予处理，进行完此处理动作后，将不再比对其它规则，直接中断过滤程序。</p></li><li><p><strong>REDIRECT</strong> 将封包重新导向到另一个端口（PNAT），进行完此处理动作后，将会继续比对其它规则。这个功能可以用来实作透明代理 或用来保护web 服务器。例如：</p></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">iptables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-A</span> PREROUTING <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">--dport</span> <span class="token number">80</span> <span class="token parameter variable">-j</span> REDIRECT--to-ports <span class="token number">8081</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><strong>MASQUERADE</strong> 改写封包来源IP为防火墙的IP，可以指定port 对应的范围，进行完此处理动作后，直接跳往下一个规则链（mangle:postrouting）。这个功能与 SNAT 略有不同，当进行IP 伪装时，不需指定要伪装成哪个 IP，IP 会从网卡直接读取，当使用拨接连线时，IP 通常是由 ISP 公司的 DHCP服务器指派的，这个时候 MASQUERADE 特别有用。范例如下：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">iptables <span class="token parameter variable">-t</span> nat <span class="token parameter variable">-A</span> POSTROUTING <span class="token parameter variable">-p</span> TCP <span class="token parameter variable">-j</span> MASQUERADE --to-ports <span class="token number">21000</span>-31000<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-5-常用示例"><a href="#3-5-常用示例" class="headerlink" title="3.5 常用示例"></a>3.5 常用示例</h3><p><strong>查看防火墙的状态</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">iptables <span class="token parameter variable">-L</span> <span class="token parameter variable">-n</span> <span class="token parameter variable">-v</span> --line-numbers<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>启动/停止/重启防火墙</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">service</span> iptables stop<span class="token function">service</span> iptables start<span class="token function">service</span> iptables restart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>删除一条规则</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">iptables <span class="token parameter variable">-L</span> INPUT <span class="token parameter variable">-n</span> --line-numbersiptables <span class="token parameter variable">-L</span> OUTPUT <span class="token parameter variable">-n</span> --line-numbersiptables <span class="token parameter variable">-L</span> OUTPUT <span class="token parameter variable">-n</span> --line-numbers <span class="token operator">|</span> <span class="token function">less</span>iptables <span class="token parameter variable">-L</span> OUTPUT <span class="token parameter variable">-n</span> --line-numbers <span class="token operator">|</span> <span class="token function">grep</span> <span class="token number">202.54</span>.1.1<span class="token comment"># 删除 如果想要删除一条规则，那么可以直接使用序号，例如 INPUT 的第 1 条可以直接这么删除</span>iptables <span class="token parameter variable">-D</span> INPUT <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>插入一条规则</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 插入前面</span>iptables <span class="token parameter variable">-I</span> INPUT <span class="token number">2</span> <span class="token parameter variable">-s</span> <span class="token number">202.54</span>.1.2 <span class="token parameter variable">-j</span> DROP  <span class="token comment"># 在第二条位置插入一条规则</span><span class="token comment"># 添加后面</span>iptables <span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-s</span> <span class="token number">202.54</span>.1.2 <span class="token parameter variable">-j</span> DROP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>保存防火墙规则</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">service</span> iptables save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>加载防火墙规则</strong></p><pre class="line-numbers language-bash'" data-language="bash'"><code class="language-bash'">iptables-restore &lt; /root/my.active.firewall.rules<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>删除公共接口上的私有地址</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">iptables <span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-i</span> eth1 <span class="token parameter variable">-s</span> <span class="token number">192.168</span>.0.0/24 <span class="token parameter variable">-j</span> DROPiptables <span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-i</span> eth1 <span class="token parameter variable">-s</span> <span class="token number">10.0</span>.0.0/8 <span class="token parameter variable">-j</span> DROP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>屏蔽 ip 地址</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">iptables <span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-s</span> <span class="token number">1.2</span>.3.4 <span class="token parameter variable">-j</span> DROPiptables <span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-s</span> <span class="token number">192.168</span>.0.0/24 <span class="token parameter variable">-j</span> DROP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>屏蔽入站端口</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">iptables <span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">-s</span> <span class="token number">1.2</span>.3.4 <span class="token parameter variable">--dport</span> <span class="token number">80</span> <span class="token parameter variable">-j</span> DROPiptables <span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-i</span> eth1 <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">-s</span> <span class="token number">192.168</span>.1.0/24 <span class="token parameter variable">--dport</span> <span class="token number">80</span> <span class="token parameter variable">-j</span> DROP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>屏蔽出站ip</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">iptables <span class="token parameter variable">-A</span> OUTPUT <span class="token parameter variable">-d</span> <span class="token number">192.168</span>.1.0/24 <span class="token parameter variable">-j</span> DROPiptables <span class="token parameter variable">-A</span> OUTPUT <span class="token parameter variable">-o</span> eth1 <span class="token parameter variable">-d</span> <span class="token number">192.168</span>.1.0/24 <span class="token parameter variable">-j</span> DROP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>记录并删除包</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">iptables <span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-i</span> eth1 <span class="token parameter variable">-s</span> <span class="token number">10.0</span>.0.0/8 <span class="token parameter variable">-j</span> LOG --log-prefix <span class="token string">"IP_SPOOF A: "</span>iptables <span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-i</span> eth1 <span class="token parameter variable">-s</span> <span class="token number">10.0</span>.0.0/8 <span class="token parameter variable">-j</span> DROP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>通过 mac 地址过滤数据</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">iptables <span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-m</span> mac --mac-source 00:0F:EA:91:04:08 <span class="token parameter variable">-j</span> DROP<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>只接收MAC地址为00:0F:EA:91:04:07的TCP流量</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">iptables <span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-p</span> tcp --destination-port <span class="token number">22</span> <span class="token parameter variable">-m</span> mac --mac-source 00:0F:EA:91:04:07 <span class="token parameter variable">-j</span> ACCEPT<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>过滤 ICMP ping 请求</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">iptables <span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-p</span> icmp --icmp-type echo-request <span class="token parameter variable">-j</span> DROPiptables <span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-i</span> eth1 <span class="token parameter variable">-p</span> icmp --icmp-type echo-request <span class="token parameter variable">-j</span> DROP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>开启范围端口</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">iptables <span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-m</span> state <span class="token parameter variable">--state</span> NEW <span class="token parameter variable">-m</span> tcp <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">--dport</span> <span class="token number">7000</span>:7010 <span class="token parameter variable">-j</span> ACCEPT<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>开启范围 ip</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">iptables <span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-p</span> tcp --destination-port <span class="token number">80</span> <span class="token parameter variable">-m</span> iprange --src-range <span class="token number">192.168</span>.1.100-192.168.1.200 <span class="token parameter variable">-j</span> ACCEPT<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>改变某个链的默认规则</strong></p><p>以filter表的三个链为例，默认是ACCEPT。 但是我们可以改变这个模型规则，比如默认规则就是DROP</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">iptables <span class="token parameter variable">-t</span> filter <span class="token parameter variable">-P</span> INPUT DROP<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>在使用某个网络时，不响应请求</strong></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">iptables -A OUTPUT -o wlan0 -d 121.18.238.0/29 -j DROP <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>规则的取反配置</strong></p><p>上述规则配置，一般都是满足某某条件，做什么动作。除此之外，我们还可以配置，如果不满足某某条件，则做某个动作。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">iptables -A INPUT -p tcp -m multiport ! --dports 22,80,443 -j DROP<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个<code>不满足则</code>的取动作，是通过感叹号来实现的。 上述命令的含义是：非22,80,443的端口，我们直接丢弃。</p><p>当然这条命令之前，应该要配置一条规则：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>因为通过22或80建立的连接，可能会衍生出一些RELATED的连接，他们的端口可能不是22或80，那样也就被拒掉了。会导致通信出问题。</p><h3 id="3-6-规则持久化"><a href="#3-6-规则持久化" class="headerlink" title="3.6 规则持久化"></a>3.6 <strong>规则持久化</strong></h3><ol><li>第一步，在修改iptables配置后，将其导出到某个文件，比如: /etc/iptables.conf 。命令为：<code>iptables-save &gt; /etc/iptables.conf</code> 这一步，每次修改后都要做</li><li>第二步，在<code>/etc/rc.local</code>中添加命令<code>iptables-restore &lt; /etc/iptables.conf</code>。从此之后，每次重启，系统会自动从<code>/etc/iptables.conf</code>恢复对应的iptables配置。这一步只需要做一次</li></ol>]]></content>
      
      
      <categories>
          
          <category> network </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网穿透【搞一下】</title>
      <link href="/wang-luo/nei-wang-chuan-tou-gao-yi-xia.html"/>
      <url>/wang-luo/nei-wang-chuan-tou-gao-yi-xia.html</url>
      
        <content type="html"><![CDATA[<h2 id="内网穿透【搞一下】"><a href="#内网穿透【搞一下】" class="headerlink" title="内网穿透【搞一下】"></a>内网穿透【搞一下】</h2><h3 id="场景入门介绍"><a href="#场景入门介绍" class="headerlink" title="场景入门介绍"></a>场景入门介绍</h3><p>老板找到产品经理，说：“客户想看一下项目，你搞一下，把demo网站搭起来”<br>产品经理找到技术组长，说：“客户想看一下项目，你搞一下，让客户能访问demo网站”<br>技术组长找到程序员小A，说：“客户想看一下项目，你搞一下,让他访问到你做的demo网站”<br>小A: “我的demo在开发中，还在我的电脑本地， 怎么搞？？？”<br>组长扔来一个文档链接：“按这个说明去【搞一下】”。</p><h3 id="内网穿透搞一下"><a href="#内网穿透搞一下" class="headerlink" title="内网穿透搞一下"></a>内网穿透搞一下</h3><p>【搞一下】（ <a href="http://www.gaoyixia.com/">www.gaoyixia.com</a> ) ，是一个可以把本机和局域网网站映射到公网访问的内网穿透服务。使用非常简单，几乎无门槛——<strong>无须注册，无须付费，不限流量，不需繁琐的配置，支持win/mac/linux三大平台</strong>。下面是三个典型的使用场景：</p><p>1，可以使用本服务，映射本机demo给客户展示，而不用大费周折去搭建一个临时公网测试环境。</p><p>2，小程序开发，公众号开发，微信支付开发，支付宝回调等等，这些回调类的接口可以通过本服务，直接回调接口到本机，方便本机调试。省去了每次调试都更新服务器的麻烦。</p><p>3，家里有电脑/nas的机器，可以映射web管理界面到公网去，方便出门在外时候用网络访问。</p><p>还有更多使用场景待挖掘。本服务提供的是一种能力，一种可以让本机和局域网能被公网访问的能力。</p><h3 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h3><ul><li><p>window用户</p><p>点击下载 <a href="https://www.showdoc.com.cn/server/api/attachment/visitFile?sign=5bad6d3115b8d2424e89ad04ab265a29">gaoyixia-win.zip</a> 。下载后，解压到任意目录。然后双击运行。根据提示，输入要映射的本机或者局域网地址端口即可。运行后会得到一个公网地址，复制到浏览器便可访问（不要直接Crtl + C 复制，会退出程序,推荐鼠标选中复制）。</p></li><li><p>mac用户</p><p>打开终端，执行以下命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 下载执行文件 </span><span class="token comment"># 如果你的机器尚未有wget命令，可先执行brew install wget安装之。</span><span class="token function">wget</span> <span class="token parameter variable">-c</span> <span class="token string">"https://www.showdoc.com.cn/server/api/attachment/visitFile?sign=f9bde9f10b6d1fdb26ca353f49bf89c6"</span> <span class="token parameter variable">-O</span> gaoyixia-macos<span class="token comment"># 赋予执行权限</span><span class="token function">chmod</span> +x gaoyixia-macos<span class="token comment"># 运行</span>./gaoyixia-macos <span class="token parameter variable">-h</span> <span class="token number">127.0</span>.0.1 <span class="token parameter variable">-p</span> <span class="token number">80</span><span class="token comment"># 运行后会得到一个公网地址，复制到浏览器访问即可（不要直接Crtl + C 复制，会退出程序,推荐鼠标选中复制）。</span><span class="token comment"># 上面命令中的-h 127.0.0.1 - p 80表示的是地址和端口。你也可以填写局域网地址。比如</span>./gaoyixia-macos <span class="token parameter variable">-h</span> local.oa.com <span class="token parameter variable">-p</span> <span class="token number">80</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>linux用户</p><p>打开终端，执行以下命令</p></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 下载执行文件</span><span class="token function">wget</span> <span class="token parameter variable">-c</span> <span class="token string">"https://www.showdoc.com.cn/server/api/attachment/visitFile?sign=e491f057ff8e77dedcdf1b3d7560eb4d"</span> <span class="token parameter variable">-O</span> gaoyixia-linux<span class="token comment"># 赋予执行权限</span><span class="token function">chmod</span> +x gaoyixia-linux<span class="token comment"># 运行</span>./gaoyixia-linux <span class="token parameter variable">-h</span> <span class="token number">127.0</span>.0.1 <span class="token parameter variable">-p</span> <span class="token number">80</span><span class="token comment"># 运行后会得到一个公网地址，复制到浏览器访问即可（不要直接Crtl + C 复制，会退出程序,推荐鼠标选中复制）。</span><span class="token comment"># 上面命令中的-h 127.0.0.1 - p 80表示的是地址和端口。你也可以填写局域网地址。比如</span>./gaoyixia-linux <span class="token parameter variable">-h</span> local.oa.com <span class="token parameter variable">-p</span> <span class="token number">80</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="访问限制"><a href="#访问限制" class="headerlink" title="访问限制"></a>访问限制</h3><p>为了防止被滥用，本服务增加了一些限制措施:</p><p>1, 用户获取到的公网地址是完全随机的，暂不开放自定义子域名<br>2, 每个公网地址只允许前10个不同ip访问，超过会被限制<br>3, 每个公网地址有效期最长为一个星期，过期则无法访问。所以请勿用来搭建长期服务。以后可能视滥用情况而缩短有效期。但最低会保持一天以上。</p><p>本服务鼓励用于开发测试等小众范围内使用的场景，禁止搭建面向大众的公开服务和其他不被法律认可的服务。</p><h3 id="帮助与支持"><a href="#帮助与支持" class="headerlink" title="帮助与支持"></a>帮助与支持</h3><p>请联系xing7th#gmail.com(把#改为@就是邮箱地址),邮件标题请说明来自内网穿透【搞一下】这个产品。</p>]]></content>
      
      
      <categories>
          
          <category> network </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VPS的搭建</title>
      <link href="/wang-luo/vps-de-da-jian.html"/>
      <url>/wang-luo/vps-de-da-jian.html</url>
      
        <content type="html"><![CDATA[<h1 id="基于github学生包VPS的免费搭建"><a href="#基于github学生包VPS的免费搭建" class="headerlink" title="基于github学生包VPS的免费搭建"></a>基于github学生包VPS的免费搭建</h1><h2 id="1-首先注册成github学生包"><a href="#1-首先注册成github学生包" class="headerlink" title="1.首先注册成github学生包"></a>1.首先注册成github学生包</h2><p><a href="https://education.github.com/pack/offers">https://education.github.com/pack/offers</a></p><img src="/wang-luo/vps-de-da-jian/image-20230602175353695.png" class="" title="image-20230602175353695"><h2 id="2-注册Azure"><a href="#2-注册Azure" class="headerlink" title="2.注册Azure"></a>2.注册Azure</h2><img src="/wang-luo/vps-de-da-jian/image-20230602175438169.png" class="" title="image-20230602175438169"><p> 然后会出现以下页面，选择使用另一个账户登录！画面更新后选择<strong>使用Github登录</strong>！这样才会绑定你的Github账号和微软账号，通过微软正常的验证学术身份是无法与Github绑定的！</p><img src="/wang-luo/vps-de-da-jian/image-20230602175453016.png" class="" title="image-20230602175453016"><img src="/wang-luo/vps-de-da-jian/image-20230602175632256.png" class="" title="image-20230602175632256"><img src="/wang-luo/vps-de-da-jian/image-20230602175639664.png" class="" title="image-20230602175639664"><img src="/wang-luo/vps-de-da-jian/image-20230602175647845.png" class="" title="image-20230602175647845"><img src="/wang-luo/vps-de-da-jian/image-20230602175655998.png" class="" title="image-20230602175655998"><img src="/wang-luo/vps-de-da-jian/image-20230602175705664.png" class="" title="image-20230602175705664"><img src="/wang-luo/vps-de-da-jian/image-20230602175715528.png" class="" title="image-20230602175715528"><img src="/wang-luo/vps-de-da-jian/image-20230602175727674.png" class="" title="image-20230602175727674"><img src="/wang-luo/vps-de-da-jian/image-20230602175743997.png" class="" title="image-20230602175743997"><h2 id="3-安装v2ray"><a href="#3-安装v2ray" class="headerlink" title="3.安装v2ray"></a>3.安装v2ray</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">curl</span> <span class="token parameter variable">-s</span> <span class="token parameter variable">-L</span> https://git.io/v2ray.sh<span class="token punctuation">)</span>加速：<span class="token function">wget</span> https://raw.githubusercontent.com/flyzy2005/ss-fly/master/ss-fly.sh <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x ss-fly.sh <span class="token operator">&amp;&amp;</span> ./ss-fly.sh <span class="token parameter variable">-bbr</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><img src="/wang-luo/vps-de-da-jian/image-20230602175849920.png" class="" title="image-20230602175849920"><p>开放对应的v2Ray的端口</p><img src="/wang-luo/vps-de-da-jian/image-20230602175922347.png" class="" title="image-20230602175922347">]]></content>
      
      
      <categories>
          
          <category> network </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Metallb结合Ingress的使用</title>
      <link href="/kubernetes/metallb-jie-he-ingress-de-shi-yong.html"/>
      <url>/kubernetes/metallb-jie-he-ingress-de-shi-yong.html</url>
      
        <content type="html"><![CDATA[<h1 id="Metallb结合Ingress的使用"><a href="#Metallb结合Ingress的使用" class="headerlink" title="Metallb结合Ingress的使用"></a>Metallb结合Ingress的使用</h1><h2 id="一、Metallb"><a href="#一、Metallb" class="headerlink" title="一、Metallb"></a>一、Metallb</h2><h3 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h3><blockquote><p>Kubernetes不提供网络负载均衡器的实现（LoadBalancer类型的服务）用于裸机集群。Kubernetes附带的Network LB的实现都是调用各种IaaS平台（GCP，AWS，Azure等）的粘合代码。如果您未在受支持的IaaS平台（GCP，AWS，Azure等）上运行，则LoadBalancers在创建时将无限期保持“待处理”状态。<br>裸机集群运营商只剩下两个较小的工具，即“ NodePort”和“ externalIPs”服务，可将用户流量引入其集群。这两个选项在生产用途上都有很大的缺点，这使裸金属集群成为Kubernetes生态系统中的二等公民。<br>MetalLB旨在通过提供与标准网络设备集成的Network LB实现来解决这种不平衡问题，从而使裸机群集上的外部服务也尽可能“正常运行”。</p></blockquote><h3 id="2-部署安装"><a href="#2-部署安装" class="headerlink" title="2.部署安装"></a>2.部署安装</h3><h4 id="2-1环境准备"><a href="#2-1环境准备" class="headerlink" title="2.1环境准备"></a>2.1环境准备</h4><ul><li>设置kube-proxy模式为为ipvs</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">kubectl edit configmap <span class="token punctuation">-</span>n kube<span class="token punctuation">-</span>system kube<span class="token punctuation">-</span>proxy<span class="token comment">## 设置kube-proxy模式为为ipvs</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> kubeproxy.config.k8s.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> KubeProxyConfiguration<span class="token key atrule">mode</span><span class="token punctuation">:</span> <span class="token string">"ipvs"</span><span class="token key atrule">ipvs</span><span class="token punctuation">:</span>  <span class="token key atrule">strictARP</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>设置kube-proxy开启ARP</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># see what changes would be made, returns nonzero returncode if different</span>kubectl get configmap kube-proxy <span class="token parameter variable">-n</span> kube-system <span class="token parameter variable">-o</span> yaml <span class="token operator">|</span> <span class="token punctuation">\</span><span class="token function">sed</span> <span class="token parameter variable">-e</span> <span class="token string">"s/strictARP: false/strictARP: true/"</span> <span class="token operator">|</span> <span class="token punctuation">\</span>kubectl <span class="token function">diff</span> <span class="token parameter variable">-f</span> - <span class="token parameter variable">-n</span> kube-system<span class="token comment"># actually apply the changes, returns nonzero returncode on errors only</span>kubectl get configmap kube-proxy <span class="token parameter variable">-n</span> kube-system <span class="token parameter variable">-o</span> yaml <span class="token operator">|</span> <span class="token punctuation">\</span><span class="token function">sed</span> <span class="token parameter variable">-e</span> <span class="token string">"s/strictARP: false/strictARP: true/"</span> <span class="token operator">|</span> <span class="token punctuation">\</span>kubectl apply <span class="token parameter variable">-f</span> - <span class="token parameter variable">-n</span> kube-system<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-2-安装Manifest"><a href="#2-2-安装Manifest" class="headerlink" title="2.2 安装Manifest"></a>2.2 安装Manifest</h4><pre class="line-numbers language-none"><code class="language-none">kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.13.9/config/manifests/metallb-native.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这将把MetalLB部署到您的集群，在<code>MetalLB -system</code>命名空间下。清单中的组件是:</p><ul><li><code> metallb-system/controller</code>部署。这是处理IP地址分配的集群范围的控制器。</li><li><code>metallb-system/speaker</code>守护进程。这是说出您所选择的协议以使服务可访问的组件。</li></ul><img src="/kubernetes/metallb-jie-he-ingress-de-shi-yong/image-20230531112330690.png" class="" title="image-20230531112330690"><h4 id="2-3-使用helm安装metallb"><a href="#2-3-使用helm安装metallb" class="headerlink" title="2.3 使用helm安装metallb"></a>2.3 使用helm安装metallb</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">helm repo <span class="token function">add</span> metallb https://metallb.github.io/metallbhelm <span class="token function">install</span> metallb metallb/metallb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3-Metallb使用"><a href="#3-Metallb使用" class="headerlink" title="3.Metallb使用"></a>3.Metallb使用</h3><h4 id="3-1配置IP池"><a href="#3-1配置IP池" class="headerlink" title="3.1配置IP池"></a>3.1配置IP池</h4><ul><li>旧版本采用configMap配置metallb的ip池</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> metallb<span class="token punctuation">-</span>system  <span class="token key atrule">name</span><span class="token punctuation">:</span> config<span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">config</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">    address-pools:    - name: default      protocol: layer2      addresses:      - 172.25.1.100-172.25.1.200</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>新版本采用crd管理</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> metallb.io/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> IPAddressPool<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> zstack<span class="token punctuation">-</span>edge  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> metallb<span class="token punctuation">-</span>system<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">addresses</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> 172.31.12.116/32  <span class="token key atrule">autoAssign</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">avoidBuggyIPs</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-2配置LoadBalance的Service"><a href="#3-2配置LoadBalance的Service" class="headerlink" title="3.2配置LoadBalance的Service"></a>3.2配置LoadBalance的Service</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">kubectl.kubernetes.io/last-applied-configuration</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">      {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"istio-ingressgateway","install.operator.istio.io/owning-resource":"unknown","install.operator.istio.io/owning-resource-namespace":"istio-system","istio":"ingressgateway","istio.io/rev":"default","operator.istio.io/component":"IngressGateways","operator.istio.io/managed":"Reconcile","operator.istio.io/version":"1.17.2","release":"istio"},"name":"istio-ingressgateway","namespace":"istio-system"},"spec":{"ports":[{"name":"status-port","port":15021,"protocol":"TCP","targetPort":15021},{"name":"http2","port":80,"protocol":"TCP","targetPort":8080},{"name":"https","port":443,"protocol":"TCP","targetPort":8443},{"name":"tcp","port":31400,"protocol":"TCP","targetPort":31400},{"name":"tls","port":15443,"protocol":"TCP","targetPort":15443}],"selector":{"app":"istio-ingressgateway","istio":"ingressgateway"},"type":"LoadBalancer"}}</span>    <span class="token key atrule">metallb.universe.tf/ip-allocated-from-pool</span><span class="token punctuation">:</span> zstack<span class="token punctuation">-</span>edge  <span class="token key atrule">creationTimestamp</span><span class="token punctuation">:</span> <span class="token string">"2023-05-30T07:20:36Z"</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> istio<span class="token punctuation">-</span>ingressgateway    <span class="token key atrule">install.operator.istio.io/owning-resource</span><span class="token punctuation">:</span> unknown    <span class="token key atrule">install.operator.istio.io/owning-resource-namespace</span><span class="token punctuation">:</span> istio<span class="token punctuation">-</span>system    <span class="token key atrule">istio</span><span class="token punctuation">:</span> ingressgateway    <span class="token key atrule">istio.io/rev</span><span class="token punctuation">:</span> default    <span class="token key atrule">operator.istio.io/component</span><span class="token punctuation">:</span> IngressGateways    <span class="token key atrule">operator.istio.io/managed</span><span class="token punctuation">:</span> Reconcile    <span class="token key atrule">operator.istio.io/version</span><span class="token punctuation">:</span> 1.17.2    <span class="token key atrule">release</span><span class="token punctuation">:</span> istio  <span class="token key atrule">name</span><span class="token punctuation">:</span> istio<span class="token punctuation">-</span>ingressgateway  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> istio<span class="token punctuation">-</span>system  <span class="token key atrule">resourceVersion</span><span class="token punctuation">:</span> <span class="token string">"2916811"</span>  <span class="token key atrule">uid</span><span class="token punctuation">:</span> ada82838<span class="token punctuation">-</span>73e2<span class="token punctuation">-</span>486c<span class="token punctuation">-</span>a83d<span class="token punctuation">-</span>31309f4561f5<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">allocateLoadBalancerNodePorts</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">clusterIP</span><span class="token punctuation">:</span> 10.233.58.54  <span class="token key atrule">clusterIPs</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> 10.233.58.54  <span class="token key atrule">externalTrafficPolicy</span><span class="token punctuation">:</span> Cluster  <span class="token key atrule">internalTrafficPolicy</span><span class="token punctuation">:</span> Cluster  <span class="token key atrule">ipFamilies</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> IPv4  <span class="token key atrule">ipFamilyPolicy</span><span class="token punctuation">:</span> SingleStack  <span class="token key atrule">ports</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> status<span class="token punctuation">-</span>port    <span class="token key atrule">nodePort</span><span class="token punctuation">:</span> <span class="token number">31741</span>    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">15021</span>    <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP    <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">15021</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> http2    <span class="token key atrule">nodePort</span><span class="token punctuation">:</span> <span class="token number">30584</span>    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span>    <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP    <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">8080</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> https    <span class="token key atrule">nodePort</span><span class="token punctuation">:</span> <span class="token number">32734</span>    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">443</span>    <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP    <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">8443</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> tcp    <span class="token key atrule">nodePort</span><span class="token punctuation">:</span> <span class="token number">31104</span>    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">31400</span>    <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP    <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">31400</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> tls    <span class="token key atrule">nodePort</span><span class="token punctuation">:</span> <span class="token number">30329</span>    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">15443</span>    <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP    <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">15443</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> istio<span class="token punctuation">-</span>ingressgateway    <span class="token key atrule">istio</span><span class="token punctuation">:</span> ingressgateway  <span class="token key atrule">sessionAffinity</span><span class="token punctuation">:</span> None  <span class="token key atrule">type</span><span class="token punctuation">:</span> LoadBalancer<span class="token key atrule">status</span><span class="token punctuation">:</span>  <span class="token key atrule">loadBalancer</span><span class="token punctuation">:</span>    <span class="token key atrule">ingress</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">ip</span><span class="token punctuation">:</span> 172.31.12.116<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/kubernetes/metallb-jie-he-ingress-de-shi-yong/image-20230531113816401.png" class="" title="image-20230531113816401"><img src="/kubernetes/metallb-jie-he-ingress-de-shi-yong/image-20230531114357478.png" class="" title="image-20230531114357478"><h2 id="二、Ingress"><a href="#二、Ingress" class="headerlink" title="二、Ingress"></a>二、Ingress</h2><h3 id="1-简介-1"><a href="#1-简介-1" class="headerlink" title="1.简介"></a>1.简介</h3><blockquote><p><a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#ingress-v1-networking-k8s-io">Ingress</a> 公开从集群外部到集群内<a href="https://kubernetes.io/zh-cn/docs/concepts/services-networking/service/">服务</a>的 HTTP 和 HTTPS 路由。 流量路由由 Ingress 资源上定义的规则控制。</p><p>Ingress 可为 Service 提供外部可访问的 URL、负载均衡流量、终止 SSL/TLS，以及基于名称的虚拟托管。 <a href="https://kubernetes.io/zh-cn/docs/concepts/services-networking/ingress-controllers">Ingress 控制器</a> 通常负责通过负载均衡器来实现 Ingress，尽管它也可以配置边缘路由器或其他前端来帮助处理流量。</p><p>Ingress 不会公开任意端口或协议。 将 HTTP 和 HTTPS 以外的服务公开到 Internet 时，通常使用 <a href="https://kubernetes.io/zh-cn/docs/concepts/services-networking/service/#type-nodeport">Service.Type=NodePort</a> 或 <a href="https://kubernetes.io/zh-cn/docs/concepts/services-networking/service/#loadbalancer">Service.Type=LoadBalancer</a> 类型的 Service</p></blockquote><p>下面是一个将所有流量都发送到同一 Service 的简单 Ingress 示例：</p><p><img src="https://d33wubrfki0l68.cloudfront.net/4f01eaec32889ff16ee255e97822b6d165b633f0/a54b4/zh-cn/docs/images/ingress.svg" alt="ingress-diagram"></p><h3 id="2-部署安装-1"><a href="#2-部署安装-1" class="headerlink" title="2.部署安装"></a>2.部署安装</h3><h4 id="2-1环境准备-1"><a href="#2-1环境准备-1" class="headerlink" title="2.1环境准备"></a>2.1环境准备</h4><ul><li>安装ingress-nginx的controller控制器</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ helm repo <span class="token function">add</span> bitnami https://charts.bitnami.com/bitnami$ helm <span class="token function">install</span> my-release bitnami/nginx-ingress-controller<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><img src="/kubernetes/metallb-jie-he-ingress-de-shi-yong/image-20230531140021825.png" class="" title="image-20230531140021825"><img src="/kubernetes/metallb-jie-he-ingress-de-shi-yong/image-20230531140143889.png" class="" title="image-20230531140143889"><img src="/kubernetes/metallb-jie-he-ingress-de-shi-yong/image-20230531140040314.png" class="" title="image-20230531140040314"><h3 id="3-Ingress使用"><a href="#3-Ingress使用" class="headerlink" title="3.Ingress使用"></a>3.Ingress使用</h3><ul><li>Ingress 中的spec字段是Ingress资源的核心组成部分，主要包含以下3个字段：</li><li><ul><li>rules：用于定义当前Ingress资源的转发规则列表；由rules定义规则，或没有匹配到规则时，所有的流量会转发到由backend定义的默认后端。</li><li>backend：默认的后端，用于服务那些没有匹配到任何规则的请求；定义Ingress资源时，必须要定义backend或rules两者之一，该字段用于让负载均衡器指定一个全局默认的后端。</li><li>tls：TLS配置，目前仅支持通过默认端口443提供服务，如果要配置指定的列表成员指向不同的主机，则需要通过SNI TLS扩展机制来支持该功能。</li></ul></li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Ingress<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> example  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> istio<span class="token punctuation">-</span>system<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">ingressClassName</span><span class="token punctuation">:</span> nginx  <span class="token key atrule">rules</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">http</span><span class="token punctuation">:</span>        <span class="token key atrule">paths</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">backend</span><span class="token punctuation">:</span>              <span class="token key atrule">service</span><span class="token punctuation">:</span>                <span class="token key atrule">name</span><span class="token punctuation">:</span> kiali                <span class="token key atrule">port</span><span class="token punctuation">:</span>                  <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token number">20001</span>            <span class="token key atrule">path</span><span class="token punctuation">:</span> /kiali            <span class="token key atrule">pathType</span><span class="token punctuation">:</span> Prefix<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/kubernetes/metallb-jie-he-ingress-de-shi-yong/image-20230531140216170.png" class="" title="image-20230531140216170"><ul><li>访问地址</li></ul><img src="/kubernetes/metallb-jie-he-ingress-de-shi-yong/image-20230531140243064.png" class="" title="image-20230531140243064"><img src="/kubernetes/metallb-jie-he-ingress-de-shi-yong/image-20230531140510159.png" class="" title="image-20230531140510159"><ul><li>example:</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">An example Ingress that makes use of the controller</span><span class="token punctuation">:</span>  <span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.k8s.io/v1  <span class="token key atrule">kind</span><span class="token punctuation">:</span> Ingress  <span class="token key atrule">metadata</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> example    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx  <span class="token key atrule">spec</span><span class="token punctuation">:</span>    <span class="token key atrule">ingressClassName</span><span class="token punctuation">:</span> nginx    <span class="token key atrule">rules</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> www.example.com        <span class="token key atrule">http</span><span class="token punctuation">:</span>          <span class="token key atrule">paths</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">backend</span><span class="token punctuation">:</span>                <span class="token key atrule">service</span><span class="token punctuation">:</span>                  <span class="token key atrule">name</span><span class="token punctuation">:</span> example<span class="token punctuation">-</span>service                  <span class="token key atrule">port</span><span class="token punctuation">:</span>                    <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token number">80</span>              <span class="token key atrule">path</span><span class="token punctuation">:</span> /              <span class="token key atrule">pathType</span><span class="token punctuation">:</span> Prefix    <span class="token comment"># This section is only required if TLS is to be enabled for the Ingress</span>    <span class="token key atrule">tls</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">hosts</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> www.example.com          <span class="token key atrule">secretName</span><span class="token punctuation">:</span> example<span class="token punctuation">-</span>tlsIf TLS is enabled for the Ingress<span class="token punctuation">,</span> <span class="token key atrule">a Secret containing the certificate and key must also be provided</span><span class="token punctuation">:</span>  <span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1  <span class="token key atrule">kind</span><span class="token punctuation">:</span> Secret  <span class="token key atrule">metadata</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> example<span class="token punctuation">-</span>tls    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx  <span class="token key atrule">data</span><span class="token punctuation">:</span>    <span class="token key atrule">tls.crt</span><span class="token punctuation">:</span> &lt;base64 encoded cert<span class="token punctuation">&gt;</span>    <span class="token key atrule">tls.key</span><span class="token punctuation">:</span> &lt;base64 encoded key<span class="token punctuation">&gt;</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> kubernetes.io/tls<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于karmada的多集群管理（二）</title>
      <link href="/kubernetes/ji-yu-karmada-de-duo-ji-qun-guan-li-2.html"/>
      <url>/kubernetes/ji-yu-karmada-de-duo-ji-qun-guan-li-2.html</url>
      
        <content type="html"><![CDATA[<h1 id="基于Karmada的多集群管理-调度-二"><a href="#基于Karmada的多集群管理-调度-二" class="headerlink" title="基于Karmada的多集群管理-调度(二)"></a>基于Karmada的多集群管理-调度(二)</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>上文主要介绍了karmada集群的快速搭建以及基本的用例的下发demo,本文主要详细介绍karmada集群中调度传播策略propagationpolicies、差异性配置overridepolicies的资源介绍。</p><h2 id="Propagationpolicy、ClusterPropagationpolicy-分发策略"><a href="#Propagationpolicy、ClusterPropagationpolicy-分发策略" class="headerlink" title="Propagationpolicy、ClusterPropagationpolicy(分发策略)"></a><a href="https://karmada.io/zh/docs/userguide/scheduling/resource-propagating">Propagationpolicy、ClusterPropagationpolicy(分发策略)</a></h2><h3 id="部署应用到指定集群"><a href="#部署应用到指定集群" class="headerlink" title="部署应用到指定集群"></a>部署应用到指定集群</h3><p><code>.spec.placement.clusterAffinity</code> 字段可以配置分发策略规则分发到指定的集群中，若没有配置则所有集群都可以作为候选调度。</p><h4 id="主要有4中配置方式"><a href="#主要有4中配置方式" class="headerlink" title="主要有4中配置方式"></a>主要有4中配置方式</h4><ul><li>LabelSelector（标签选择）</li><li>FieldSelector</li><li>ClusterNames</li><li>ExcludeClusters</li></ul><h4 id="1-LabelSelector"><a href="#1-LabelSelector" class="headerlink" title="1. LabelSelector"></a>1. LabelSelector</h4><p>LabelSelector使用标签过滤选择成员集群，<code>kubectl  get cluster cluster121 -oyaml  </code>中<code>*metav1.LabelSelector</code></p><p>示例如下：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PropagationPolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> test<span class="token punctuation">-</span>propagation<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token comment">#...</span>  <span class="token key atrule">placement</span><span class="token punctuation">:</span>    <span class="token key atrule">clusterAffinity</span><span class="token punctuation">:</span>      <span class="token key atrule">labelSelector</span><span class="token punctuation">:</span>        <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>          <span class="token key atrule">location</span><span class="token punctuation">:</span> us    <span class="token comment">#...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>也可以配置这种：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PropagationPolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> test<span class="token punctuation">-</span>propagation<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token comment">#...</span>  <span class="token key atrule">placement</span><span class="token punctuation">:</span>    <span class="token key atrule">clusterAffinity</span><span class="token punctuation">:</span>      <span class="token key atrule">labelSelector</span><span class="token punctuation">:</span>        <span class="token key atrule">matchExpressions</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> location          <span class="token key atrule">operator</span><span class="token punctuation">:</span> In          <span class="token key atrule">values</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> us    <span class="token comment">#...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>operator配置规则参考k8s:<a href="https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#resources-that-support-set-based-requirements">https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#resources-that-support-set-based-requirements</a></p><h4 id="2-FieldSelector"><a href="#2-FieldSelector" class="headerlink" title="2. FieldSelector"></a>2. FieldSelector</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PropagationPolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>propagation<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token comment">#...</span>  <span class="token key atrule">placement</span><span class="token punctuation">:</span>    <span class="token key atrule">clusterAffinity</span><span class="token punctuation">:</span>      <span class="token key atrule">fieldSelector</span><span class="token punctuation">:</span>        <span class="token key atrule">matchExpressions</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> provider          <span class="token key atrule">operator</span><span class="token punctuation">:</span> In          <span class="token key atrule">values</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> huaweicloud        <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> region          <span class="token key atrule">operator</span><span class="token punctuation">:</span> NotIn          <span class="token key atrule">values</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> cn<span class="token punctuation">-</span>south<span class="token punctuation">-</span><span class="token number">1</span>    <span class="token comment">#...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-ClusterNames"><a href="#3-ClusterNames" class="headerlink" title="3.ClusterNames"></a>3.ClusterNames</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PropagationPolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>propagation<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token comment">#...</span>  <span class="token key atrule">placement</span><span class="token punctuation">:</span>    <span class="token key atrule">clusterAffinity</span><span class="token punctuation">:</span>      <span class="token key atrule">clusterNames</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> member1        <span class="token punctuation">-</span> member2    <span class="token comment">#...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-ExcludeClusters"><a href="#4-ExcludeClusters" class="headerlink" title="4.ExcludeClusters"></a>4.ExcludeClusters</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PropagationPolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>propagation<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token comment">#...</span>  <span class="token key atrule">placement</span><span class="token punctuation">:</span>    <span class="token key atrule">clusterAffinity</span><span class="token punctuation">:</span>      <span class="token key atrule">exclude</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> member1        <span class="token punctuation">-</span> member3    <span class="token comment">#...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="基于污点和容忍的调度方式"><a href="#基于污点和容忍的调度方式" class="headerlink" title="基于污点和容忍的调度方式"></a>基于污点和容忍的调度方式</h3><p><code>.spec.placement</code>PropagationPolicy容忍字段。像kubernetes一样，容忍需要与集群上的污点一起使用。在集群上设置一个或多个污点后，工作负载就不能在这些集群上调度或运行，除非策略明确声明这些污点是可以容忍的。业力目前支持影响为NoSchedule和NoExecute的污染。</p><h4 id="手动给集群打污点"><a href="#手动给集群打污点" class="headerlink" title="手动给集群打污点"></a>手动给集群打污点</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">karmadactl taint clusters foo <span class="token assign-left variable">dedicated</span><span class="token operator">=</span>special-user:NoSchedule<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="设置容忍策略"><a href="#设置容忍策略" class="headerlink" title="设置容忍策略"></a>设置容忍策略</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PropagationPolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>propagation<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token comment">#...</span>  <span class="token key atrule">placement</span><span class="token punctuation">:</span>    <span class="token key atrule">clusterTolerations</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> dedicated      <span class="token key atrule">value</span><span class="token punctuation">:</span> special<span class="token punctuation">-</span>user      <span class="token key atrule">Effect</span><span class="token punctuation">:</span> NoSchedule <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="副本调度的多种策略"><a href="#副本调度的多种策略" class="headerlink" title="副本调度的多种策略"></a>副本调度的多种策略</h3><p><code>.spec.placement.plicaScheduling</code>分发具有副本的资源时处理副本数量的调度策略</p><ul><li>Duplicated策略</li><li>Divided 策略</li></ul><h4 id="Aggregated-策略"><a href="#Aggregated-策略" class="headerlink" title="Aggregated 策略"></a>Aggregated 策略</h4><p>Aggregated 策略表示将副本调度到<strong>尽可能少的目标集群上</strong>，例如目标集群有三个，但是第一个目标集群拥有足够的资源调度到所有的副本，则副本会全部调度到第一个目标集群上，如图所示：</p><img src="/kubernetes/ji-yu-karmada-de-duo-ji-qun-guan-li-2/format,webp-16808403589318.webp" class="" title="Aggregated 策略"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PropagationPolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>propagation<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token comment">#...</span>  <span class="token key atrule">placement</span><span class="token punctuation">:</span>    <span class="token key atrule">replicaScheduling</span><span class="token punctuation">:</span>      <span class="token key atrule">replicaDivisionPreference</span><span class="token punctuation">:</span> Weighted      <span class="token key atrule">replicaSchedulingType</span><span class="token punctuation">:</span> Duplicated<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Weighted-策略"><a href="#Weighted-策略" class="headerlink" title="Weighted 策略"></a>Weighted 策略</h4><p>Weighted 策略具体设置通过 <code>.spec.placement.weightPreference</code> 字段设置，如果 weightPreference 不设置，则默认给所有目标集群加相同的静态权重 1。支持<code>staticWeightList</code>和<code>dynamicWeight</code>  静态权重按照比例分配，动态权重按照可用副本分配</p><img src="/kubernetes/ji-yu-karmada-de-duo-ji-qun-guan-li-2/format,webp-168084041430611.webp" class="" title="Weighted 策略"><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 按照权重分配到不用的成员集群</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PropagationPolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>propagation<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token comment">#...</span>  <span class="token key atrule">placement</span><span class="token punctuation">:</span>    <span class="token key atrule">replicaScheduling</span><span class="token punctuation">:</span>      <span class="token key atrule">replicaDivisionPreference</span><span class="token punctuation">:</span> Weighted      <span class="token key atrule">replicaSchedulingType</span><span class="token punctuation">:</span> Divided      <span class="token key atrule">weightPreference</span><span class="token punctuation">:</span>        <span class="token key atrule">staticWeightList</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">targetCluster</span><span class="token punctuation">:</span>              <span class="token key atrule">clusterNames</span><span class="token punctuation">:</span>                <span class="token punctuation">-</span> member1            <span class="token key atrule">weight</span><span class="token punctuation">:</span> <span class="token number">1</span>          <span class="token punctuation">-</span> <span class="token key atrule">targetCluster</span><span class="token punctuation">:</span>              <span class="token key atrule">clusterNames</span><span class="token punctuation">:</span>                <span class="token punctuation">-</span> member2            <span class="token key atrule">weight</span><span class="token punctuation">:</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 按照可用副本数进行分配</span><span class="token comment">#例如，调度程序选择了3个集群（A/B/C），应将12个副本分配给它们。根据集群资源建模，我们得到A、B、C的最大可用副本分别为6、12、18。因此，集群A:B:C的权重将为6:12:18（等于1:2:3）。最后，分配将是“A：2，B：4，C：6”。</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PropagationPolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>propagation<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token comment">#...</span>  <span class="token key atrule">placement</span><span class="token punctuation">:</span>    <span class="token key atrule">replicaScheduling</span><span class="token punctuation">:</span>      <span class="token key atrule">replicaDivisionPreference</span><span class="token punctuation">:</span> Weighted      <span class="token key atrule">replicaSchedulingType</span><span class="token punctuation">:</span> Divided      <span class="token key atrule">weightPreference</span><span class="token punctuation">:</span>        <span class="token key atrule">dynamicWeight</span><span class="token punctuation">:</span> AvailableReplicas<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="配置传播策略的优先级"><a href="#配置传播策略的优先级" class="headerlink" title="配置传播策略的优先级"></a>配置传播策略的优先级</h3><h4 id="配置显性优先级"><a href="#配置显性优先级" class="headerlink" title="配置显性优先级"></a>配置显性优先级</h4><p><code>spec.priority</code>配置传播策略<code>PropagationPolicy </code>的显性优先级，更大值代表更高的优先级</p><blockquote><p>Note: 未指定默认为0</p></blockquote><p>示例：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># highexplicitpriority.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PropagationPolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> propagation<span class="token punctuation">-</span>high<span class="token punctuation">-</span>explicit<span class="token punctuation">-</span>priority<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">resourceSelectors</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1      <span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment      <span class="token key atrule">labelSelector</span><span class="token punctuation">:</span>        <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>          <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx  <span class="token key atrule">priority</span><span class="token punctuation">:</span> <span class="token number">2</span>  <span class="token key atrule">placement</span><span class="token punctuation">:</span>    <span class="token key atrule">clusterAffinity</span><span class="token punctuation">:</span>      <span class="token key atrule">clusterNames</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> member1<span class="token punctuation">---</span><span class="token comment"># lowexplicitpriority.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PropagationPolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> propagation<span class="token punctuation">-</span>low<span class="token punctuation">-</span>explicit<span class="token punctuation">-</span>priority<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">resourceSelectors</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1      <span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment      <span class="token key atrule">labelSelector</span><span class="token punctuation">:</span>        <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>          <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx  <span class="token key atrule">priority</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">placement</span><span class="token punctuation">:</span>    <span class="token key atrule">clusterAffinity</span><span class="token punctuation">:</span>      <span class="token key atrule">clusterNames</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> member2<span class="token punctuation">---</span><span class="token comment"># defaultexplicitpriority.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PropagationPolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> propagation<span class="token punctuation">-</span>low<span class="token punctuation">-</span>explicit<span class="token punctuation">-</span>priority<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">resourceSelectors</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1      <span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment      <span class="token key atrule">labelSelector</span><span class="token punctuation">:</span>        <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>          <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx  <span class="token key atrule">placement</span><span class="token punctuation">:</span>    <span class="token key atrule">clusterAffinity</span><span class="token punctuation">:</span>      <span class="token key atrule">clusterNames</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> member3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>最终负责则会调度到member1</p></blockquote><h4 id="配置隐性优先级"><a href="#配置隐性优先级" class="headerlink" title="配置隐性优先级"></a>配置隐性优先级</h4><p><code>spec.resourceSelectors</code>配置传播策略<code>PropagationPolicy </code>的隐性优先级，以下优先级从下到大为：</p><ul><li>传播策略资源的name和标签选择器为空</li><li>存在传播策略资源标签选择器</li><li>存在传播策略资源名称</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># emptymatch.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PropagationPolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> propagation<span class="token punctuation">-</span>emptymatch<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">resourceSelectors</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1      <span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment  <span class="token key atrule">placement</span><span class="token punctuation">:</span>    <span class="token key atrule">clusterAffinity</span><span class="token punctuation">:</span>      <span class="token key atrule">clusterNames</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> member1<span class="token punctuation">---</span><span class="token comment"># labelselectormatch.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PropagationPolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> propagation<span class="token punctuation">-</span>labelselectormatch<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">resourceSelectors</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1      <span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment      <span class="token key atrule">labelSelector</span><span class="token punctuation">:</span>        <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>          <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx  <span class="token key atrule">placement</span><span class="token punctuation">:</span>    <span class="token key atrule">clusterAffinity</span><span class="token punctuation">:</span>      <span class="token key atrule">clusterNames</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> member2<span class="token punctuation">---</span><span class="token comment"># namematch.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PropagationPolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> propagation<span class="token punctuation">-</span>namematch<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">resourceSelectors</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1      <span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment      <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx  <span class="token key atrule">placement</span><span class="token punctuation">:</span>    <span class="token key atrule">clusterAffinity</span><span class="token punctuation">:</span>      <span class="token key atrule">clusterNames</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> member3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>最终会调度到member3</p></blockquote><h4 id="存在相同优先级"><a href="#存在相同优先级" class="headerlink" title="存在相同优先级"></a>存在相同优先级</h4><blockquote><p>根据 metadata.name的字母顺序来决定。如xxx-a-xxx 优先于 xxx-b-xxx.</p></blockquote><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># higher-alphabetical.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PropagationPolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> propagation<span class="token punctuation">-</span>b<span class="token punctuation">-</span>higher<span class="token punctuation">-</span>alphabetical<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">resourceSelectors</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1      <span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment      <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx  <span class="token key atrule">priority</span><span class="token punctuation">:</span> <span class="token number">3</span>  <span class="token key atrule">placement</span><span class="token punctuation">:</span>    <span class="token key atrule">clusterAffinity</span><span class="token punctuation">:</span>      <span class="token key atrule">clusterNames</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> member1<span class="token punctuation">---</span><span class="token comment"># lower-alphabetical.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PropagationPolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> propagation<span class="token punctuation">-</span>a<span class="token punctuation">-</span>lower<span class="token punctuation">-</span>alphabetical<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">resourceSelectors</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1      <span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment      <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx  <span class="token key atrule">priority</span><span class="token punctuation">:</span> <span class="token number">3</span>  <span class="token key atrule">placement</span><span class="token punctuation">:</span>    <span class="token key atrule">clusterAffinity</span><span class="token punctuation">:</span>      <span class="token key atrule">clusterNames</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> member2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="OverridePolicy、ClusterOverridePolicy（差异性配置）"><a href="#OverridePolicy、ClusterOverridePolicy（差异性配置）" class="headerlink" title="OverridePolicy、ClusterOverridePolicy（差异性配置）"></a><a href="https://karmada.io/zh/docs/userguide/scheduling/override-policy">OverridePolicy、ClusterOverridePolicy（差异性配置）</a></h2><p>差异性配置主要为两部分配置：<code>resourceSelectors</code>集群选择、<code>overrideRules</code>覆盖规则</p><h3 id="目标集群"><a href="#目标集群" class="headerlink" title="目标集群"></a>目标集群</h3><p>主要与Propagationpolicy类似，包含4中选择器</p><ul><li><code>labelSelector</code>: 基于标签方式</li><li><code>fieldSelector</code>: 基于字段方式；目前只支持<code>cluster.spec.provider</code>,<code>cluster.spec.zone</code>,<code>cluster.spec.region</code>三种</li><li><code>clusterNames</code>: 基于名称</li><li><code>exclude</code>: 基于忽略集群</li></ul><h4 id="labelSelector"><a href="#labelSelector" class="headerlink" title="labelSelector"></a>labelSelector</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> OverridePolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> example<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token comment">#...</span>  <span class="token key atrule">overrideRules</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">targetCluster</span><span class="token punctuation">:</span>        <span class="token key atrule">labelSelector</span><span class="token punctuation">:</span>          <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>            <span class="token key atrule">cluster</span><span class="token punctuation">:</span> member1       <span class="token key atrule">overriders</span><span class="token punctuation">:</span>      <span class="token comment">#...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="fieldSelector"><a href="#fieldSelector" class="headerlink" title="fieldSelector"></a>fieldSelector</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> OverridePolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> example<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token comment">#...</span>  <span class="token key atrule">overrideRules</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">targetCluster</span><span class="token punctuation">:</span>        <span class="token key atrule">fieldSelector</span><span class="token punctuation">:</span>          <span class="token key atrule">matchExpressions</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> region              <span class="token key atrule">operator</span><span class="token punctuation">:</span> In              <span class="token key atrule">values</span><span class="token punctuation">:</span>                <span class="token punctuation">-</span> cn<span class="token punctuation">-</span>north<span class="token punctuation">-</span><span class="token number">1</span>      <span class="token key atrule">overriders</span><span class="token punctuation">:</span>      <span class="token comment">#...</span><span class="token punctuation">---</span><span class="token punctuation">-</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> OverridePolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> example<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token comment">#...</span>  <span class="token key atrule">overrideRules</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">targetCluster</span><span class="token punctuation">:</span>        <span class="token key atrule">fieldSelector</span><span class="token punctuation">:</span>          <span class="token key atrule">matchExpressions</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> provider              <span class="token key atrule">operator</span><span class="token punctuation">:</span> In              <span class="token key atrule">values</span><span class="token punctuation">:</span>                <span class="token punctuation">-</span> aws      <span class="token key atrule">overriders</span><span class="token punctuation">:</span>      <span class="token comment">#...</span>      <span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> OverridePolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> example<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token comment">#...</span>  <span class="token key atrule">overrideRules</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">targetCluster</span><span class="token punctuation">:</span>        <span class="token key atrule">fieldSelector</span><span class="token punctuation">:</span>          <span class="token key atrule">matchExpressions</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> zone              <span class="token key atrule">operator</span><span class="token punctuation">:</span> In              <span class="token key atrule">values</span><span class="token punctuation">:</span>                <span class="token punctuation">-</span> us      <span class="token key atrule">overriders</span><span class="token punctuation">:</span>      <span class="token comment">#...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="clusterNames"><a href="#clusterNames" class="headerlink" title="clusterNames"></a>clusterNames</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> OverridePolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> example<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token comment">#...</span>  <span class="token key atrule">overrideRules</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">targetCluster</span><span class="token punctuation">:</span>        <span class="token key atrule">clusterNames</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> member1      <span class="token key atrule">overriders</span><span class="token punctuation">:</span>      <span class="token comment">#...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="exclude"><a href="#exclude" class="headerlink" title="exclude"></a>exclude</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> OverridePolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> example<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token comment">#...</span>  <span class="token key atrule">overrideRules</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">targetCluster</span><span class="token punctuation">:</span>        <span class="token key atrule">exclude</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> member1      <span class="token key atrule">overriders</span><span class="token punctuation">:</span>      <span class="token comment">#...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="重写规则"><a href="#重写规则" class="headerlink" title="重写规则"></a>重写规则</h3><p>Karmada支持一下几种方式的重写：</p><ul><li><code>ImageOverrider</code>: 覆盖工作负载的镜像</li><li><code>CommandOverrider</code>: 覆盖工作负载的命令</li><li><code>ArgsOverrider</code>: 覆盖工作负载的参数</li><li><code>LabelsOverrider</code>: 覆盖工作负载的标签</li><li><code>AnnotationsOverrider</code>: 覆盖工作负载的注解</li><li><code>PlaintextOverrider</code>: 覆盖任何资源通用方法</li></ul><h4 id="ImageOverrider"><a href="#ImageOverrider" class="headerlink" title="ImageOverrider"></a>ImageOverrider</h4><p>component标签[registry/]repository[:tag|@digest]涉及为：</p><ul><li>Registry</li><li>Repository</li><li>Tagest</li></ul><p>操作方式为：</p><ul><li>add</li><li>remove</li><li>replace</li></ul><p><strong>Examples</strong></p><p>创建一个样例：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> myapp  <span class="token comment">#...</span><span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">image</span><span class="token punctuation">:</span> myapp<span class="token punctuation">:</span>1.0.0          <span class="token key atrule">name</span><span class="token punctuation">:</span> myapp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>Example 1</strong></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> OverridePolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> example<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token comment">#...</span>  <span class="token key atrule">overrideRules</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">overriders</span><span class="token punctuation">:</span>        <span class="token key atrule">imageOverrider</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">component</span><span class="token punctuation">:</span> Registry            <span class="token key atrule">operator</span><span class="token punctuation">:</span> add            <span class="token key atrule">value</span><span class="token punctuation">:</span> test<span class="token punctuation">-</span>repo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment">#add Registry </span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">image</span><span class="token punctuation">:</span> test<span class="token punctuation">-</span>repo/myapp<span class="token punctuation">:</span>1.0.0          <span class="token key atrule">name</span><span class="token punctuation">:</span> myapp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>Example 2</strong></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> OverridePolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> example<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token comment">#...</span>  <span class="token key atrule">overrideRules</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">overriders</span><span class="token punctuation">:</span>        <span class="token key atrule">imageOverrider</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">component</span><span class="token punctuation">:</span> Repository            <span class="token key atrule">operator</span><span class="token punctuation">:</span> replace            <span class="token key atrule">value</span><span class="token punctuation">:</span> myapp2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># replace repository</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">image</span><span class="token punctuation">:</span> myapp2<span class="token punctuation">:</span>1.0.0          <span class="token key atrule">name</span><span class="token punctuation">:</span> myapp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>Example 3</strong></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> OverridePolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> example<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token comment">#...</span>  <span class="token key atrule">overrideRules</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">overriders</span><span class="token punctuation">:</span>        <span class="token key atrule">imageOverrider</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">component</span><span class="token punctuation">:</span> Tag            <span class="token key atrule">operator</span><span class="token punctuation">:</span> remove<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># remove tag</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">image</span><span class="token punctuation">:</span> myapp          <span class="token key atrule">name</span><span class="token punctuation">:</span> myapp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="CommandOverrider"><a href="#CommandOverrider" class="headerlink" title="CommandOverrider"></a>CommandOverrider</h4><p>覆盖<code>/spec/template/spec/containers/0/command</code>命令</p><ul><li>add</li><li>remove</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> OverridePolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> example<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token comment">#...</span>  <span class="token key atrule">overrideRules</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">overriders</span><span class="token punctuation">:</span>        <span class="token key atrule">commandOverrider</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">containerName</span><span class="token punctuation">:</span> myapp            <span class="token key atrule">operator</span><span class="token punctuation">:</span> add            <span class="token key atrule">value</span><span class="token punctuation">:</span>              <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>cluster=member1              <span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> OverridePolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> example<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token comment">#...</span>  <span class="token key atrule">overrideRules</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">overriders</span><span class="token punctuation">:</span>        <span class="token key atrule">commandOverrider</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">containerName</span><span class="token punctuation">:</span> myapp            <span class="token key atrule">operator</span><span class="token punctuation">:</span> remove            <span class="token key atrule">value</span><span class="token punctuation">:</span>              <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>parameter1=foo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="ArgsOverrider"><a href="#ArgsOverrider" class="headerlink" title="ArgsOverrider"></a>ArgsOverrider</h4><p>覆盖参数<code>/spec/template/spec/containers/0/args</code> ，使用方式类似于CommandOverrider</p><ul><li>add</li><li>remove</li></ul><h4 id="LabelsOverrider"><a href="#LabelsOverrider" class="headerlink" title="LabelsOverrider"></a>LabelsOverrider</h4><p>覆盖标签</p><ul><li>add</li><li>remove</li><li>replace</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> OverridePolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> example<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token comment">#...</span>  <span class="token key atrule">overrideRules</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">overriders</span><span class="token punctuation">:</span>        <span class="token key atrule">labelsOverrider</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">operator</span><span class="token punctuation">:</span> add            <span class="token key atrule">value</span><span class="token punctuation">:</span>               <span class="token key atrule">bar</span><span class="token punctuation">:</span> bar  <span class="token comment"># It will be added to labels</span>          <span class="token punctuation">-</span> <span class="token key atrule">operator</span><span class="token punctuation">:</span> replace            <span class="token key atrule">value</span><span class="token punctuation">:</span>               <span class="token key atrule">foo</span><span class="token punctuation">:</span> exist <span class="token comment"># "foo: foo" will be replaced by "foo: exist"</span>          <span class="token punctuation">-</span> <span class="token key atrule">operator</span><span class="token punctuation">:</span> remove            <span class="token key atrule">value</span><span class="token punctuation">:</span>               <span class="token key atrule">baz</span><span class="token punctuation">:</span> baz   <span class="token comment"># It will be removed from labels</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="AnnotationsOverrider"><a href="#AnnotationsOverrider" class="headerlink" title="AnnotationsOverrider"></a>AnnotationsOverrider</h4><p>注解标签</p><ul><li>add</li><li>remove</li><li>replace</li></ul><h4 id="PlaintextOverrider"><a href="#PlaintextOverrider" class="headerlink" title="PlaintextOverrider"></a>PlaintextOverrider</h4><p>通用资源处理器</p><ul><li>add</li><li>remove</li><li>replace</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment">#Example </span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> myconfigmap  <span class="token comment">#...</span><span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">example</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token punctuation">---</span><span class="token comment">#Overrider</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> OverridePolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> example<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token comment">#...</span>  <span class="token key atrule">overrideRules</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">overriders</span><span class="token punctuation">:</span>        <span class="token key atrule">plaintext</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">path</span><span class="token punctuation">:</span> /data/example            <span class="token key atrule">operator</span><span class="token punctuation">:</span> replace            <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token number">2</span>            <span class="token punctuation">---</span><span class="token comment">#Result</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> myconfigmap  <span class="token comment">#...</span><span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">example</span><span class="token punctuation">:</span> <span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
          <category> karmada </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Karmada的多集群管理（一）</title>
      <link href="/kubernetes/ji-yu-karmada-de-duo-ji-qun-guan-li.html"/>
      <url>/kubernetes/ji-yu-karmada-de-duo-ji-qun-guan-li.html</url>
      
        <content type="html"><![CDATA[<h1 id="基于Karmada的多集群管理-一"><a href="#基于Karmada的多集群管理-一" class="headerlink" title="基于Karmada的多集群管理(一)"></a>基于Karmada的多集群管理(一)</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>Karmada</strong>（Kubernetes Armada）是基于Kubernetes原生API的多集群管理系统。在多云和混合云场景下，Karmada提供可插拔，全自动化管理多集群应用，实现多云集中管理、高可用性、故障恢复和流量调度。</p><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><h4 id="跨云多集群多模式管理"><a href="#跨云多集群多模式管理" class="headerlink" title="跨云多集群多模式管理"></a>跨云多集群多模式管理</h4><ul><li><p>安全隔离：</p><ul><li>为每个集群创建一个namespace，以<code>karmada-es-</code>为前缀。</li></ul></li><li><p>多模式：</p><ul><li>Push：Karmada与成员集群的kube-apiserver直连。</li><li>Pull：在成员集群中装agent组件，Karmada委托任务给agent组件。</li></ul></li></ul><h4 id="多策略的多集群调度"><a href="#多策略的多集群调度" class="headerlink" title="多策略的多集群调度"></a>多策略的多集群调度<a href="https://karmada.io/zh/docs/key-features/features#%E5%A4%9A%E7%AD%96%E7%95%A5%E7%9A%84%E5%A4%9A%E9%9B%86%E7%BE%A4%E8%B0%83%E5%BA%A6"></a></h4><ul><li>不同调度策略下的集群分发能力:<ul><li>ClusterAffinity：基于ClusterName、Label、Field的定向调度。</li><li>Toleration：基于Taint和Toleration的调度。</li><li>SpreadConstraint：基于集群拓扑的调度。</li><li>ReplicasScheduling：针对有实例的工作负载的复制模式与拆分模式。</li></ul></li><li>差异化配置（OverridePolicy）：<ul><li>ImageOverrider：镜像的差异化配置。</li><li>ArgsOverrider：运行参数的差异化配置。</li><li>CommandOverrider：运行命令的差异化配置。</li><li>PlainText：自定义的差异化配置。</li></ul></li><li>支持重调度：<ul><li>Descheduler（karmada-descheduler）：根据成员集群内实例状态变化触发重调度。</li><li>Scheduler-estimator(karmada-scheduler-estimator)：为调度器提供更精确的成员集群运行实例的期望状态。</li></ul></li></ul><h4 id="应用的跨集群故障迁移"><a href="#应用的跨集群故障迁移" class="headerlink" title="应用的跨集群故障迁移"></a>应用的跨集群故障迁移<a href="https://karmada.io/zh/docs/key-features/features#%E5%BA%94%E7%94%A8%E7%9A%84%E8%B7%A8%E9%9B%86%E7%BE%A4%E6%95%85%E9%9A%9C%E8%BF%81%E7%A7%BB"></a></h4><ul><li>集群故障迁移：<ul><li>Karmada支持用户设置分发策略，在集群发生故障后，将故障集群实例进行自动的集中式或分散式的迁移。</li></ul></li><li>集群污点设置：<ul><li>当用户为集群设置污点，且资源分发策略无法容忍污点时，Karmada也会自动触发集群实例的迁移。</li></ul></li><li>服务不断服：<ul><li>在实例迁移过程中，Karmada能够保证服务实例不跌零，从而确保服务不会断服。</li></ul></li></ul><h4 id="全局统一资源视图"><a href="#全局统一资源视图" class="headerlink" title="全局统一资源视图"></a>全局统一资源视图<a href="https://karmada.io/zh/docs/key-features/features#%E5%85%A8%E5%B1%80%E7%BB%9F%E4%B8%80%E8%B5%84%E6%BA%90%E8%A7%86%E5%9B%BE"></a></h4><ul><li>资源状态收集与聚合：借助资源解释器（Resource Interpreter），将状态收集并聚合到资源模板<ul><li>用户自定义，触发Webhook远程调用。</li><li>对于一些常见资源，在Karmada中固定编码。</li></ul></li><li><a href="https://karmada.io/zh/docs/userguide/globalview/aggregated-api-endpoint">统一资源管理</a> ：统一管理资源的创建、更新、删除、查询。</li><li><a href="https://karmada.io/zh/docs/userguide/globalview/proxy-global-resource">统一运维</a> ：可以在同一个k8s上下文中执行<code>describe</code>、<code>exec</code>、<code>logs</code>。</li><li>资源、事件全局搜索：<ul><li>缓存查询：支持全局模糊搜索、全局精确搜索。</li><li>第三方存储：支持搜索引擎（Elasticsearch或OpenSearch）、关系型数据库、图数据库。</li></ul></li></ul><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ul><li>Karmada 中有两个上下文环境：<ul><li>karmada-apiserver <code>kubectl config use-context karmada-apiserver </code>   是与 Karmada 控制面交互时要使用的 <strong>主要 kubeconfig</strong></li><li>karmada-host <code>kubectl config use-context karmada-host</code>  仅用于调试 Karmada 对 <code>host cluster</code> 的安装</li><li>你可以通过运行 <code>kubectl config view</code> 随时查看所有集群。 要切换集群上下文，请运行 <code>kubectl config use-context [CONTEXT_NAME]</code></li></ul></li></ul><h2 id="框架结构"><a href="#框架结构" class="headerlink" title="框架结构"></a>框架结构</h2><img src="/kubernetes/ji-yu-karmada-de-duo-ji-qun-guan-li/jiagou.png" class="" title="架构图"><h3 id="主要组件"><a href="#主要组件" class="headerlink" title="主要组件"></a>主要组件</h3><ul><li>ETCD：存储Karmada API对象。</li><li>Karmada Scheduler：提供高级的多集群调度策略。</li><li>Karmada Controller Manager: 包含多个Controller，Controller监听karmada对象并且与成员集群API server进行通信并创建成员集群的k8s对象。<ul><li>Cluster Controller：成员集群的生命周期管理与对象管理。</li><li>Policy Controller：监听PropagationPolicy对象，创建ResourceBinding，配置资源分发策略。</li><li>Binding Controller：监听ResourceBinding对象，并创建work对象响应资源清单。</li><li>Execution Controller：监听work对象，并将资源分发到成员集群中。</li></ul></li></ul><h3 id="CRD资源"><a href="#CRD资源" class="headerlink" title="CRD资源"></a>CRD资源</h3><ul><li><p><strong>Resource Template</strong>。这里的ResourceTemplate 只是对 Karmada 可分发的资源对象的一种<strong>抽象</strong>，这里的Resource 包含 Kubernetes 中所有支持的资源对象的类型和我们平时使用k8s的对象例如eployment，Service，Pod，Ingress，PVC，PV， Job没有不同，但是需要我们在global集群进行创建和修改；</p></li><li><p><strong>Propagation Policy</strong>。定义Resource Template需要被调度到那些集群；</p></li><li><p><strong>Resource Binding</strong>。即Resource Template根据Propagation Policy调度之后的结果，保存在ResourceBinding中；</p></li><li><p><strong>Override Policy</strong>。由于我们可能需要在不同集群里面部署不同的版本，或者副本数，我们可以通过Override Policy对Resource Binding中的结果进行修改；</p></li><li><p><strong>Work</strong>。经过Override Policy的渲染，Karmada会产生Work对象，而Work对象所处的namespace跟调度的cluster对应，同时work中包含最终的对象的Spec和Status。对应的Execution Controller和Agent会不断Reconcile Work对象，即在子集群中创建和更新Work中的workload，并更新globa集群中Work的status。</p></li></ul><h2 id="调度"><a href="#调度" class="headerlink" title="调度"></a>调度</h2><img src="/kubernetes/ji-yu-karmada-de-duo-ji-qun-guan-li/v2-66545ac60376a55b3610cc93ca780df8_720w.webp" class="" title="资源调度"><h3 id="调度策略插件"><a href="#调度策略插件" class="headerlink" title="调度策略插件"></a>调度策略插件</h3><ul><li>APIInstalled: 用于检查资源的API(CRD)是否安装在目标集群中。</li><li>ClusterAffinity: 用于检查资源选择器是否与集群标签匹配。</li><li>SpreadConstraint: 用于检查 Cluster.Spec 中的 spread 属性即Provider/Zone/Region字段。</li><li>TaintToleration: 用于检查传播策略是否容忍集群的污点。</li><li>ClusterLocality 是一个评分插件，为目标集群进行评分</li></ul><h3 id="分发策略"><a href="#分发策略" class="headerlink" title="分发策略"></a>分发策略</h3><pre class="line-numbers language-none"><code class="language-none">apiVersion: policy.karmada.io/v1alpha1kind: PropagationPolicymetadata:  name: nginx-propagationspec:  resourceSelectors:    - apiVersion: apps/v1      kind: Deployment      name: nginx  placement:    clusterAffinity:      clusterNames:        - member1  #分发到成员集群member1和member2        - member2    replicaScheduling:      replicaDivisionPreference: Weighted #划分副本策略      replicaSchedulingType: Divided  #调度副本策略      weightPreference:          staticWeightList:  #目标集群静态权重          - targetCluster:              clusterNames:                - member1            weight: 1          - targetCluster:              clusterNames:                - member2            weight: 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Duplicated策略"><a href="#Duplicated策略" class="headerlink" title="Duplicated策略"></a>Duplicated策略</h4><p>Duplicated 策略表示将要分发资源的 replicas <strong>相同数量的复制</strong>到所有的目标成员集群中，例如：分发 deployment 资源时，deployment 资源设定的副本数为 10，则分发到所有目标集群的 deployment 的副本数都是 10，如图所示：</p><img src="/kubernetes/ji-yu-karmada-de-duo-ji-qun-guan-li/format,webp.webp" class="" title="Duplicated策略"><h4 id="Divided-策略"><a href="#Divided-策略" class="headerlink" title="Divided 策略"></a>Divided 策略</h4><p>Divided 策略表示将要分发资源的 replicas 划分到多个目标成员集群中，例如：分发 deployment 资源时，deployment 资源设定的副本数为 10，则分发到所有目标集群的 deployment 的副本总数是 10。具体如何划分需要根据 ReplicaDivisionPreference 的值来决定，而 <strong>ReplicaDivisionPreference（划分副本策略）</strong> 的值可以设定为 <strong>Aggregated</strong> 或者 <strong>Weighted</strong>。</p><h5 id="Aggregated-策略"><a href="#Aggregated-策略" class="headerlink" title="Aggregated 策略"></a>Aggregated 策略</h5><p>Aggregated 策略表示将副本调度到<strong>尽可能少的目标集群上</strong>，例如目标集群有三个，但是第一个目标集群拥有足够的资源调度到所有的副本，则副本会全部调度到第一个目标集群上，如图所示：</p><img src="/kubernetes/ji-yu-karmada-de-duo-ji-qun-guan-li/format,webp-16808403589318.webp" class="" title="Aggregated 策略"><h5 id="Weighted-策略"><a href="#Weighted-策略" class="headerlink" title="Weighted 策略"></a>Weighted 策略</h5><p>Weighted 策略具体设置通过 weightPreference 字段设置，如果 weightPreference 不设置，则默认给所有目标集群加相同的静态权重 1。</p><img src="/kubernetes/ji-yu-karmada-de-duo-ji-qun-guan-li/format,webp-168084041430611.webp" class="" title="Weighted 策略"><h5 id="karmada-descheduler"><a href="#karmada-descheduler" class="headerlink" title="karmada-descheduler"></a>karmada-descheduler</h5><p>karmada-descheduler在调度策略为<strong>动态划分</strong>时（dynamic division）时才会生效；karmada-descheduler 将每隔一段时间检测一次所有部署，默认情况下每 2 分钟检测一次。在每个周期中，它会通过调用 karmada-scheduler-estimator 找出部署在目标调度集群中有多少不可调度的副本，然后更新ResourceBinding资源的Clusters[i].Replicas字段，并根据当前情况触发 karmada-scheduler 执行“Scale Schedule”。</p><h5 id="karmada-scheduler-estimator"><a href="#karmada-scheduler-estimator" class="headerlink" title="karmada scheduler-estimator"></a>karmada scheduler-estimator</h5><p>当调度策略是动态权重调度或者Aggregated策略时，karmada-scheduler通过调用 karmada-scheduler-estimator不会将过多的副本分配到资源不足的集群中。karmada-scheduler-estimator用来计算集群中CPU，Memory，EphemeralStorage 或者请求创建工作负载中的其他资源是否满足调度需求，对集群中每个节点可调度副本数进行计算，最终计算出该集群可调度的最大副本数。</p><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><h3 id="安装cli工具"><a href="#安装cli工具" class="headerlink" title="安装cli工具"></a><a href="https://karmada.io/zh/docs/installation/install-cli-tools">安装cli工具</a></h3><h4 id="Karmadactl工具"><a href="#Karmadactl工具" class="headerlink" title="Karmadactl工具"></a>Karmadactl工具</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span>.安装指令 <span class="token function">curl</span> <span class="token parameter variable">-s</span> https://raw.githubusercontent.com/karmada-io/karmada/master/hack/install-cli.sh <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">bash</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="kubectl-karmada-需要有kubectl环境"><a href="#kubectl-karmada-需要有kubectl环境" class="headerlink" title="kubectl-karmada(需要有kubectl环境)"></a>kubectl-karmada(需要有kubectl环境)</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-s</span> https://raw.githubusercontent.com/karmada-io/karmada/master/hack/install-cli.sh <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">bash</span> <span class="token parameter variable">-s</span> kubectl-karmada<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="安装Karmada"><a href="#安装Karmada" class="headerlink" title="安装Karmada"></a><a href="https://karmada.io/zh/docs/installation/">安装Karmada</a></h3><ul><li>在你自己的集群上安装 Karmada： karmadactl init <strong>–kube-image-mirror-country=cn</strong>   （国内设置cn区域会下载国内包，否则镜像会一直拉取不下来）</li><li>离线安装 kubectl karmada init –crds /$HOME/crds.tar.gz –private-image-registry xxxx</li></ul><p>​        crd安装包下载地址： <a href="https://github.com/karmada-io/karmada/releases/download/v1.4.0/crds.tar.gz">https://github.com/karmada-io/karmada/releases/download/v1.4.0/crds.tar.gz</a> （v1.4.x 都用v1.4.0，其他版本同理）</p><p>​        private-image-registry 指定私有仓库镜像地址</p><img src="/kubernetes/ji-yu-karmada-de-duo-ji-qun-guan-li/image-20230407160233637.png" class="" title="安装成功"><pre class="line-numbers language-none"><code class="language-none">TIPS:出现github拉取gz包一直拉不下来情况。配置github对应地址加速1. 登录https://ping.chinaz.com/github.com2. 查询以下域名映射,并分别取访问速度较快的一个ip#github151.101.229.194  github.global.ssl.fastly.net203.208.39.99 assets-cdn.github.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="集群注册和卸载"><a href="#集群注册和卸载" class="headerlink" title="集群注册和卸载"></a><a href="https://karmada.io/zh/docs/userguide/clustermanager/cluster-registration">集群注册和卸载</a></h3><h4 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h4><h5 id="Push模式"><a href="#Push模式" class="headerlink" title="Push模式"></a>Push模式</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl karmada <span class="token function">join</span> member1 <span class="token parameter variable">--kubeconfig</span><span class="token operator">=</span><span class="token operator">&lt;</span>karmada kubeconfig<span class="token operator">&gt;</span> --karmada-context<span class="token operator">=</span>karmada <span class="token punctuation">\</span>--cluster-kubeconfig<span class="token operator">=</span><span class="token operator">&lt;</span>member1 kubeconfig<span class="token operator">&gt;</span> --cluster-context<span class="token operator">=</span>member1Step <span class="token number">1</span>: Use <span class="token string">"karmadactl join"</span> <span class="token builtin class-name">command</span> to register the cluster to Karmada control plane. --cluster-kubeconfig is kubeconfig of the member cluster.<span class="token punctuation">(</span>In karmada<span class="token punctuation">)</span>~<span class="token comment"># MEMBER_CLUSTER_NAME=$(cat ~/.kube/config  | grep current-context | sed 's/: /\n/g'| sed '1d')</span><span class="token punctuation">(</span>In karmada<span class="token punctuation">)</span>~<span class="token comment"># karmadactl --kubeconfig /etc/karmada/karmada-apiserver.config  join ${MEMBER_CLUSTER_NAME} --cluster-kubeconfig=$HOME/.kube/config</span>Step <span class="token number">2</span>: Show members of karmada<span class="token punctuation">(</span>In karmada<span class="token punctuation">)</span>~<span class="token comment"># kubectl --kubeconfig /etc/karmada/karmada-apiserver.config get clusters</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/kubernetes/ji-yu-karmada-de-duo-ji-qun-guan-li/image-20230407160902558.png" class="" title="添加成员"><h5 id="Pull模式"><a href="#Pull模式" class="headerlink" title="Pull模式"></a>Pull模式</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span>.Karmada集群创建token（有效时间为24H）  karmadactl token create --print-register-command <span class="token parameter variable">--kubeconfig</span> /etc/karmada/karmada-apiserver.config<span class="token number">2</span>.karmadactl register <span class="token number">10.10</span>.x.x:32443 <span class="token parameter variable">--token</span> t2jgtm.9nybj0526mjw1jbf --discovery-token-ca-cert-hash sha256:f5a5a43869bb44577dba582e794c3e3750f2050d62f1b1dc80fd3d6a371b6ed4Step <span class="token number">1</span>: Use <span class="token string">"karmadactl register"</span> <span class="token builtin class-name">command</span> to register the cluster to Karmada control plane. <span class="token string">"--cluster-name"</span> is <span class="token builtin class-name">set</span> to cluster of current-context by default.<span class="token punctuation">(</span>In member cluster<span class="token punctuation">)</span>~<span class="token comment"># karmadactl register 172.31.12.116:32443 --token on3grp.qhjzderafsh6aofe --discovery-token-ca-cert-hash sha256:a3d6de13a53891fa92ad305dad1aad7990c5e7e46b3f51e504c3d51b52d9012c</span>Step <span class="token number">2</span>: Show members of karmada<span class="token punctuation">(</span>In karmada<span class="token punctuation">)</span>~<span class="token comment"># kubectl --kubeconfig /etc/karmada/karmada-apiserver.config get clusters</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">在Karmada主集群方法1.kubectl karmada unjoin member1 <span class="token parameter variable">--kubeconfig</span><span class="token operator">=</span><span class="token operator">&lt;</span>karmada kubeconfig<span class="token operator">&gt;</span> --cluster-kubeconfig<span class="token operator">=</span><span class="token operator">&lt;</span>member1 kubeconfig<span class="token operator">&gt;</span>在work集群方法2.kubectl delete cluster member3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="TIPS"><a href="#TIPS" class="headerlink" title="TIPS"></a>TIPS</h4><pre class="line-numbers language-none"><code class="language-none">Karmada 的配置文件默认创建到 /etc/karmada/karmada-apiserver.config查看pod是否部署成功：kubectl   -n  karmada-system get pod 查看cluster: kubectl --kubeconfig /etc/karmada/karmada-apiserver.config get clusters切换config: export KUBECONFIG="$HOME/.kube/karmada.config"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="成员部署应用"><a href="#成员部署应用" class="headerlink" title="成员部署应用"></a>成员部署应用</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">[</span>root@172<span class="token punctuation">-</span>31<span class="token punctuation">-</span>12<span class="token punctuation">-</span>116 home<span class="token punctuation">]</span><span class="token comment"># cat deployment.yaml </span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">2</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx        <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> policy.karmada.io/v1alpha1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PropagationPolicy<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>propagation<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">resourceSelectors</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1      <span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment      <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx  <span class="token key atrule">placement</span><span class="token punctuation">:</span>    <span class="token key atrule">clusterAffinity</span><span class="token punctuation">:</span>      <span class="token key atrule">clusterNames</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> cluster121        <span class="token punctuation">-</span> cluster127    <span class="token key atrule">replicaScheduling</span><span class="token punctuation">:</span>      <span class="token key atrule">replicaDivisionPreference</span><span class="token punctuation">:</span> Weighted      <span class="token key atrule">replicaSchedulingType</span><span class="token punctuation">:</span> Divided      <span class="token key atrule">weightPreference</span><span class="token punctuation">:</span>        <span class="token key atrule">staticWeightList</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">targetCluster</span><span class="token punctuation">:</span>              <span class="token key atrule">clusterNames</span><span class="token punctuation">:</span>                <span class="token punctuation">-</span> cluster121            <span class="token key atrule">weight</span><span class="token punctuation">:</span> <span class="token number">1</span>          <span class="token punctuation">-</span> <span class="token key atrule">targetCluster</span><span class="token punctuation">:</span>              <span class="token key atrule">clusterNames</span><span class="token punctuation">:</span>                <span class="token punctuation">-</span> cluster127            <span class="token key atrule">weight</span><span class="token punctuation">:</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="查看信息"><a href="#查看信息" class="headerlink" title="查看信息"></a>查看信息</h3><h4 id="查看部署情况"><a href="#查看部署情况" class="headerlink" title="查看部署情况"></a>查看部署情况</h4><img src="/kubernetes/ji-yu-karmada-de-duo-ji-qun-guan-li/image-20230407165545754.png" class="" title="image-20230407165545754"><h4 id="日志查看"><a href="#日志查看" class="headerlink" title="日志查看"></a>日志查看</h4><img src="/kubernetes/ji-yu-karmada-de-duo-ji-qun-guan-li/image-20230407165632384.png" class="" title="image-20230407165632384"><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@172-31-12-116 home<span class="token punctuation">]</span><span class="token comment"># karmadactl -h</span>karmadactl controls a Kubernetes Cluster Federation.Basic Commands:  get           Display one or many resourcesCluster Registration Commands:  init          Install the Karmada control plane <span class="token keyword">in</span> a Kubernetes cluster  deinit        Remove the Karmada control plane from the Kubernetes cluster.  addons        Enable or disable a Karmada addon  <span class="token function">join</span>          Register a cluster to Karmada control plane with Push mode  unjoin        Remove a cluster from Karmada control plane  token         Manage bootstrap tokens  register      Register a cluster to Karmada control plane with Pull modeCluster Management Commands:  cordon        Mark cluster as unschedulable  uncordon      Mark cluster as schedulable  taint         Update the taints on one or <span class="token function">more</span> clustersTroubleshooting and Debugging Commands:  logs          Print the logs <span class="token keyword">for</span> a container <span class="token keyword">in</span> a pod <span class="token keyword">in</span> a cluster  <span class="token builtin class-name">exec</span>          Execute a <span class="token builtin class-name">command</span> <span class="token keyword">in</span> a container <span class="token keyword">in</span> a cluster  describe      Show details of a specific resource or group of resources <span class="token keyword">in</span> a cluster  interpret     Validate, <span class="token builtin class-name">test</span> and edit interpreter customization before applying it to the control planeAdvanced Commands:  apply         Apply a configuration to a resource by <span class="token function">file</span> name or stdin and propagate them into member clusters  promote       Promote resources from legacy clusters to Karmada control planeOther Commands:  completion    Generate the autocompletion script <span class="token keyword">for</span> the specified shell  version       Print the version information<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
          <category> karmada </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于prometheus的告警监控</title>
      <link href="/kubernetes/ji-yu-prometheus-de-gao-jing-jian-kong.html"/>
      <url>/kubernetes/ji-yu-prometheus-de-gao-jing-jian-kong.html</url>
      
        <content type="html"><![CDATA[<h1 id="prometheus系统架构图"><a href="#prometheus系统架构图" class="headerlink" title="prometheus系统架构图"></a>prometheus系统架构图</h1><h1 id=""><a href="#" class="headerlink" title=""></a><img src="/kubernetes/ji-yu-prometheus-de-gao-jing-jian-kong/image-20230407102540604.png" class="" title="image-20230407102540604"></h1><h1 id="手动试验："><a href="#手动试验：" class="headerlink" title="手动试验："></a>手动试验：</h1><p>1.部署一个简单的webhook服务</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span>  alert<span class="token punctuation">-</span>webhook  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span>  alert<span class="token punctuation">-</span>webhook<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> alert<span class="token punctuation">-</span>webhook  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span>  alert<span class="token punctuation">-</span>webhook    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span>  alert<span class="token punctuation">-</span>webhook        <span class="token key atrule">image</span><span class="token punctuation">:</span>  172.32.1.175<span class="token punctuation">:</span>10043/demo/alert<span class="token punctuation">-</span>webhook<span class="token punctuation">:</span><span class="token number">1.0</span>        <span class="token key atrule">ports</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span>  <span class="token number">8080</span>          <span class="token key atrule">name</span><span class="token punctuation">:</span>  alert<span class="token punctuation">-</span>webhook      <span class="token key atrule">imagePullSecrets</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> secret<span class="token punctuation">-</span>wangsu<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> alert<span class="token punctuation">-</span>webhook  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> alert<span class="token punctuation">-</span>webhook  <span class="token key atrule">type</span><span class="token punctuation">:</span> NodePort  <span class="token key atrule">ports</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> alert<span class="token punctuation">-</span>webhook    <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span>    <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">8080</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>调整 kubectl -n monitoring get secrets  路径下的alertmanager.yaml配置文件</li></ol><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">参考模板：<span class="token key atrule">global</span><span class="token punctuation">:</span>  <span class="token key atrule">resolve_timeout</span><span class="token punctuation">:</span> <span class="token string">'5m'</span>  <span class="token key atrule">smtp_smarthost</span><span class="token punctuation">:</span> <span class="token string">'smtp.126.com:25'</span>     <span class="token key atrule">smtp_from</span><span class="token punctuation">:</span> <span class="token string">'looknicemm@126.com'</span>   <span class="token key atrule">smtp_auth_username</span><span class="token punctuation">:</span> <span class="token string">'looknicemm@126.com'</span>   <span class="token key atrule">smtp_auth_password</span><span class="token punctuation">:</span> <span class="token string">'KNPYYGBKYJKKOQQA'</span>  <span class="token comment">#邮箱的授权密码 (如果是163邮箱，需要在设置-&gt;常规设置-&gt;点击左侧的客户端授权密码-&gt;开启授权密码)</span><span class="token key atrule">templates</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token string">'*.tmpl'</span> <span class="token comment">#加载所有消息通知模板</span><span class="token key atrule">inhibit_rules</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">equal</span><span class="token punctuation">:</span>   <span class="token comment"># 如果告警出现critical 那么在相同的namespace和alertname下的 warning|info级别的告警都会被抑制</span>  <span class="token punctuation">-</span> namespace  <span class="token punctuation">-</span> alertname  <span class="token key atrule">source_matchers</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> severity = critical  <span class="token key atrule">target_matchers</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> severity =~ warning<span class="token punctuation">|</span>info<span class="token punctuation">-</span> <span class="token key atrule">equal</span><span class="token punctuation">:</span>    <span class="token comment"># 确保这个配置下的标签内容相同才会抑制，也就是说警报中必须有这三个标签值才会被抑制。</span>  <span class="token punctuation">-</span> namespace  <span class="token punctuation">-</span> alertname  <span class="token key atrule">source_matchers</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> severity = warning  <span class="token key atrule">target_matchers</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> severity = info<span class="token key atrule">route</span><span class="token punctuation">:</span>  <span class="token key atrule">receiver</span><span class="token punctuation">:</span> <span class="token string">'default-receiver'</span>  <span class="token key atrule">group_by</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'alertname'</span><span class="token punctuation">,</span><span class="token string">'namespace'</span><span class="token punctuation">]</span>  <span class="token comment">#将传入警报分组在一起的标签。例如，cluster=A和alertname=LatencyHigh的多个警报将批处理为单个组。</span>  <span class="token key atrule">group_wait</span><span class="token punctuation">:</span> 30s  <span class="token comment">#当传入的警报创建新的警报组时，至少等待"30s"发送初始通知。</span>  <span class="token key atrule">group_interval</span><span class="token punctuation">:</span> 5m  <span class="token comment">#当发送第一个通知时，等待"5m"发送一批新的警报，这些警报开始针对该组触发。 （如果是group_by里的内容为新的如：alertname=1,alertname=2 会马上发送2封邮件, 如果是group_by之外的会等待5m触发一次）</span>  <span class="token key atrule">repeat_interval</span><span class="token punctuation">:</span> 4h <span class="token comment">#如果警报已成功发送，请等待"4h"重新发送，重复发送邮件的时间间隔</span>  <span class="token key atrule">routes</span><span class="token punctuation">:</span> <span class="token comment">#所有与下列子路由不匹配的警报将保留在根节点，并被分派到'default-receiver'。</span>  <span class="token punctuation">-</span> <span class="token key atrule">receiver</span><span class="token punctuation">:</span> <span class="token string">'database-pager'</span>    <span class="token key atrule">group_wait</span><span class="token punctuation">:</span> 10s    <span class="token key atrule">group_by</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>service<span class="token punctuation">]</span>    <span class="token key atrule">match_re</span><span class="token punctuation">:</span>      <span class="token key atrule">service</span><span class="token punctuation">:</span> mysql<span class="token punctuation">|</span>cassandra  <span class="token comment">#带有service=mysql或service=cassandra的所有警报都被发送到'database-pager'</span><span class="token key atrule">receivers</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> default<span class="token punctuation">-</span>receiver <span class="token comment">#不同的报警 发送给不同的邮箱</span>  <span class="token key atrule">webhook_configs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">url</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//alert<span class="token punctuation">-</span>webhook.default<span class="token punctuation">:</span>8080/webhook        <span class="token key atrule">send_resolved</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 恢复通知提醒</span><span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> database<span class="token punctuation">-</span>pager  <span class="token key atrule">email_configs</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">to</span><span class="token punctuation">:</span> <span class="token string">'690081650@qq.com'</span>    <span class="token key atrule">html</span><span class="token punctuation">:</span> <span class="token string">'{{ template "alertemp.html" . }}'</span>     <span class="token comment">#应用哪个模板</span>    <span class="token key atrule">headers</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token key atrule">Subject</span><span class="token punctuation">:</span> <span class="token string">"[INFO] 报警邮件test"</span> <span class="token punctuation">}</span>   <span class="token comment">#邮件头信息</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li><p>删除pod 查看zstack-prometheus-alertmanager svc对应下的status看是否已经修改成功 <a href="http://172.31.12.6:32140/#/alerts">http://172.31.12.6:32140/#/alerts</a> </p></li><li><p>收到相关的告警信息</p></li></ol><p>Alatermanager：访问webhook的访问数据</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"4"</span><span class="token punctuation">,</span>    <span class="token property">"groupKey"</span><span class="token operator">:</span> <span class="token string">"{}:{alertname=\"CPUThrottlingHigh\", namespace=\"zstack-middleware\"}"</span><span class="token punctuation">,</span>    <span class="token property">"status"</span><span class="token operator">:</span> <span class="token string">"firing"</span><span class="token punctuation">,</span>    <span class="token property">"receiver"</span><span class="token operator">:</span> <span class="token string">"default-receiver"</span><span class="token punctuation">,</span>    <span class="token property">"groupLabels"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"alertname"</span><span class="token operator">:</span> <span class="token string">"CPUThrottlingHigh"</span><span class="token punctuation">,</span>        <span class="token property">"namespace"</span><span class="token operator">:</span> <span class="token string">"zstack-middleware"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"commonLabels"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"alertname"</span><span class="token operator">:</span> <span class="token string">"CPUThrottlingHigh"</span><span class="token punctuation">,</span>        <span class="token property">"container"</span><span class="token operator">:</span> <span class="token string">"metrics"</span><span class="token punctuation">,</span>        <span class="token property">"namespace"</span><span class="token operator">:</span> <span class="token string">"zstack-middleware"</span><span class="token punctuation">,</span>        <span class="token property">"prometheus"</span><span class="token operator">:</span> <span class="token string">"monitoring/zstack-prometheus-prometheus"</span><span class="token punctuation">,</span>        <span class="token property">"severity"</span><span class="token operator">:</span> <span class="token string">"info"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"commonAnnotations"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"runbook_url"</span><span class="token operator">:</span> <span class="token string">"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-cputhrottlinghigh"</span><span class="token punctuation">,</span>        <span class="token property">"summary"</span><span class="token operator">:</span> <span class="token string">"Processes experience elevated CPU throttling."</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"externalURL"</span><span class="token operator">:</span> <span class="token string">"http://zstack-prometheus-alertmanager.monitoring:9093"</span><span class="token punctuation">,</span>    <span class="token property">"alerts"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span>            <span class="token property">"labels"</span><span class="token operator">:</span> <span class="token punctuation">{</span>                <span class="token property">"alertname"</span><span class="token operator">:</span> <span class="token string">"CPUThrottlingHigh"</span><span class="token punctuation">,</span>                <span class="token property">"container"</span><span class="token operator">:</span> <span class="token string">"metrics"</span><span class="token punctuation">,</span>                <span class="token property">"namespace"</span><span class="token operator">:</span> <span class="token string">"zstack-middleware"</span><span class="token punctuation">,</span>                <span class="token property">"pod"</span><span class="token operator">:</span> <span class="token string">"postgres-postgresql-0"</span><span class="token punctuation">,</span>                <span class="token property">"prometheus"</span><span class="token operator">:</span> <span class="token string">"monitoring/zstack-prometheus-prometheus"</span><span class="token punctuation">,</span>                <span class="token property">"severity"</span><span class="token operator">:</span> <span class="token string">"info"</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token property">"annotations"</span><span class="token operator">:</span> <span class="token punctuation">{</span>                <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"36.43% throttling of CPU in namespace zstack-middleware for container metrics in pod postgres-postgresql-0."</span><span class="token punctuation">,</span>                <span class="token property">"runbook_url"</span><span class="token operator">:</span> <span class="token string">"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-cputhrottlinghigh"</span><span class="token punctuation">,</span>                <span class="token property">"summary"</span><span class="token operator">:</span> <span class="token string">"Processes experience elevated CPU throttling."</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token property">"startsAt"</span><span class="token operator">:</span> <span class="token string">"2022-10-26T06:44:50.751Z"</span><span class="token punctuation">,</span>            <span class="token property">"endsAt"</span><span class="token operator">:</span> <span class="token string">"0001-01-01T00:00:00Z"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"labels"</span><span class="token operator">:</span> <span class="token punctuation">{</span>                <span class="token property">"alertname"</span><span class="token operator">:</span> <span class="token string">"CPUThrottlingHigh"</span><span class="token punctuation">,</span>                <span class="token property">"container"</span><span class="token operator">:</span> <span class="token string">"metrics"</span><span class="token punctuation">,</span>                <span class="token property">"namespace"</span><span class="token operator">:</span> <span class="token string">"zstack-middleware"</span><span class="token punctuation">,</span>                <span class="token property">"pod"</span><span class="token operator">:</span> <span class="token string">"postgres-postgresql-1"</span><span class="token punctuation">,</span>                <span class="token property">"prometheus"</span><span class="token operator">:</span> <span class="token string">"monitoring/zstack-prometheus-prometheus"</span><span class="token punctuation">,</span>                <span class="token property">"severity"</span><span class="token operator">:</span> <span class="token string">"info"</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token property">"annotations"</span><span class="token operator">:</span> <span class="token punctuation">{</span>                <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"36.28% throttling of CPU in namespace zstack-middleware for container metrics in pod postgres-postgresql-1."</span><span class="token punctuation">,</span>                <span class="token property">"runbook_url"</span><span class="token operator">:</span> <span class="token string">"https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-cputhrottlinghigh"</span><span class="token punctuation">,</span>                <span class="token property">"summary"</span><span class="token operator">:</span> <span class="token string">"Processes experience elevated CPU throttling."</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token property">"startsAt"</span><span class="token operator">:</span> <span class="token string">"2022-10-25T21:18:20.751Z"</span><span class="token punctuation">,</span>            <span class="token property">"endsAt"</span><span class="token operator">:</span> <span class="token string">"0001-01-01T00:00:00Z"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/kubernetes/ji-yu-prometheus-de-gao-jing-jian-kong/image-20230407102824537.png" class="" title="image-20230407102824537"><h1 id="自定义报警规则："><a href="#自定义报警规则：" class="headerlink" title="自定义报警规则："></a><a href="https://yunlzheng.gitbook.io/prometheus-book/part-iii-prometheus-shi-zhan/operator/use-operator-manage-prometheus">自定义报警规则</a>：</h1><p>1、参考prometheus规则（包含大部分通用规则）：<a href="https://awesome-prometheus-alerts.grep.to/">https://awesome-prometheus-alerts.grep.to/</a></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> monitoring.coreos.com/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PrometheusRule<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">custom-alerting-rule-level</span><span class="token punctuation">:</span> cluster    <span class="token key atrule">role</span><span class="token punctuation">:</span> alert<span class="token punctuation">-</span>rules  <span class="token key atrule">name</span><span class="token punctuation">:</span> custom<span class="token punctuation">-</span>alerting<span class="token punctuation">-</span>rule  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> monitoring<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">groups</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> alerting.custom.defaults.0    <span class="token key atrule">rules</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">alert</span><span class="token punctuation">:</span> fe      <span class="token key atrule">annotations</span><span class="token punctuation">:</span>        <span class="token key atrule">kind</span><span class="token punctuation">:</span> Node        <span class="token key atrule">message</span><span class="token punctuation">:</span> <span class="token string">""</span>        <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token string">'["172-20-17-188"]'</span>        <span class="token key atrule">rule_update_time</span><span class="token punctuation">:</span> <span class="token string">"2022-10-09T10:14:48Z"</span>        <span class="token key atrule">rules</span><span class="token punctuation">:</span> <span class="token string">'[{"_metricType":"instance:node_cpu_utilisation:rate5m{$1}","condition_type":"&lt;","thresholds":"90","unit":"%"}]'</span>        <span class="token key atrule">summary</span><span class="token punctuation">:</span> 节点 172.32.1.174 CPU 用量 &lt; 90%      <span class="token key atrule">expr</span><span class="token punctuation">:</span>  instance<span class="token punctuation">:</span>node_cpu_utilisation<span class="token punctuation">:</span>rate5m<span class="token punctuation">{</span> instance=~"172.32.1.174.<span class="token important">*|172.32.1.179.*"</span><span class="token punctuation">}</span>  &lt;0.9      <span class="token key atrule">for</span><span class="token punctuation">:</span> 1m      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">alerttype</span><span class="token punctuation">:</span> metric        <span class="token key atrule">severity</span><span class="token punctuation">:</span> warning        <span class="token key atrule">service</span><span class="token punctuation">:</span> mysql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2、 基于工作负载的某项指标进行检测</p><pre class="line-numbers language-none"><code class="language-none">node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate * ON(pod) GROUP_LEFT() namespace_workload_pod:kube_pod_owner:relabel{ workload_type="deployment",workload=~"alert-webhook|asd"} &gt;0workload_type：取值为：  deployment，statefulset，daemonset<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>3、基于helm应用的所有工作负载（sts，deploy，ds）的某项指标检测 —– 需要补充一个自己开发helm-exporter采集器</p><pre class="line-numbers language-none"><code class="language-none">node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate  * ON(pod) GROUP_LEFT() (namespace_workload_pod:kube_pod_owner:relabel{} * on(workload,workload_type) GROUP_LEFT() helm_chart_workload_list{chart=~"helm-exporter|zstack-edge"})<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="自定义采集器："><a href="#自定义采集器：" class="headerlink" title="自定义采集器："></a>自定义采集器：</h1><p>   1.基于client-golang的SDK工具包进行exporter采集器开发参考Demo:<a href="https://github.com/prometheus/client_golang/blob/main/examples/gocollector/main.go">https://github.com/prometheus/client_golang/blob/main/examples/gocollector/main.go</a></p><p>   2.配置prometheus拉取采集信息servicemonitors (最终会写到prometheus中/etc/prometheus/config_out/prometheus.env.yaml的配置文件中)</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> monitoring.coreos.com/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceMonitor<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">meta.helm.sh/release-name</span><span class="token punctuation">:</span> prometheus    <span class="token key atrule">meta.helm.sh/release-namespace</span><span class="token punctuation">:</span> monitoring  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> helm<span class="token punctuation">-</span>exporter    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> helm<span class="token punctuation">-</span>exporter    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.2.3    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> helm<span class="token punctuation">-</span>exporter<span class="token punctuation">-</span>1.2.3_4dc0dfc  <span class="token key atrule">name</span><span class="token punctuation">:</span> helm<span class="token punctuation">-</span>exporter  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> monitoring<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">path</span><span class="token punctuation">:</span> /metrics    <span class="token key atrule">port</span><span class="token punctuation">:</span> http  <span class="token key atrule">namespaceSelector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchNames</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> monitoring  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> helm<span class="token punctuation">-</span>exporter<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>规则设置后可以到<a href="http://172.32.1.210:10006/targets%E6%9F%A5%E7%9C%8B%E6%98%AF%E5%90%A6%E9%85%8D%E7%BD%AE%E6%88%90%E5%8A%9F">http://172.32.1.210:10006/targets查看是否配置成功</a></li></ol><img src="/kubernetes/ji-yu-prometheus-de-gao-jing-jian-kong/image-20230407104255439.png" class="" title="image-20230407104255439"><img src="/kubernetes/ji-yu-prometheus-de-gao-jing-jian-kong/image-20230407104305177.png" class="" title="image-20230407104305177"><h1 id="设计思路："><a href="#设计思路：" class="headerlink" title="设计思路："></a>设计思路：</h1><img src="/kubernetes/ji-yu-prometheus-de-gao-jing-jian-kong/image-20230407103203315.png" class="" title="image-20230407103203315"><p>整个报警链路完成：</p><ol><li>首先是Prometheus根据告警规则告警，如果增删改规则参考PrometheusRule（<a href="https://blog.csdn.net/wzy_168/article/details/103290235%EF%BC%89">https://blog.csdn.net/wzy_168/article/details/103290235）</a></li><li>Prometheus的告警经过Alertmanager静默、抑制、分组等配置到达Alertmanager</li><li>AlterManager通过配置webhook，地址填Edge自定义转换器的地址。</li><li>Edge自定义转换器中webhook地址去调用其他通知渠道（如：邮箱、<a href="https://developer.aliyun.com/article/705415">钉钉</a>、微信…..）。</li></ol><h1 id="词语解释："><a href="#词语解释：" class="headerlink" title="词语解释："></a>词语解释：</h1><p>​    1. alert State:  </p><p><strong>Inactive</strong> 警报未激活；</p><p><strong>Pending</strong>：警报已满足测试表达式条件，但未达到for指定的持续时间；</p><p><strong>Firing</strong>：警报满足测试表达式条件，且持续时间达到了for指定的持续时间</p><img src="/kubernetes/ji-yu-prometheus-de-gao-jing-jian-kong/image-20230407103239678.png" class="" title="image-20230407103239678"><h1 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h1><ol><li><a href="https://blog.csdn.net/wzy_168/article/details/103295971">https://blog.csdn.net/wzy_168/article/details/103295971</a> prometheus-operator使用【了解Alertmanager通知机制】</li><li><a href="https://yunlzheng.gitbook.io/prometheus-book/parti-prometheus-ji-chu/alert/alert-manager-route">https://yunlzheng.gitbook.io/prometheus-book/parti-prometheus-ji-chu/alert/alert-manager-route</a> 基于标签的告警处理路由</li><li><a href="https://github.com/prometheus/client_golang">https://github.com/prometheus/client_golang</a> prometheus开发sdk包，支持自定义采集器开发</li><li><a href="https://github.com/sstarcher/helm-exporter">https://github.com/sstarcher/helm-exporter</a> 应用采集器包，可以进行二次开发</li><li><a href="https://prometheus.io/docs/prometheus/latest/configuration/configuration/">https://prometheus.io/docs/prometheus/latest/configuration/configuration/</a> 官网配置字段说明</li><li><a href="https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/">https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/</a> 官网alert rules 字段说明</li></ol>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
          <category> prometheus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dockerfile的使用</title>
      <link href="/devops/dockerfile-de-shi-yong.html"/>
      <url>/devops/dockerfile-de-shi-yong.html</url>
      
        <content type="html"><![CDATA[<h1 id="DockerFile介绍"><a href="#DockerFile介绍" class="headerlink" title="DockerFile介绍"></a>DockerFile介绍</h1><p>镜像的定制实际上就是定制每一层所添加的配置、文件。如果我们可以把每一层修改、安装、构建、操作的命令都写入一个脚本，用这个脚本来构建、定制镜像，那么之前提及的无法重复的问题、镜</p><p>像构建透明性的问题、体积的问题就都会解决。这个脚本就是Dockerfile。</p><p>　　Dockerfile是一个文本文件，其内包含了一条条的指令(Instruction)，每一条指令构建一层，因此每</p><p>一条指令的内容，就是描述该层应当如何构建。</p><h2 id="Go的DockerFile"><a href="#Go的DockerFile" class="headerlink" title="Go的DockerFile"></a>Go的DockerFile</h2><pre class="line-numbers language-docker" data-language="docker"><code class="language-docker"><span class="token comment"># FROM 基于 golang:1.20</span><span class="token instruction"><span class="token keyword">FROM</span> golang:1.20 <span class="token keyword">AS</span> builder</span><span class="token comment"># ENV 设置环境变量</span><span class="token instruction"><span class="token keyword">ENV</span> GOPATH=/opt/repo</span><span class="token instruction"><span class="token keyword">ENV</span> GO111MODULE=on</span><span class="token instruction"><span class="token keyword">ENV</span> GOPROXY=https://goproxy.cn,https://gocenter.io,https://goproxy.io,direct</span><span class="token instruction"><span class="token keyword">ENV</span> CGO_ENABLED=0</span><span class="token instruction"><span class="token keyword">ENV</span> GOOS=linux</span><span class="token instruction"><span class="token keyword">WORKDIR</span> <span class="token variable">$GOPATH</span>/app</span><span class="token comment"># COPY 源路径 目标路径</span><span class="token instruction"><span class="token keyword">COPY</span> . <span class="token variable">$GOPATH</span>/app</span><span class="token comment"># RUN 执行 go build .</span><span class="token instruction"><span class="token keyword">RUN</span>  cd <span class="token variable">$GOPATH</span>/app &amp;&amp;go build main.go</span><span class="token comment"># FROM 基于 alpine:latest</span><span class="token instruction"><span class="token keyword">FROM</span> alpine:latest</span><span class="token comment"># RUN 设置 Asia/Shanghai 时区</span><span class="token instruction"><span class="token keyword">RUN</span> apk --no-cache add tzdata  &amp;&amp; <span class="token operator">\</span>    ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; <span class="token operator">\</span>    echo <span class="token string">"Asia/Shanghai"</span> &gt; /etc/timezone</span><span class="token comment"># COPY 源路径 目标路径 从镜像中 COPY</span><span class="token instruction"><span class="token keyword">COPY</span> <span class="token options"><span class="token property">--from</span><span class="token punctuation">=</span><span class="token string">builder</span></span> /opt/repo/app/main /opt/ginctl</span><span class="token comment"># EXPOSE 设置端口映射</span><span class="token instruction"><span class="token keyword">EXPOSE</span> 9999/tcp</span><span class="token comment"># WORKDIR 设置工作目录</span><span class="token instruction"><span class="token keyword">WORKDIR</span> /opt</span><span class="token comment"># CMD 设置启动命令</span><span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"./ginctl"</span>, <span class="token string">"-env"</span>, <span class="token string">"fat"</span>]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Dockerfile-指令介绍"><a href="#Dockerfile-指令介绍" class="headerlink" title="Dockerfile 指令介绍"></a>Dockerfile 指令介绍</h2><h3 id="FROM"><a href="#FROM" class="headerlink" title="FROM"></a><strong><strong>FROM</strong></strong></h3><p>1、介绍</p><ul><li>FROM指令用于为镜像文件构建过程指定基础镜像，后续的指令运行于此基础镜像所提供的运行环境；</li><li>配合AS可以做成区分运行时镜像和构建时镜像</li></ul><p>2、示例： </p><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token constant">FROM</span> <span class="token literal-property property">golang</span><span class="token operator">:</span><span class="token number">1.20</span> <span class="token constant">AS</span> builder# <span class="token constant">COPY</span> 源路径 目标路径 从镜像中 <span class="token constant">COPY</span><span class="token constant">COPY</span> <span class="token operator">--</span>from<span class="token operator">=</span>builder <span class="token operator">/</span>opt<span class="token operator">/</span>repo<span class="token operator">/</span>app<span class="token operator">/</span>main <span class="token operator">/</span>opt<span class="token operator">/</span>ginctl<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="MAINTAINER"><a href="#MAINTAINER" class="headerlink" title="MAINTAINER"></a><strong><strong>MAINTAINER</strong></strong></h3><p>1、介绍</p><ul><li>用于让dockerfile制作者提供本人的详细信息</li></ul><p>2、示例</p><pre class="line-numbers language-docker" data-language="docker"><code class="language-docker"><span class="token instruction"><span class="token keyword">FROM</span> golang:1.20 <span class="token keyword">AS</span> builder</span><span class="token instruction"><span class="token keyword">MAINTAINER</span> <span class="token string">'xiejiayi &lt;looknicemm@126.com&gt;'</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="COPY"><a href="#COPY" class="headerlink" title="COPY"></a><strong><strong>COPY</strong></strong></h3><p>1、介绍</p><ul><li>用于从docker主机复制新文件或者目录至创建的新镜像指定路径中</li><li>目标路径，即正在创建的image的文件系统路径；建议使用绝对路径，否则，COPY指定以WORKDIR为其实路径</li></ul><p>2、示例</p><pre class="line-numbers language-docker" data-language="docker"><code class="language-docker"><span class="token comment"># FROM 基于 golang:1.20</span><span class="token instruction"><span class="token keyword">FROM</span> golang:1.20 <span class="token keyword">AS</span> builder</span><span class="token instruction"><span class="token keyword">MAINTAINER</span> <span class="token string">'xiejiayi &lt;looknicemm@126.com&gt;'</span></span><span class="token comment"># COPY 源路径 目标路径</span><span class="token instruction"><span class="token keyword">COPY</span> . <span class="token variable">$GOPATH</span>/app</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ENV"><a href="#ENV" class="headerlink" title="ENV"></a><strong><strong>ENV</strong></strong></h3><p>1、介绍</p><ul><li>用于为镜像定义所需的环境变量，并可被Dockerfile文件中位于其后的其它指令(如ENV、ADD、COPY等)所调用</li></ul><p>2、示例</p><pre class="line-numbers language-docker" data-language="docker"><code class="language-docker"><span class="token comment"># FROM 基于 golang:1.20</span><span class="token instruction"><span class="token keyword">FROM</span> golang:1.20 <span class="token keyword">AS</span> builder</span><span class="token instruction"><span class="token keyword">MAINTAINER</span> <span class="token string">'xiejiayi &lt;looknicemm@126.com&gt;'</span></span><span class="token comment"># ENV 设置环境变量</span><span class="token instruction"><span class="token keyword">ENV</span> GOPATH=/opt/repo</span><span class="token instruction"><span class="token keyword">ENV</span> GO111MODULE=on</span><span class="token instruction"><span class="token keyword">ENV</span> GOPROXY=https://goproxy.cn,https://gocenter.io,https://goproxy.io,direct</span><span class="token instruction"><span class="token keyword">ENV</span> CGO_ENABLED=0</span><span class="token instruction"><span class="token keyword">ENV</span> GOOS=linux</span><span class="token comment"># COPY 源路径 目标路径</span><span class="token instruction"><span class="token keyword">COPY</span> . <span class="token variable">$GOPATH</span>/app</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="WORKDIR"><a href="#WORKDIR" class="headerlink" title="WORKDIR"></a><strong><strong>WORKDIR</strong></strong></h3><p>1、介绍</p><ul><li>用于为Dockerfile中所有的RUN、CMD、ENTRYPOINT、COPY和ADD指定设定工作目录</li></ul><p>2、示例</p><pre class="line-numbers language-docker" data-language="docker"><code class="language-docker"><span class="token comment"># FROM 基于 golang:1.20</span><span class="token instruction"><span class="token keyword">FROM</span> golang:1.20 <span class="token keyword">AS</span> builder</span><span class="token instruction"><span class="token keyword">MAINTAINER</span> <span class="token string">'xiejiayi &lt;looknicemm@126.com&gt;'</span></span><span class="token comment"># ENV 设置环境变量</span><span class="token instruction"><span class="token keyword">ENV</span> GOPATH=/opt/repo</span><span class="token instruction"><span class="token keyword">ENV</span> GO111MODULE=on</span><span class="token instruction"><span class="token keyword">ENV</span> GOPROXY=https://goproxy.cn,https://gocenter.io,https://goproxy.io,direct</span><span class="token instruction"><span class="token keyword">ENV</span> CGO_ENABLED=0</span><span class="token instruction"><span class="token keyword">ENV</span> GOOS=linux</span><span class="token comment">#用于为Dockerfile中所有的RUN、CMD、ENTRYPOINT、COPY和ADD指定设定工作目录</span><span class="token instruction"><span class="token keyword">WORKDIR</span> <span class="token variable">$GOPATH</span>/app</span><span class="token comment"># COPY 源路径 目标路径</span><span class="token instruction"><span class="token keyword">COPY</span> . <span class="token variable">$GOPATH</span>/app</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="RUN"><a href="#RUN" class="headerlink" title="RUN"></a><strong><strong>RUN</strong></strong></h3><p>1、介绍</p><ul><li>用于指定docker build过程中运行的程序，其可以是任何命令</li></ul><p>2、示例</p><pre class="line-numbers language-docker" data-language="docker"><code class="language-docker"><span class="token comment"># FROM 基于 golang:1.20</span><span class="token instruction"><span class="token keyword">FROM</span> golang:1.20 <span class="token keyword">AS</span> builder</span><span class="token instruction"><span class="token keyword">MAINTAINER</span> <span class="token string">'xiejiayi &lt;looknicemm@126.com&gt;'</span></span><span class="token comment"># ENV 设置环境变量</span><span class="token instruction"><span class="token keyword">ENV</span> GOPATH=/opt/repo</span><span class="token instruction"><span class="token keyword">ENV</span> GO111MODULE=on</span><span class="token instruction"><span class="token keyword">ENV</span> GOPROXY=https://goproxy.cn,https://gocenter.io,https://goproxy.io,direct</span><span class="token instruction"><span class="token keyword">ENV</span> CGO_ENABLED=0</span><span class="token instruction"><span class="token keyword">ENV</span> GOOS=linux</span><span class="token comment">#用于为Dockerfile中所有的RUN、CMD、ENTRYPOINT、COPY和ADD指定设定工作目录</span><span class="token instruction"><span class="token keyword">WORKDIR</span> <span class="token variable">$GOPATH</span>/app</span><span class="token comment"># COPY 源路径 目标路径</span><span class="token instruction"><span class="token keyword">COPY</span> . <span class="token variable">$GOPATH</span>/app</span><span class="token comment"># RUN 执行 go build .</span><span class="token instruction"><span class="token keyword">RUN</span>  cd <span class="token variable">$GOPATH</span>/app &amp;&amp;go build main.go</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="EXPOSE"><a href="#EXPOSE" class="headerlink" title="EXPOSE"></a>EXPOSE</h3><p>1、介绍</p><ul><li>用于为容器打开指定要监听的端口以实现与外部通信</li></ul><p>2、 示例</p><pre class="line-numbers language-docker" data-language="docker"><code class="language-docker"><span class="token comment"># FROM 基于 alpine:latest</span><span class="token instruction"><span class="token keyword">FROM</span> alpine:latest</span><span class="token comment"># RUN 设置 Asia/Shanghai 时区</span><span class="token instruction"><span class="token keyword">RUN</span> apk --no-cache add tzdata  &amp;&amp; <span class="token operator">\</span>    ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; <span class="token operator">\</span>    echo <span class="token string">"Asia/Shanghai"</span> &gt; /etc/timezone</span><span class="token comment"># COPY 源路径 目标路径 从镜像中 COPY</span><span class="token instruction"><span class="token keyword">COPY</span> <span class="token options"><span class="token property">--from</span><span class="token punctuation">=</span><span class="token string">builder</span></span> /opt/repo/app/main /opt/ginctl</span><span class="token comment"># EXPOSE 设置端口映射</span><span class="token instruction"><span class="token keyword">EXPOSE</span> 9999/tcp</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a><strong><strong>CMD</strong></strong></h2><p>1、介绍</p><ul><li>类似于RUN指令，CMD指令也可用于运行任何命令或应用程序，不过，二者的运行时间点不同</li><li>CMD指令的首要目的在于为启动的容器指定默认要运行的程序，且其运行结束后，容器也将终止；不过，CMD指定的命令其可以被docker run的命令行选项所覆盖</li></ul><pre class="line-numbers language-docker" data-language="docker"><code class="language-docker"><span class="token comment"># CMD 设置启动命令</span><span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"./ginctl"</span>, <span class="token string">"-env"</span>, <span class="token string">"fat"</span>]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong><strong>ENTRYPOINT</strong></strong></p><p>1、</p><ul><li>类似CMD指令的功能，用于为容器指定默认运行程序，从而使容器像是一个单独的可执行程序</li><li>与CMD不同的是，由ENTRYPOINT启动的程序不会被docker run命令行指定的参数所覆盖，而且，这些命令行参数会被当作参数传递给ENTRYPOINT指定指定的程序</li><li>不过，docker run命令的–entrypoint选项的参数可覆盖ENTRYPOINT指令指定的程序</li></ul><pre class="line-numbers language-docker" data-language="docker"><code class="language-docker"><span class="token instruction"><span class="token keyword">ENTRYPOINT</span> /bin/httpd -f -h <span class="token variable">${WEB_DOC_ROOT}</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="HEALTHCHECK"><a href="#HEALTHCHECK" class="headerlink" title="HEALTHCHECK"></a><strong>HEALTHCHECK</strong></h2><p>1、介绍</p><ul><li>HEALTHCHECK指令告诉Docker如何测试容器以检查它是否仍在工作</li><li>即使服务器进程仍在运行，也可以检测出陷入无限循环且无法处理新连接的Web服务器等情况</li></ul><p>2、语法格式</p><p>HEALTHCHECK [OPTIONS] CMD command (通过在容器内运行命令来检查容器运行状况)</p><p>HEALTHCHECK NONE (禁用从基础映像继承的任何运行状况检查)</p><p>1）常见选项：</p><ul><li>-interval=DURATION (default: 30s)：每隔多长时间探测一次，默认30秒</li><li><ul><li>timeout= DURATION (default: 30s)：服务响应超时时长，默认30秒</li></ul></li><li>-start-period= DURATION (default: 0s)：服务启动多久后开始探测，默认0秒</li><li>-retries=N (default: 3)：认为检测失败几次为宕机，默认3次</li></ul><p>2）返回值</p><ul><li>0：容器成功是健康的，随时可以使用</li><li>1：不健康的容器无法正常工作</li><li>2：保留不使用此退出代码</li></ul><p>3、示例</p><p>1）编写dockerfile文件</p><p>检测web1容器的10080端口（其实打开的是80端口，10080并没有打开，所以会检测失败）</p><pre class="line-numbers language-docker" data-language="docker"><code class="language-docker"><span class="token instruction"><span class="token keyword">FROM</span> busybox:latest</span><span class="token instruction"><span class="token keyword">MAINTAINER</span> <span class="token string">'111'</span></span><span class="token instruction"><span class="token keyword">ENV</span> WEB_DOC_ROOT=<span class="token string">"/data/web/html"</span></span><span class="token instruction"><span class="token keyword">RUN</span> mkdir -p <span class="token variable">${WEB_DOC_ROOT}</span> &amp;&amp; <span class="token operator">\</span>echo <span class="token string">"&lt;h1&gt;Busybox httpd server&lt;/h1&gt;"</span> &gt; <span class="token variable">${WEB_DOC_ROOT}</span>/index.html</span><span class="token instruction"><span class="token keyword">CMD</span> /bin/httpd -f -h <span class="token variable">${WEB_DOC_ROOT}</span></span><span class="token instruction"><span class="token keyword">HEALTHCHECK</span> <span class="token options"><span class="token property">--start-period</span><span class="token punctuation">=</span><span class="token string">3s</span></span> <span class="token keyword">CMD</span> wget -O - -q [http://<span class="token variable">${IP:-0.0.0.0}</span>:10080/]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> devops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> devops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vlan、子网掩码、MAC地址、网关、DNS、三层交换机</title>
      <link href="/wang-luo/vlan-zi-wang-yan-ma-mac-di-zhi-wang-guan-dns-san-ceng-jiao-huan-ji.html"/>
      <url>/wang-luo/vlan-zi-wang-yan-ma-mac-di-zhi-wang-guan-dns-san-ceng-jiao-huan-ji.html</url>
      
        <content type="html"><![CDATA[<h2 id="01-什么是VLAN"><a href="#01-什么是VLAN" class="headerlink" title="01 什么是VLAN"></a>01 什么是VLAN</h2><blockquote><p>VLAN中文是“虚拟局域网”。LAN可以是由少数几台家用计算机构成的网络，也可以是数以百计的计算机构成的企业网络。VLAN所指的LAN特指使用路由器分割的网络——也就是广播域。</p><p>听上面的概念，肯定有不少朋友是一头雾水的，什么是虚拟局域网？好好的，为什么要划分vlan？</p></blockquote><p><strong>这里举个例：通俗的了解</strong></p><blockquote><p>一所高中，新学期高一招了800个学生，这800个学生，如果放在一个班里，那肯定是管理不过来，面对800个人，老师看了也头疼，这边在授课，那边完全听不到，老师布置什么任务，也会有一些传达不到，老师要是想找某个学生的信息，要从800份信息中去找，极其麻烦，浪费时间；</p><p>而实际中，也是一样，电脑A要想要与电脑B通信，于是电脑A就需要发送arp请求，而网络中电脑众多，最终ARP请求会被转发到同一网络中的所有电脑，才能找到电脑B，如此一来，为了找到电脑B，消耗了网络整体的带宽，收到广播信息的计算机还要消耗一部分CPU时间来对它进行处理。造成了网络带宽和CPU运算能力的大量无谓消耗</p></blockquote><p><strong>那么怎么办呢？</strong></p><blockquote><p>学校就针对这800个学生，分成了10个班，每个班80人，分别命名为高一（1）班，高一（2）班、、、、高一（10）班，每个人都会获得一个班级编号。</p><p>1101表示一班01号学生。</p><p>1102表示一班02号学生。</p><p>1201表示2班01号学生。</p><p>同一个班的学生编号尾数不同，其它的都相同。</p><p>那么这样老师再管理起来就轻松多了，可以把一班这80人管理的妥妥的，隔壁2班与3班乱成一锅粥也不管一班的事，我就要这一班80人好好上课就行。</p><p>这就是vlan，每个班就相当于一个vlan，而每个班名称，就相当于vlan的名称，而每个学生的编号就是ip地址；同班同学（同一个vlan的ip），因为同一个教室，朝夕相处，且可以相互通信，不同班的同学，若不做其它工作，很难往来通信。</p><p>所以同一个vlan间，可以相互通信；不同vlan，若不做配置，不能相互通信。</p><p>那么不同vlan如何通通信呢？就需要单臂路由与三层交换机。</p></blockquote><h2 id="02-单臂路由与三层交换机"><a href="#02-单臂路由与三层交换机" class="headerlink" title="02 单臂路由与三层交换机"></a>02 单臂路由与三层交换机</h2><blockquote><p>我们知道要实现不同vlan间通信，就必须需要有路由功能，不同VLAN之间相互通信的两种方式（单臂路由、三层交换机）。</p></blockquote><p><strong>什么是单臂路由？</strong></p><p>单臂路由的实现方式，其实就是普通二层交换机加路由器，从而实现不同vlan间的可以互相通信。</p><img src="/wang-luo/vlan-zi-wang-yan-ma-mac-di-zhi-wang-guan-dns-san-ceng-jiao-huan-ji/640.jpeg" class="" title="图片"><p><strong>那什么是三层交换机呢？</strong></p><blockquote><p>对于小型的网络，单臂路由可以应付，但随着VLAN之间流量的不断增加，很可能导致路由器成为整个网络的瓶颈，出现掉包、或者通信堵塞。</p><p>为了解决上述问题，三层交换机应运而生。三层交换机，本质上就是“带有路由功能的（二层）交换机”。路由属于OSI参照模型中第三层网络层的功能，因此带有第三层路由功能的交换机才被称为“三层交换机”。</p><p>关于三层交换机的内部结构，可以参照下面的简图</p></blockquote><img src="/wang-luo/vlan-zi-wang-yan-ma-mac-di-zhi-wang-guan-dns-san-ceng-jiao-huan-ji/640-16748944419483.png" class="" title="图片"><blockquote><p>在一台本体内，分别设置了交换机模块和路由器模块；而内置的路由模块与交换模块相同，使用ASIC硬件处理路由。因此，与传统的路由器相比，可以实现高速路由。并且，路由与交换模块是汇聚链接的，由于是内部连接，可以确保相当大的带宽，所以对于正规的项目，需要使用三层交换机来实现网网络间的通信。</p></blockquote><h2 id="03-网关与默认网关"><a href="#03-网关与默认网关" class="headerlink" title="03 网关与默认网关"></a>03 网关与默认网关</h2><blockquote><p>在了解了vlan与三层交换机后，能不能通信，还需要看网关是否正确。</p></blockquote><h3 id="一、什么是网关"><a href="#一、什么是网关" class="headerlink" title="一、什么是网关"></a><strong>一、什么是网关</strong></h3><blockquote><p>网关(Gateway)又称网间连接器、协议转换器。网关在传输层上以实现网络互连，是最复杂的网络互连设备，仅用于两个高层协议不同的网络互连。</p></blockquote><h3 id="二、如何来理解网关"><a href="#二、如何来理解网关" class="headerlink" title="二、如何来理解网关"></a><strong>二、如何来理解网关</strong></h3><blockquote><p>大家都知道，从一个房间走到另一个房间，必然要经过<strong>一扇门</strong>。同样，从一个网络向另一个网络发送信息，也必须经过一道“关口”，这道关口就是网关。顾名思义，网关(Gateway)就是一个网络连接到另一个网络的“<strong>关口</strong>”。</p><p>按照不同的分类标准，网关也有很多种。TCP/IP协议里的网关是最常用的，在这里我们所讲的“网关”均指TCP/IP协议下的网关。</p></blockquote><h3 id="三、网关的ip地址"><a href="#三、网关的ip地址" class="headerlink" title="三、网关的ip地址"></a><strong>三、网关的ip地址</strong></h3><p><strong>那么网关到底是什么呢？</strong></p><p>网关实质上是一个网络通向其他网络的IP地址，网关在网段内的可用<strong>ip中选一个</strong>，不过，一般用的是<strong>第1个和最后一个</strong>。</p><blockquote><p><strong>例如</strong></p><p>比如有网络A和网络B，</p><p><strong>网络A：</strong>的IP地址范围为“192.168.1.1~192. 168.1.254”，子网掩255.255.255.0；</p><p>如果需要与其它网段通信，那么它的网关可以设置为192.168.1.1，当然也可以设置为<strong>网段内</strong>其它的一个ip地址。</p><p><strong>网络B：</strong>的IP地址范为“192.168.2.1~192.168.2.254”，子网掩码255.255.255.0。</p><p>如果需要与其它网段通信，那么它的网关可以设置为192.168.2.1，当然也可以设置为<strong>网段内</strong>其它的一个ip地址。</p></blockquote><img src="/wang-luo/vlan-zi-wang-yan-ma-mac-di-zhi-wang-guan-dns-san-ceng-jiao-huan-ji/640-16748945544036.jpeg" class="" title="图片"><h3 id="四、网关是如何实现通信？"><a href="#四、网关是如何实现通信？" class="headerlink" title="四、网关是如何实现通信？"></a><strong>四、网关是如何实现通信？</strong></h3><blockquote><p>在没有<strong>路由器</strong>的情况下，不同的两个网络之间是<strong>不能</strong>进行TCP/IP通信的，即使是两个网络连接在同一台交换机(或集线器)上，TCP/IP协议也会根据子网掩码(255.255.255.0)判定两个网络中的主机处在不同的网络里。而要实现这两个网络之间的通信，则<strong>必须通过网关</strong>。</p><p>如果<strong>网络A</strong>中的主机发现<strong>数据包</strong>的目的主机<strong>不在</strong>本地网络中，就把数据包转发给它<strong>自己的网关</strong>，再由网关转发给网络B的网关，网络B的网关再转发给网络B的某个主机(如附图所示)。网络B向网络A转发数据包的过程。</p><p>所以说，只有设置好网关的<strong>IP地址</strong>，TCP/IP协议才能实现不同网络之间的相互通信。</p></blockquote><h3 id="五、什么是默认网关？"><a href="#五、什么是默认网关？" class="headerlink" title="五、什么是默认网关？"></a><strong>五、什么是默认网关？</strong></h3><blockquote><p>如果搞清了什么是网关，默认网关也就好理解了。就好像一个房间可以有多扇门一样，一台主机可以有多个网关。<strong>默认网关</strong>的意思是一台主机如果找不到可用的网关，就把数据包发给默认<strong>指定的网关</strong>，由这个网关来处理数据包。现在<strong>主机</strong>使用的网关，一般指的是默认网关。</p></blockquote><h2 id="04-什么是DNS"><a href="#04-什么是DNS" class="headerlink" title="04 什么是DNS"></a>04 什么是DNS</h2><blockquote><p>DNS是域名解析服务器（Domain Name System），是把网址变成IP地址的服务器。</p><p>DNS说白了是把域名翻译成IP地址用的，这里面<strong>举个例子</strong>，大家就很容易清楚了。</p><p>例如我们在浏览器里面输入 <a href="http://www.baidu.com/">www.baidu.com</a> 的时候，机器要跟百度这个网站进行<strong>通信</strong>，机器要往外面<strong>发送</strong>数据包，数据包里面要写百度这台服务器的<strong>IP地址</strong>，我们不知道IP地址是多少，那么就需要主机<strong>问DNS服务器</strong>，DNS服务器就自动帮我们把 <a href="http://www.baidu.com/">www.baidu.com</a> 这个域名<strong>翻译成</strong>了IP地址61.135.169.105。然后写到了数据包的目的IP地址里面就可以进行通信。</p><p>就跟我们写信一样，你得写个收信人的<strong>地址</strong>邮局才能给你发送吧，你给国外写信，你写中文地址邮局不认识，需要这个一个人帮你翻译成英语。这就是DNS的作用，所以你的在本地连接里面写DNS才可以正常浏览网页，如果不设置DNS，是无法正常访问网页的。</p></blockquote><h2 id="05-MAC地址与IP"><a href="#05-MAC地址与IP" class="headerlink" title="05 MAC地址与IP"></a>05 MAC地址与IP</h2><blockquote><p>讲到MAC地址，就不得不提ip地址，这里顺便把ip地址也说下。</p><p><strong>IP与MAC</strong></p><p>虽然现在已经ipv6了，但我们基本用的大多数还是ipv4协议，所谓ip就是你电脑整个<strong>网络的编号</strong>。其他电脑想访问电脑就得需要这个编号。但是这个编号很多情况下是一直在<strong>变化</strong>的。唯一不变的是你的MAC地址：<strong>物理地址</strong>。</p><p>MAC是网络中用来标识网卡设备的唯一网络地址。由相关硬件制造商统一分配，每台电脑的MAC地址都是<strong>唯一</strong>的。</p><p>做个比喻，你经常搬家，你没搬一次家都有一个地址，XX小区XX单元XX号，这个就是IP。但是你的名字不变，这个就是MAC，不同的是我们的<strong>MAC不允许重名。</strong></p></blockquote><img src="/wang-luo/vlan-zi-wang-yan-ma-mac-di-zhi-wang-guan-dns-san-ceng-jiao-huan-ji/640-16748946212809.jpeg" class="" title="图片"><blockquote><p><strong>我们的IP分为两个部分：</strong>如上图分为<strong>网络部分</strong>和<strong>主机部分</strong>。网络部分好比就是你在XX省XX市XX镇，这个是国家固定下来了的。但是XX小区XX单元XX号是开发商自己定的。两个编号<strong>加起来</strong>就是你的ip了。不同的是在现实中两个编号的长度是固定的，在网络上A、B、C、D的ip地址却是变化的，这个在前天有详细讲到。</p></blockquote><h2 id="06-子网掩码"><a href="#06-子网掩码" class="headerlink" title="06 子网掩码"></a>06 子网掩码</h2><blockquote><p>子网掩码是为了区分网络位和主机位，上面我们说到过，一个ip地址是由<strong>网络部分</strong>和<strong>主机部分。</strong>正如一个人的名字由姓与名组成。</p><p>那么我们可以把IP地址比作一个人的名字，那么子网掩码就像是一份名单，可以快速的知道那些人同姓，那些人不同姓，把同姓的人分在一组，让他们之前可以互相交流。</p></blockquote><blockquote><p><strong>举个例子</strong></p><p><strong>有一个网段</strong>是192.168.1.0-192.1.254，这个网段就像一个村子一样，就称它为<strong>安防村</strong>，此这网段有个ip地址是192.168.1.1，我们就叫他安防一，另外一个人叫安防二，它的ip地址为192.168.1.2，我们一看他们，就知道他们是同村的。</p><p><strong>另外有一个网段，</strong>是192.168.0.0——192.168.255.254，我们叫它<strong>安村</strong>，村里有个同样有两个ip地址为92.168.1.1与192.168.1.2，也叫安防一，安防二，那么问题来了？这个时候，如何区分他们是属于那个村的？</p><p>这个时候就需要<strong>子网掩码</strong>了来判断他们是属于那个网段的，需要把安防一、安防二带到村里去认下，就知道他们是属于那个村了，<strong>安防村</strong>的网段是255.255.255.0，<strong>安村</strong>的网段是255.255.0.0。</p><p>网络中也会出现类似于“同名”“同姓”的ip地址，如何区分他们到底是属于那个网段，就需要依靠子网掩码了。</p></blockquote><ul><li>参考链接（<a href="javascript:void(0);">智能制造之家</a>）： <a href="https://mp.weixin.qq.com/s?__biz=MzIwMjMxODAzNA==&amp;mid=2247485460&amp;idx=1&amp;sn=03053f38fcf0ed609314f3674e8f069d&amp;chksm=96e1c1a9a19648bfbbec63293a5d965125bf54bfeb0dc9c215de0451138b7136edcc67e4e093&amp;scene=21#wechat_redirect">https://mp.weixin.qq.com/s?__biz=MzIwMjMxODAzNA==&amp;mid=2247485460&amp;idx=1&amp;sn=03053f38fcf0ed609314f3674e8f069d&amp;chksm=96e1c1a9a19648bfbbec63293a5d965125bf54bfeb0dc9c215de0451138b7136edcc67e4e093&amp;scene=21#wechat_redirect</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> network </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go-zero 框架的使用</title>
      <link href="/go/go-zeor.html"/>
      <url>/go/go-zeor.html</url>
      
        <content type="html"><![CDATA[<p>g</p>]]></content>
      
      
      <categories>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1. Go &amp; grpc的使用</title>
      <link href="/grpc/1.gogrpc.html"/>
      <url>/grpc/1.gogrpc.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>欢迎进入 gRPC 的开发文档，gRPC 一开始由 google 开发，是一款语言中立、平台中立、开源的远程过程调用(RPC)系统。</p></blockquote><h2 id="gRPC-是什么？"><a href="#gRPC-是什么？" class="headerlink" title="gRPC 是什么？"></a>gRPC 是什么？</h2><blockquote><p>在 gRPC 里_客户端_应用可以像调用本地对象一样直接调用另一台不同的机器上_服务端_应用的方法，使得您能够更容易地创建分布式应用和服务。与许多 RPC 系统类似，gRPC 也是基于以下理念：定义一个_服务_，指定其能够被远程调用的方法（包含参数和返回类型）。在服务端实现这个接口，并运行一个 gRPC 服务器来处理客户端调用。在客户端拥有一个_存根_能够像服务端一样的方法。</p></blockquote><img src="/grpc/1.gogrpc/image-20230106224441764.png" class="" title="image-20230106224441764"><blockquote><p>gRPC 客户端和服务端可以在多种环境中运行和交互 - 从 google 内部的服务器到你自己的笔记本，并且可以用任何 gRPC <a href="https://doc.oschina.net/grpc?t=58008#quickstart">支持的语言</a>来编写。所以，你可以很容易地用 Java 创建一个 gRPC 服务端，用 Go、Python、Ruby 来创建客户端。此外，Google 最新 API 将有 gRPC 版本的接口，使你很容易地将 Google 的功能集成到你的应用里。</p></blockquote><h3 id="protocol-buffers"><a href="#protocol-buffers" class="headerlink" title="protocol buffers"></a>protocol buffers</h3><blockquote><p>gRPC 默认使用 _protocol buffers_，这是 Google 开源的一套成熟的结构数据序列化机制（当然也可以使用其他数据格式如 JSON）。正如你将在下方例子里所看到的，你用 <em>proto files</em> 创建 gRPC 服务，用 protocol buffers 消息类型来定义方法参数和返回类型。你可以在 <a href="https://doc.oschina.net/https%EF%BC%9A//developers.google.com/protocol-buffers/docs/overview">Protocol Buffers 文档</a>找到更多关于 Protocol Buffers 的资料。</p><h4 id="Protocol-buffers-版本"><a href="#Protocol-buffers-版本" class="headerlink" title="Protocol buffers 版本"></a>Protocol buffers 版本</h4><p>尽管 protocol buffers 对于开源用户来说已经存在了一段时间，例子内使用的却一种名叫 proto3 的新风格的 protocol buffers，它拥有轻量简化的语法、一些有用的新功能，并且支持更多新语言。当前针对 Java 和 C++ 发布了 beta 版本，针对 JavaNano（即 Android Java）发布 alpha 版本，在<a href="https://doc.oschina.net/https%EF%BC%9A//github.com/google/protobuf/releases">protocol buffers Github 源码库里</a>有 Ruby 支持， 在<a href="https://doc.oschina.net/https%EF%BC%9A//github.com/golang/protobuf">golang/protobuf Github 源码库</a>里还有针对 Go 语言的生成器， 对更多语言的支持正在开发中。 你可以在 <a href="https://doc.oschina.net/https%EF%BC%9A//developers.google.com/protocol-buffers/docs/proto3">proto3 语言指南</a>里找到更多内容， 在与当前默认版本的<a href="https://doc.oschina.net/https%EF%BC%9A//github.com/google/protobuf/releases">发布说明</a>比较，看到两者的主要不同点。更多关于 proto3 的文档很快就会出现。虽然你_可以_使用 proto2 (当前默认的 protocol buffers 版本)， 我们通常建议你在 gRPC 里使用 proto3，因为这样你可以使用 gRPC 支持全部范围的的语言，并且能避免 proto2 客户端与 proto3 服务端交互时出现的兼容性问题，反之亦然。<br><a href="https://blog.csdn.net/qq_42641261/article/details/111226035">Protocol Buffer 官网文档整理</a></p></blockquote><h2 id="gRPC-使用"><a href="#gRPC-使用" class="headerlink" title="gRPC 使用"></a>gRPC 使用</h2><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><h4 id="1-protoc安装"><a href="#1-protoc安装" class="headerlink" title="1. protoc安装"></a>1. protoc安装</h4><blockquote><p>git下载地址：<a href="https://github.com/protocolbuffers/protobuf/releases">https://github.com/protocolbuffers/protobuf/releases</a></p><img src="/grpc/1.gogrpc/1672996045896-d1e3d57d-1b1a-4c0c-8777-c46214158916.png" class="" title="image.png"><p>安装完成后，使用protoc –version </p><img src="/grpc/1.gogrpc/1672996101315-9cbe838d-19e7-4433-8e3f-de63764c3369.png" class="" title="image.png"></blockquote><h4 id="2-Go插件"><a href="#2-Go插件" class="headerlink" title="2.Go插件"></a>2.Go插件</h4><blockquote><p>go install google.golang.org/protobuf/cmd/<a href="mailto:protoc-gen-go@v1.26">protoc-gen-go@v1.26</a><br>go install google.golang.org/grpc/cmd/<a href="mailto:protoc-gen-go-grpc@v1.1">protoc-gen-go-grpc@v1.1</a></p><p>go get google.golang.org/grpc</p></blockquote><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1. 准备工作"></a>1. 准备工作</h4><h5 id="编写proto文件"><a href="#编写proto文件" class="headerlink" title="编写proto文件"></a>编写proto文件</h5><pre class="line-numbers language-protobuf" data-language="protobuf"><code class="language-protobuf"><span class="token keyword">syntax</span> <span class="token operator">=</span> <span class="token string">"proto3"</span><span class="token punctuation">;</span><span class="token comment">// 服务端流模式</span><span class="token keyword">option</span> go_package <span class="token operator">=</span> <span class="token string">"./;streamprotodemo"</span><span class="token punctuation">;</span><span class="token keyword">service</span> <span class="token class-name">Greeter</span> <span class="token punctuation">{</span>  <span class="token keyword">rpc</span> <span class="token function">Single</span><span class="token punctuation">(</span><span class="token class-name">StreamReqData</span><span class="token punctuation">)</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token class-name">StreamResData</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//单向调用</span>  <span class="token keyword">rpc</span> <span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token class-name">StreamReqData</span><span class="token punctuation">)</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token keyword">stream</span> <span class="token class-name">StreamResData</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 服务端流模式</span>  <span class="token keyword">rpc</span> <span class="token function">PutStream</span><span class="token punctuation">(</span><span class="token keyword">stream</span> <span class="token class-name">StreamReqData</span><span class="token punctuation">)</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token class-name">StreamResData</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 客户端流模式</span>  <span class="token keyword">rpc</span> <span class="token function">AllStream</span><span class="token punctuation">(</span><span class="token keyword">stream</span> <span class="token class-name">StreamReqData</span><span class="token punctuation">)</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token keyword">stream</span> <span class="token class-name">StreamResData</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 双向流模式</span><span class="token punctuation">}</span><span class="token keyword">message</span> <span class="token class-name">StreamReqData</span> <span class="token punctuation">{</span>  <span class="token builtin">string</span>  data <span class="token operator">=</span><span class="token number">1</span> <span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">message</span> <span class="token class-name">StreamResData</span> <span class="token punctuation">{</span>  <span class="token builtin">string</span> data <span class="token operator">=</span><span class="token number">1</span> <span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="生成grpc-go文件"><a href="#生成grpc-go文件" class="headerlink" title="生成grpc-go文件"></a>生成grpc-go文件</h5><blockquote><p> protoc -I . –go_out=. stream.proto –go-grpc_out=. stream.proto</p></blockquote><h4 id=""><a href="#" class="headerlink" title=""></a></h4><h4 id="2-单向调用"><a href="#2-单向调用" class="headerlink" title="2. 单向调用"></a>2. 单向调用</h4><h5 id="服务端代码："><a href="#服务端代码：" class="headerlink" title="服务端代码："></a>服务端代码：</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"context"</span><span class="token string">"fmt"</span><span class="token string">"log"</span><span class="token string">"net"</span><span class="token string">"google.golang.org/grpc"</span>pb <span class="token string">"grpc-study/demo2/proto"</span><span class="token punctuation">)</span><span class="token keyword">type</span> server <span class="token keyword">struct</span> <span class="token punctuation">{</span>pb<span class="token punctuation">.</span>UnimplementedGreeterServer<span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>server<span class="token punctuation">)</span> <span class="token function">Single</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> req <span class="token operator">*</span>pb<span class="token punctuation">.</span>StreamReqData<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>pb<span class="token punctuation">.</span>StreamResData<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"server Single 被调用"</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token operator">&amp;</span>pb<span class="token punctuation">.</span>StreamResData<span class="token punctuation">{</span>Data<span class="token punctuation">:</span> req<span class="token punctuation">.</span>Data <span class="token operator">+</span> <span class="token string">"from server"</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>listen<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Listen</span><span class="token punctuation">(</span><span class="token string">"tcp"</span><span class="token punctuation">,</span> <span class="token string">":9090"</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">}</span>s <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">NewServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pb<span class="token punctuation">.</span><span class="token function">RegisterGreeterServer</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token operator">&amp;</span>server<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">// 4、创建监听</span>err <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">Serve</span><span class="token punctuation">(</span>listen<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="客户端代码"><a href="#客户端代码" class="headerlink" title="客户端代码"></a>客户端代码</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"context"</span><span class="token string">"fmt"</span><span class="token string">"log"</span><span class="token string">"google.golang.org/grpc"</span><span class="token string">"google.golang.org/grpc/credentials/insecure"</span>pb <span class="token string">"grpc-study/demo2/proto"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// 1、创建一个链接</span>conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span><span class="token string">"localhost:9090"</span><span class="token punctuation">,</span> grpc<span class="token punctuation">.</span><span class="token function">WithTransportCredentials</span><span class="token punctuation">(</span>insecure<span class="token punctuation">.</span><span class="token function">NewCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">defer</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 2、创建一个客户端</span>client <span class="token operator">:=</span> pb<span class="token punctuation">.</span><span class="token function">NewGreeterClient</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span>StreamReqData <span class="token operator">:=</span> <span class="token operator">&amp;</span>pb<span class="token punctuation">.</span>StreamReqData<span class="token punctuation">{</span><span class="token punctuation">}</span>StreamReqData<span class="token punctuation">.</span>Data <span class="token operator">=</span> <span class="token string">"client single func "</span>res<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">Single</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> StreamReqData<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span><span class="token string">"single call fail "</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">}</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Single call res :"</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/grpc/1.gogrpc/image%20(6).png" class="" title="image (6)"><h4 id="3-客户端流模式"><a href="#3-客户端流模式" class="headerlink" title="3. 客户端流模式"></a>3. 客户端流模式</h4><h5 id="服务端代码：-1"><a href="#服务端代码：-1" class="headerlink" title="服务端代码："></a>服务端代码：</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"fmt"</span><span class="token string">"log"</span><span class="token string">"net"</span><span class="token string">"google.golang.org/grpc"</span>pb <span class="token string">"grpc-study/demo2/proto"</span><span class="token punctuation">)</span><span class="token keyword">type</span> server <span class="token keyword">struct</span> <span class="token punctuation">{</span>pb<span class="token punctuation">.</span>UnimplementedGreeterServer<span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>server<span class="token punctuation">)</span> <span class="token function">PutStream</span><span class="token punctuation">(</span>clientdata pb<span class="token punctuation">.</span>Greeter_PutStreamServer<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"server PutStream 被调用"</span><span class="token punctuation">)</span><span class="token keyword">for</span> <span class="token punctuation">{</span>a<span class="token punctuation">,</span> err <span class="token operator">:=</span> clientdata<span class="token punctuation">.</span><span class="token function">Recv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">}</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>listen<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Listen</span><span class="token punctuation">(</span><span class="token string">"tcp"</span><span class="token punctuation">,</span> <span class="token string">":9090"</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">}</span>s <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">NewServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pb<span class="token punctuation">.</span><span class="token function">RegisterGreeterServer</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token operator">&amp;</span>server<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">// 4、创建监听</span>err <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">Serve</span><span class="token punctuation">(</span>listen<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="客户端代码-1"><a href="#客户端代码-1" class="headerlink" title="客户端代码"></a>客户端代码</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"context"</span><span class="token string">"fmt"</span><span class="token string">"log"</span><span class="token string">"google.golang.org/grpc"</span><span class="token string">"google.golang.org/grpc/credentials/insecure"</span>pb <span class="token string">"grpc-study/demo2/proto"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// 1、创建一个链接</span>conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span><span class="token string">"localhost:9090"</span><span class="token punctuation">,</span> grpc<span class="token punctuation">.</span><span class="token function">WithTransportCredentials</span><span class="token punctuation">(</span>insecure<span class="token punctuation">.</span><span class="token function">NewCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">defer</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 2、创建一个客户端</span>client <span class="token operator">:=</span> pb<span class="token punctuation">.</span><span class="token function">NewGreeterClient</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span>StreamReqData <span class="token operator">:=</span> <span class="token operator">&amp;</span>pb<span class="token punctuation">.</span>StreamReqData<span class="token punctuation">{</span><span class="token punctuation">}</span>putres<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">PutStream</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>StreamReqData<span class="token punctuation">.</span>Data <span class="token operator">=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"NO：%d, 客户端流模式"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"向服务端发送"</span><span class="token punctuation">,</span> StreamReqData<span class="token punctuation">.</span>Data<span class="token punctuation">)</span>err <span class="token operator">:=</span> putres<span class="token punctuation">.</span><span class="token function">Send</span><span class="token punctuation">(</span>StreamReqData<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span><span class="token string">"向服务端发送数据失败"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/grpc/1.gogrpc/1672997703690-b9fab1c9-62af-4282-bed9-2a5bf489e6c6.png" class="" title="image.png"><h4 id="4-服务端流模式"><a href="#4-服务端流模式" class="headerlink" title="4. 服务端流模式"></a>4. 服务端流模式</h4><h5 id="服务端代码：-2"><a href="#服务端代码：-2" class="headerlink" title="服务端代码："></a>服务端代码：</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"fmt"</span><span class="token string">"log"</span><span class="token string">"net"</span><span class="token string">"time"</span><span class="token string">"google.golang.org/grpc"</span>pb <span class="token string">"grpc-study/demo2/proto"</span><span class="token punctuation">)</span><span class="token keyword">type</span> server <span class="token keyword">struct</span> <span class="token punctuation">{</span>pb<span class="token punctuation">.</span>UnimplementedGreeterServer<span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>server<span class="token punctuation">)</span> <span class="token function">GetStream</span><span class="token punctuation">(</span>req <span class="token operator">*</span>pb<span class="token punctuation">.</span>StreamReqData<span class="token punctuation">,</span> res pb<span class="token punctuation">.</span>Greeter_GetStreamServer<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"server GetStream 被调用"</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>err <span class="token operator">:=</span> res<span class="token punctuation">.</span><span class="token function">Send</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>pb<span class="token punctuation">.</span>StreamResData<span class="token punctuation">{</span>Data<span class="token punctuation">:</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"%v"</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Unix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span><span class="token string">"send err"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">}</span>time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>listen<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Listen</span><span class="token punctuation">(</span><span class="token string">"tcp"</span><span class="token punctuation">,</span> <span class="token string">":9090"</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">}</span>s <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">NewServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pb<span class="token punctuation">.</span><span class="token function">RegisterGreeterServer</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token operator">&amp;</span>server<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">// 4、创建监听</span>err <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">Serve</span><span class="token punctuation">(</span>listen<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="客户端代码-2"><a href="#客户端代码-2" class="headerlink" title="客户端代码"></a>客户端代码</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"context"</span><span class="token string">"fmt"</span><span class="token string">"io"</span><span class="token string">"log"</span><span class="token string">"google.golang.org/grpc"</span><span class="token string">"google.golang.org/grpc/credentials/insecure"</span>pb <span class="token string">"grpc-study/demo2/proto"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// 1、创建一个链接</span>conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span><span class="token string">"localhost:9090"</span><span class="token punctuation">,</span> grpc<span class="token punctuation">.</span><span class="token function">WithTransportCredentials</span><span class="token punctuation">(</span>insecure<span class="token punctuation">.</span><span class="token function">NewCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">defer</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 2、创建一个客户端</span>client <span class="token operator">:=</span> pb<span class="token punctuation">.</span><span class="token function">NewGreeterClient</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span>StreamReqData <span class="token operator">:=</span> <span class="token operator">&amp;</span>pb<span class="token punctuation">.</span>StreamReqData<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment">//服务端流模式</span>res<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">TODO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> StreamReqData<span class="token punctuation">)</span><span class="token keyword">for</span> <span class="token punctuation">{</span>data<span class="token punctuation">,</span> err <span class="token operator">:=</span> res<span class="token punctuation">.</span><span class="token function">Recv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span><span class="token keyword">if</span> err <span class="token operator">==</span> io<span class="token punctuation">.</span>EOF <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"服务端传输结束"</span><span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">}</span>log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">}</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/grpc/1.gogrpc/1672997907192-3fe6504a-ed59-428d-94da-f3da58026c8c.png" class="" title="image.png"><h4 id="4-双向流模式"><a href="#4-双向流模式" class="headerlink" title="4. 双向流模式"></a>4. 双向流模式</h4><h5 id="服务端代码：-3"><a href="#服务端代码：-3" class="headerlink" title="服务端代码："></a>服务端代码：</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"fmt"</span><span class="token string">"log"</span><span class="token string">"net"</span><span class="token string">"sync"</span><span class="token string">"time"</span><span class="token string">"google.golang.org/grpc"</span>pb <span class="token string">"grpc-study/demo2/proto"</span><span class="token punctuation">)</span><span class="token keyword">type</span> server <span class="token keyword">struct</span> <span class="token punctuation">{</span>pb<span class="token punctuation">.</span>UnimplementedGreeterServer<span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>server<span class="token punctuation">)</span> <span class="token function">AllStream</span><span class="token punctuation">(</span>alldata pb<span class="token punctuation">.</span>Greeter_AllStreamServer<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"server AllStream 被调用"</span><span class="token punctuation">)</span>wg <span class="token operator">:=</span> sync<span class="token punctuation">.</span>WaitGroup<span class="token punctuation">{</span><span class="token punctuation">}</span>wg<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">defer</span> wg<span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">defer</span> wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>data<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> alldata<span class="token punctuation">.</span><span class="token function">Recv</span><span class="token punctuation">(</span><span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"AllStream收到客户端消息"</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">defer</span> wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span><span class="token boolean">_</span> <span class="token operator">=</span> alldata<span class="token punctuation">.</span><span class="token function">Send</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>pb<span class="token punctuation">.</span>StreamResData<span class="token punctuation">{</span>Data<span class="token punctuation">:</span> <span class="token string">"我是服务器"</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>listen<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Listen</span><span class="token punctuation">(</span><span class="token string">"tcp"</span><span class="token punctuation">,</span> <span class="token string">":9090"</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">}</span>s <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">NewServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pb<span class="token punctuation">.</span><span class="token function">RegisterGreeterServer</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token operator">&amp;</span>server<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">// 4、创建监听</span>err <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">Serve</span><span class="token punctuation">(</span>listen<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="客户端代码-3"><a href="#客户端代码-3" class="headerlink" title="客户端代码"></a>客户端代码</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"context"</span><span class="token string">"fmt"</span><span class="token string">"sync"</span><span class="token string">"time"</span><span class="token string">"google.golang.org/grpc"</span><span class="token string">"google.golang.org/grpc/credentials/insecure"</span>pb <span class="token string">"grpc-study/demo2/proto"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">AllStream</span><span class="token punctuation">(</span>client pb<span class="token punctuation">.</span>GreeterClient<span class="token punctuation">,</span> StreamReqData <span class="token operator">*</span>pb<span class="token punctuation">.</span>StreamReqData<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//双向流模式</span>allstream<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">AllStream</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>wg <span class="token operator">:=</span> sync<span class="token punctuation">.</span>WaitGroup<span class="token punctuation">{</span><span class="token punctuation">}</span>wg<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">defer</span> wg<span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">defer</span> wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>StreamResData<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> allstream<span class="token punctuation">.</span><span class="token function">Recv</span><span class="token punctuation">(</span><span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"AllStream收到服务端消息"</span><span class="token punctuation">,</span> StreamResData<span class="token punctuation">.</span>Data<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">defer</span> wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>StreamReqData<span class="token punctuation">.</span>Data <span class="token operator">=</span> <span class="token string">"AllStream：我是客户端"</span><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span><span class="token boolean">_</span> <span class="token operator">=</span> allstream<span class="token punctuation">.</span><span class="token function">Send</span><span class="token punctuation">(</span>StreamReqData<span class="token punctuation">)</span>time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>wg<span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// 1、创建一个链接</span>conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span><span class="token string">"localhost:9090"</span><span class="token punctuation">,</span> grpc<span class="token punctuation">.</span><span class="token function">WithTransportCredentials</span><span class="token punctuation">(</span>insecure<span class="token punctuation">.</span><span class="token function">NewCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">defer</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 2、创建一个客户端</span>client <span class="token operator">:=</span> pb<span class="token punctuation">.</span><span class="token function">NewGreeterClient</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span>StreamReqData <span class="token operator">:=</span> <span class="token operator">&amp;</span>pb<span class="token punctuation">.</span>StreamReqData<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token function">AllStream</span><span class="token punctuation">(</span>client<span class="token punctuation">,</span> StreamReqData<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/grpc/1.gogrpc/1672998135689-3142398e-1463-4830-a8af-edfca29db4ee.png" class="" title="image.png"><h4 id="5-grpc中的metadata"><a href="#5-grpc中的metadata" class="headerlink" title="5.grpc中的metadata"></a>5.grpc中的metadata</h4><blockquote><p>gRPC让我们可以像本地调用一样实现远程调用，对于每一次的RPC调用中，都可能会有一些有用的数据，而这些数据就可以通过metadata来传递。metadata是以key-value的形式存储数据的，其中key是string类型，而value是[]string，即一个字符串数组类型。metadata使得client和server能够为对方提供关于本次调用的一些信息，就像一次http请求的RequestHeader和ResponseHeader一样。http中header的生命周周期是一次http请求，那么metadata的生命周期就是一次RPC调用。</p></blockquote><h5 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a><strong>服务端</strong></h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token punctuation">(</span>h <span class="token operator">*</span>HelloServer<span class="token punctuation">)</span><span class="token function">SayHello</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span>req <span class="token operator">*</span>metadatademo<span class="token punctuation">.</span>HelloRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>metadatademo<span class="token punctuation">.</span>HelloReply<span class="token punctuation">,</span><span class="token builtin">error</span><span class="token punctuation">)</span><span class="token punctuation">{</span>md <span class="token punctuation">,</span> ok <span class="token operator">:=</span> metadata<span class="token punctuation">.</span><span class="token function">FromIncomingContext</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"获取md失败"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">if</span> name<span class="token punctuation">,</span>ok <span class="token operator">:=</span> md<span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>ok <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>name<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment">//for key,val := range md {</span><span class="token comment">//fmt.Println(key,val)</span><span class="token comment">//}</span><span class="token keyword">return</span> <span class="token operator">&amp;</span>metadatademo<span class="token punctuation">.</span>HelloReply<span class="token punctuation">{</span>Message<span class="token punctuation">:</span>  <span class="token string">"Hello "</span> <span class="token operator">+</span> req<span class="token punctuation">.</span>Name<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token boolean">nil</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a><strong>客户端</strong></h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//md := metadata.Pairs("timestamp",time.Now().Format(timeformat))</span>    lis <span class="token punctuation">,</span><span class="token boolean">_</span> <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:8081"</span><span class="token punctuation">,</span>grpc<span class="token punctuation">.</span><span class="token function">WithInsecure</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    client <span class="token operator">:=</span> metadatademo<span class="token punctuation">.</span><span class="token function">NewHelloServiceClient</span><span class="token punctuation">(</span>lis<span class="token punctuation">)</span>    req <span class="token operator">:=</span> metadatademo<span class="token punctuation">.</span>HelloRequest<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">"chenteng"</span><span class="token punctuation">}</span>    md <span class="token operator">:=</span> metadata<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span>        <span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"chenteng"</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    ctx <span class="token operator">:=</span> metadata<span class="token punctuation">.</span><span class="token function">NewOutgoingContext</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>md<span class="token punctuation">)</span>    res<span class="token punctuation">,</span><span class="token boolean">_</span> <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">SayHello</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span><span class="token operator">&amp;</span>req<span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="6-grpc中使用拦截器传递metadata"><a href="#6-grpc中使用拦截器传递metadata" class="headerlink" title="6. grpc中使用拦截器传递metadata"></a>6. grpc中使用<a href="https://so.csdn.net/so/search?q=%E6%8B%A6%E6%88%AA%E5%99%A8&amp;spm=1001.2101.3001.7020">拦截器</a>传递metadata</h4><blockquote><p>在Grpc中可使用拦截器来进行服务鉴权，在收到请求之前就对metadata中进行校验，斌不会侵入我们的业务代码</p></blockquote><h5 id="服务端-1"><a href="#服务端-1" class="headerlink" title="服务端"></a><strong>服务端</strong></h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"context"</span><span class="token string">"errors"</span><span class="token string">"fmt"</span><span class="token string">"google.golang.org/grpc"</span><span class="token string">"google.golang.org/grpc/metadata"</span><span class="token string">"log"</span><span class="token string">"mygrpc/protodemo"</span><span class="token string">"net"</span><span class="token string">"time"</span><span class="token punctuation">)</span><span class="token keyword">type</span> HelloServer <span class="token keyword">struct</span> <span class="token punctuation">{</span>protodemo<span class="token punctuation">.</span>UnimplementedHelloServiceServer<span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>h <span class="token operator">*</span>HelloServer<span class="token punctuation">)</span> <span class="token function">SayHello</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> req <span class="token operator">*</span>protodemo<span class="token punctuation">.</span>HelloRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>protodemo<span class="token punctuation">.</span>HelloReply<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token operator">&amp;</span>protodemo<span class="token punctuation">.</span>HelloReply<span class="token punctuation">{</span>Message<span class="token punctuation">:</span> <span class="token string">"Hello "</span> <span class="token operator">+</span> req<span class="token punctuation">.</span>Name<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>Interceptor <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> req <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> info <span class="token operator">*</span>grpc<span class="token punctuation">.</span>UnaryServerInfo<span class="token punctuation">,</span> handler grpc<span class="token punctuation">.</span>UnaryHandler<span class="token punctuation">)</span> <span class="token punctuation">(</span>resp <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> md<span class="token punctuation">,</span> ok <span class="token operator">:=</span> metadata<span class="token punctuation">.</span><span class="token function">FromIncomingContext</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"获取认证信息失败"</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"获取认证信息失败"</span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token keyword">if</span> value<span class="token punctuation">,</span> ok <span class="token operator">:=</span> md<span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"认证信息中未存放name相关信息"</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"认证信息中未存放name相关信息"</span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"客户端访问，name = "</span><span class="token punctuation">,</span> value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span>starttime <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>res<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">handler</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> req<span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"请求已完成，耗时："</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span><span class="token function">Since</span><span class="token punctuation">(</span>starttime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> res<span class="token punctuation">,</span> err<span class="token punctuation">}</span>md <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">UnaryInterceptor</span><span class="token punctuation">(</span>Interceptor<span class="token punctuation">)</span>server <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">NewServer</span><span class="token punctuation">(</span>md<span class="token punctuation">)</span>protodemo<span class="token punctuation">.</span><span class="token function">RegisterHelloServiceServer</span><span class="token punctuation">(</span>server<span class="token punctuation">,</span> <span class="token operator">&amp;</span>HelloServer<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>lis<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Listen</span><span class="token punctuation">(</span><span class="token string">"tcp"</span><span class="token punctuation">,</span> <span class="token string">":7789"</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">}</span><span class="token boolean">_</span> <span class="token operator">=</span> server<span class="token punctuation">.</span><span class="token function">Serve</span><span class="token punctuation">(</span>lis<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="客户端-1"><a href="#客户端-1" class="headerlink" title="客户端"></a><strong>客户端</strong></h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"context"</span><span class="token string">"fmt"</span><span class="token string">"google.golang.org/grpc"</span><span class="token string">"mygrpc/protodemo"</span><span class="token punctuation">)</span><span class="token keyword">type</span> customCredential <span class="token keyword">struct</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>customCredential<span class="token punctuation">)</span><span class="token function">GetRequestMetadata</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> uri <span class="token operator">...</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"chenteng"</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token boolean">nil</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>customCredential<span class="token punctuation">)</span><span class="token function">RequireTransportSecurity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">bool</span><span class="token punctuation">{</span><span class="token comment">//是否启用安全模式</span><span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//使用更简单的方式传递md</span>op <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">WithPerRPCCredentials</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>customCredential<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>conn<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:7789"</span><span class="token punctuation">,</span> grpc<span class="token punctuation">.</span><span class="token function">WithInsecure</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> op<span class="token punctuation">)</span>client <span class="token operator">:=</span> protodemo<span class="token punctuation">.</span><span class="token function">NewHelloServiceClient</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span>req <span class="token operator">:=</span> protodemo<span class="token punctuation">.</span>HelloRequest<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">"chenteng"</span><span class="token punctuation">}</span>res<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">SayHello</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>req<span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="7-GRPC返回报错状态码与内容"><a href="#7-GRPC返回报错状态码与内容" class="headerlink" title="7.GRPC返回报错状态码与内容"></a>7.GRPC返回报错状态码与内容</h4><blockquote><p>在开发过程中，我们可以使用grpc下面的status包来返回类似于http中的404,500之类的错误状态码，可以方便我们排查问题，光有状态码是不够的，需要携带一下报错信息，下面是client与server的具体实现</p></blockquote><h5 id="服务端-2"><a href="#服务端-2" class="headerlink" title="服务端"></a><strong>服务端</strong></h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"context"</span><span class="token string">"google.golang.org/grpc"</span><span class="token string">"google.golang.org/grpc/codes"</span><span class="token string">"google.golang.org/grpc/status"</span><span class="token string">"log"</span><span class="token string">"mygrpc/protodemo"</span><span class="token string">"net"</span><span class="token punctuation">)</span><span class="token keyword">type</span> HelloServer <span class="token keyword">struct</span> <span class="token punctuation">{</span>protodemo<span class="token punctuation">.</span>UnimplementedHelloServiceServer<span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>h <span class="token operator">*</span>HelloServer<span class="token punctuation">)</span> <span class="token function">SayHello</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> req <span class="token operator">*</span>protodemo<span class="token punctuation">.</span>HelloRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>protodemo<span class="token punctuation">.</span>HelloReply<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span>status<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>Internal<span class="token punctuation">,</span><span class="token string">"内部错误"</span><span class="token punctuation">)</span><span class="token comment">//return &amp;protodemo.HelloReply{</span><span class="token comment">//Message: "Hello " + req.Name,</span><span class="token comment">//}, nil</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>server <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">NewServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>protodemo<span class="token punctuation">.</span><span class="token function">RegisterHelloServiceServer</span><span class="token punctuation">(</span>server<span class="token punctuation">,</span> <span class="token operator">&amp;</span>HelloServer<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>lis<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Listen</span><span class="token punctuation">(</span><span class="token string">"tcp"</span><span class="token punctuation">,</span> <span class="token string">":7790"</span><span class="token punctuation">)</span><span class="token keyword">defer</span> lis<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">}</span><span class="token boolean">_</span> <span class="token operator">=</span> server<span class="token punctuation">.</span><span class="token function">Serve</span><span class="token punctuation">(</span>lis<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="客户端-2"><a href="#客户端-2" class="headerlink" title="客户端"></a><strong>客户端</strong></h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"context"</span><span class="token string">"fmt"</span><span class="token string">"google.golang.org/grpc"</span><span class="token string">"google.golang.org/grpc/status"</span><span class="token string">"mygrpc/protodemo"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>lis<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:7789"</span><span class="token punctuation">,</span> grpc<span class="token punctuation">.</span><span class="token function">WithInsecure</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>client <span class="token operator">:=</span> protodemo<span class="token punctuation">.</span><span class="token function">NewHelloServiceClient</span><span class="token punctuation">(</span>lis<span class="token punctuation">)</span>req <span class="token operator">:=</span> protodemo<span class="token punctuation">.</span>HelloRequest<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">"chenteng"</span><span class="token punctuation">}</span>res<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">SayHello</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>req<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span><span class="token keyword">if</span> statusinfo<span class="token punctuation">,</span>ok <span class="token operator">:=</span> status<span class="token punctuation">.</span><span class="token function">FromError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>ok <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>statusinfo<span class="token punctuation">.</span><span class="token function">Code</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>statusinfo<span class="token punctuation">.</span><span class="token function">Message</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参考原文链接[陈小c]：<a href="https://blog.csdn.net/weixin_43143310/article/details/125064588">https://blog.csdn.net/weixin_43143310/article/details/125064588</a></p>]]></content>
      
      
      <categories>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> grpc </tag>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Gomock 进行单元测试</title>
      <link href="/go/shi-yong-gomock-jin-xing-dan-yuan-ce-shi.html"/>
      <url>/go/shi-yong-gomock-jin-xing-dan-yuan-ce-shi.html</url>
      
        <content type="html"><![CDATA[<p>在实际项目中，需要进行单元测试的时候。却往往发现有一大堆依赖项。这时候就是 <a href="https://github.com/golang/mock">Gomock</a> 大显身手的时候了<br>Gomock 是 Go 语言的一个 mock 框架，官方的那种 🤪</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ go get <span class="token parameter variable">-u</span> github.com/golang/mock/gomock$ go <span class="token function">install</span> github.com/golang/mock/mockgen<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol><li>第一步：我们将安装 gomock 第三方库和 mock 代码的生成工具 mockgen。而后者可以大大的节省我们的工作量。只需要了解其使用方式就可以</li><li>第二步：输入 mockgen 验证代码生成工具是否安装正确。若无法正常响应，请检查 bin 目录下是否包含该二进制文件</li></ol><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><p>在 mockgen 命令中，支持两种生成模式：</p><ul><li>source：从源文件生成 mock 接口（通过 -source 启用）<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mockgen <span class="token parameter variable">-source</span><span class="token operator">=</span>foo.go <span class="token punctuation">[</span>other options<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="写测试用例"><a href="#写测试用例" class="headerlink" title="写测试用例"></a>写测试用例</h2><p>在本文将模拟一个简单 Demo 来编写测试用例，熟悉整体的测试流程</p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol><li>想清楚整体逻辑</li><li>定义想要（模拟）依赖项的 interface（接口）</li><li>使用 mockgen 命令对所需 mock 的 interface 生成 mock 文件</li><li>编写单元测试的逻辑，在测试中使用 mock</li><li>进行单元测试的验证</li></ol><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">├── mock├── person│   └── male.go└── user    ├── user.go    └── user_test.go<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="编写"><a href="#编写" class="headerlink" title="编写"></a>编写</h3><h4 id="interface-方法"><a href="#interface-方法" class="headerlink" title="interface 方法"></a>interface 方法</h4><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> person<span class="token keyword">type</span> Male <span class="token keyword">interface</span> <span class="token punctuation">{</span>    <span class="token function">Get</span><span class="token punctuation">(</span>id <span class="token builtin">int64</span><span class="token punctuation">)</span> <span class="token builtin">error</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="调用方法"><a href="#调用方法" class="headerlink" title="调用方法"></a>调用方法</h4><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> user<span class="token keyword">import</span> <span class="token string">"github.com/EDDYCJY/mockd/person"</span><span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>    Person person<span class="token punctuation">.</span>Male<span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">NewUser</span><span class="token punctuation">(</span>p person<span class="token punctuation">.</span>Male<span class="token punctuation">)</span> <span class="token operator">*</span>User <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>User<span class="token punctuation">{</span>Person<span class="token punctuation">:</span> p<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>u <span class="token operator">*</span>User<span class="token punctuation">)</span> <span class="token function">GetUserInfo</span><span class="token punctuation">(</span>id <span class="token builtin">int64</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> u<span class="token punctuation">.</span>Person<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="生成-mock-文件"><a href="#生成-mock-文件" class="headerlink" title="生成 mock 文件"></a>生成 mock 文件</h4><p>回到 mockd/ 的根目录下，执行以下命令</p><pre class="line-numbers language-go" data-language="go"><code class="language-go">$ mockgen <span class="token operator">-</span>source<span class="token operator">=</span><span class="token punctuation">.</span><span class="token operator">/</span>person<span class="token operator">/</span>male<span class="token punctuation">.</span><span class="token keyword">go</span> <span class="token operator">-</span>destination<span class="token operator">=</span><span class="token punctuation">.</span><span class="token operator">/</span>mock<span class="token operator">/</span>male_mock<span class="token punctuation">.</span><span class="token keyword">go</span> <span class="token operator">-</span><span class="token keyword">package</span><span class="token operator">=</span>mock<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在执行完毕后，可以发现 mock/ 目录下多出了 male_mock.go 文件，这就是 mock 文件。那么命令中的指令又分别有什么用呢？如下：</p><ul><li>-source：设置需要模拟（mock）的接口文件</li><li>-destination：设置 mock 文件输出的地方，若不设置则打印到标准输出中</li><li>-package：设置 mock 文件的包名，若不设置则为 mock_ 前缀加上文件名（如本文的包名会为 mock_person）</li></ul><p>想了解更多的指令符，可参见 <a href="https://github.com/golang/mock#running-mockgen">官方文档</a></p><h4 id="测试用例"><a href="#测试用例" class="headerlink" title="测试用例"></a>测试用例</h4><p>打开 user/user_test.go 文件，写入以下内容：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> user<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"testing"</span>    <span class="token string">"github.com/EDDYCJY/mockd/mock"</span>    <span class="token string">"github.com/golang/mock/gomock"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">TestUser_GetUserInfo</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>    ctl <span class="token operator">:=</span> gomock<span class="token punctuation">.</span><span class="token function">NewController</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>    <span class="token keyword">defer</span> ctl<span class="token punctuation">.</span><span class="token function">Finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> id <span class="token builtin">int64</span> <span class="token operator">=</span> <span class="token number">1</span>    mockMale <span class="token operator">:=</span> mock<span class="token punctuation">.</span><span class="token function">NewMockMale</span><span class="token punctuation">(</span>ctl<span class="token punctuation">)</span>    gomock<span class="token punctuation">.</span><span class="token function">InOrder</span><span class="token punctuation">(</span>        mockMale<span class="token punctuation">.</span><span class="token function">EXPECT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Return</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span>    user <span class="token operator">:=</span> <span class="token function">NewUser</span><span class="token punctuation">(</span>mockMale<span class="token punctuation">)</span>    err <span class="token operator">:=</span> user<span class="token punctuation">.</span><span class="token function">GetUserInfo</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        t<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"user.GetUserInfo err: %v"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>gomock.NewController：返回 gomock.Controller，它代表 mock 生态系统中的顶级控件。定义了 mock 对象的范围、生命周期和期待值。另外它在多个 goroutine 中是安全的</li><li>mock.NewMockMale：创建一个新的 mock 实例</li><li>gomock.InOrder：声明给定的调用应按顺序进行（是对 gomock.After 的二次封装）</li><li>mockMale.EXPECT().Get(id).Return(nil)：这里有三个步骤，EXPECT()返回一个允许调用者设置<strong>期望</strong>和<strong>返回值</strong>的对象。Get(id) 是设置入参并调用 mock 实例中的方法。Return(nil) 是设置先前调用的方法出参。简单来说，就是设置入参并调用，最后设置返回值</li><li>NewUser(mockMale)：创建 User 实例，值得注意的是，在这里<strong>注入了 mock 对象</strong>，因此实际在随后的 user.GetUserInfo(id) 调用（入参：id 为 1）中。它调用的是我们事先模拟好的 mock 方法</li><li>ctl.Finish()：进行 mock 用例的期望值断言，一般会使用 defer 延迟执行，以防止我们忘记这一操作</li></ol><h2 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h2><h3 id="一、常用-mock-方法"><a href="#一、常用-mock-方法" class="headerlink" title="一、常用 mock 方法"></a>一、常用 mock 方法</h3><h4 id="调用方法-1"><a href="#调用方法-1" class="headerlink" title="调用方法"></a>调用方法</h4><ul><li>Call.Do()：声明在匹配时要运行的操作</li><li>Call.DoAndReturn()：声明在匹配调用时要运行的操作，并且模拟返回该函数的返回值</li><li>Call.MaxTimes()：设置最大的调用次数为 n 次</li><li>Call.MinTimes()：设置最小的调用次数为 n 次</li><li>Call.AnyTimes()：允许调用次数为 0 次或更多次</li><li>Call.Times()：设置调用次数为 n 次</li></ul><h4 id="参数匹配"><a href="#参数匹配" class="headerlink" title="参数匹配"></a>参数匹配</h4><ul><li>gomock.Any()：匹配任意值</li><li>gomock.Eq()：通过反射匹配到指定的类型值，而不需要手动设置</li><li>gomock.Nil()：返回 nil</li></ul><p>建议更多的方法可参见 <a href="https://godoc.org/github.com/golang/mock/gomock#pkg-index">官方文档</a></p><h3 id="二、生成多个-mock-文件"><a href="#二、生成多个-mock-文件" class="headerlink" title="二、生成多个 mock 文件"></a>二、生成多个 mock 文件</h3><p>你可能会想一条条命令生成 mock 文件，岂不得崩溃？<br>当然，官方提供了更方便的方式，我们可以利用 go:generate 来完成批量处理的功能</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">go</span> generate <span class="token punctuation">[</span><span class="token operator">-</span>run regexp<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span>n<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span>v<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span>x<span class="token punctuation">]</span> <span class="token punctuation">[</span>build flags<span class="token punctuation">]</span> <span class="token punctuation">[</span>file<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token operator">...</span> <span class="token operator">|</span> packages<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> person<span class="token comment">//go:generate mockgen -destination=../mock/male_mock.go -package=mock github.com/EDDYCJY/mockd/person Male</span><span class="token keyword">type</span> Male <span class="token keyword">interface</span> <span class="token punctuation">{</span>    <span class="token function">Get</span><span class="token punctuation">(</span>id <span class="token builtin">int64</span><span class="token punctuation">)</span> <span class="token builtin">error</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们关注到 go:generate 这条语句，可分为以下部分：</p><blockquote><p>1.声明 //go:generate （注意不要留空格）<br>2.使用 mockgen 命令<br>3.定义 -destination<br>4.定义 -package<br>5.定义 source，此处为 person 的包路径<br>6.定义 interfaces，此处为 Male</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pipeline流水线构建</title>
      <link href="/devops/pipeline-liu-shui-xian-gou-jian.html"/>
      <url>/devops/pipeline-liu-shui-xian-gou-jian.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-流水线创建"><a href="#1-流水线创建" class="headerlink" title="1.流水线创建"></a>1.流水线创建</h2><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1638871282715-4a1c8bbc-9f30-44c6-884b-e498d8d1f785.png#clientId=u9eca6b11-0ad6-4&amp;from=paste&amp;height=882&amp;id=u3bd4b01d&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=882&amp;originWidth=1477&amp;originalType=binary&amp;ratio=1&amp;size=85365&amp;status=done&amp;style=none&amp;taskId=uaf734b5d-dd31-4d97-ac07-82ac5735de0&amp;width=1477" alt="image.png"></p><h2 id="2-创建秘钥"><a href="#2-创建秘钥" class="headerlink" title="2.创建秘钥"></a>2.创建秘钥</h2><h4 id="2-1通过http账号密码方式"><a href="#2-1通过http账号密码方式" class="headerlink" title="2.1通过http账号密码方式"></a>2.1通过http账号密码方式</h4><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1638871373088-c0c502c6-4cdd-4d1a-b7cc-a6bcca6bcdcc.png#clientId=u9eca6b11-0ad6-4&amp;from=paste&amp;height=574&amp;id=u89e928f6&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=574&amp;originWidth=1847&amp;originalType=binary&amp;ratio=1&amp;size=45631&amp;status=done&amp;style=none&amp;taskId=u74315913-662c-4566-9b6f-84ffda22345&amp;width=1847" alt="image.png"></p><h4 id="2-2通过ssh方式"><a href="#2-2通过ssh方式" class="headerlink" title="2.2通过ssh方式"></a>2.2通过ssh方式</h4><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1638871410993-6a1076ff-c438-4385-bb2b-cb84254985ac.png#clientId=u9eca6b11-0ad6-4&amp;from=paste&amp;height=754&amp;id=uf81e8d62&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=754&amp;originWidth=1669&amp;originalType=binary&amp;ratio=1&amp;size=48259&amp;status=done&amp;style=none&amp;taskId=u0c922898-0857-40da-9c30-6ecc53d990c&amp;width=1669" alt="image.png"></p><h3 id="3-根据脚本构建应用"><a href="#3-根据脚本构建应用" class="headerlink" title="3.根据脚本构建应用"></a>3.根据脚本构建应用</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">def label = "jenkins<span class="token punctuation">-</span>slave"<span class="token key atrule">podTemplate(label</span><span class="token punctuation">:</span> label<span class="token punctuation">,</span> <span class="token key atrule">cloud</span><span class="token punctuation">:</span> <span class="token string">'kubernetes'</span><span class="token punctuation">,</span>)<span class="token punctuation">{</span>node(label) <span class="token punctuation">{</span>        stage('pull code') <span class="token punctuation">{</span>            checkout(<span class="token punctuation">[</span><span class="token key atrule">$class</span><span class="token punctuation">:</span> <span class="token string">'GitSCM'</span><span class="token punctuation">,</span> <span class="token key atrule">branches</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">'*/master'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token key atrule">doGenerateSubmoduleConfigurations</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token punctuation">,</span> <span class="token key atrule">extensions</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token key atrule">submoduleCfg</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token key atrule">userRemoteConfigs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token key atrule">credentialsId</span><span class="token punctuation">:</span> <span class="token string">'6dabf361-4478-47c3-aba9-dc6e3d15795f'</span><span class="token punctuation">,</span> <span class="token key atrule">url</span><span class="token punctuation">:</span> <span class="token string">'https://codeup.aliyun.com/61233c140fc7bf0dbe1e642d/docker-demo.git'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>)        <span class="token punctuation">}</span>        stage('build') <span class="token punctuation">{</span>            echo "开始进行代码编译并推送到镜像仓库"             sh '''              echo $<span class="token punctuation">{</span>IMAGE_VERSION<span class="token punctuation">}</span><span class="token punctuation">-</span>$BUILD_NUMBER<span class="token punctuation">-</span>`git log <span class="token punctuation">-</span>n1 <span class="token punctuation">-</span><span class="token punctuation">-</span>format=format<span class="token punctuation">:</span>%h` <span class="token punctuation">&gt;</span> image_version.txt              cat image_version.txt              echo "测试 Kubernetes 动态生成 jenkins slave"                docker login <span class="token punctuation">-</span>u admin <span class="token punctuation">-</span>p harbor 192.168.56.11<span class="token punctuation">:</span><span class="token number">8084</span>                 mvn clean package <span class="token punctuation">-</span>Dmaven.test.skip=true                    cp /home/jenkins/agent/workspace/pipelineDemo/target/demo.jar ./                                  docker build <span class="token punctuation">-</span>t 192.168.56.11<span class="token punctuation">:</span>8084/demo/$<span class="token punctuation">{</span>IMAGE_NAME<span class="token punctuation">}</span><span class="token punctuation">:</span>`cat image_version.txt`  .                 docker push 192.168.56.11<span class="token punctuation">:</span>8084/demo/$<span class="token punctuation">{</span>IMAGE_NAME<span class="token punctuation">}</span><span class="token punctuation">:</span>`cat image_version.txt`              '''              echo "镜像编译结束"        <span class="token punctuation">}</span>        stage('packageChart') <span class="token punctuation">{</span>            echo "准备开始打chart包，并上传"            sh '''                        helm repo add <span class="token punctuation">-</span><span class="token punctuation">-</span>ca<span class="token punctuation">-</span>file /etc/docker/certs.d/ca.crt <span class="token punctuation">-</span><span class="token punctuation">-</span>username admin <span class="token punctuation">-</span><span class="token punctuation">-</span>password harbor myrepo https<span class="token punctuation">:</span>//192.168.56.11/chartrepo/demo            cp image_version.txt k8s/helm/            cd k8s/helm            sed <span class="token punctuation">-</span>i "s/<span class="token punctuation">{</span><span class="token punctuation">{</span>IMAGE_NAME<span class="token punctuation">}</span><span class="token punctuation">}</span>/$<span class="token punctuation">{</span>IMAGE_NAME<span class="token punctuation">}</span>/g" values.yaml            sed <span class="token punctuation">-</span>i "s/<span class="token punctuation">{</span><span class="token punctuation">{</span>IMAGE_VERSION<span class="token punctuation">}</span><span class="token punctuation">}</span>/`cat image_version.txt`/g" values.yaml            cat values.yaml            sed <span class="token punctuation">-</span>i "s/<span class="token punctuation">{</span><span class="token punctuation">{</span>JENKINS_NUM<span class="token punctuation">}</span><span class="token punctuation">}</span>/$BUILD_NUMBER/g" Chart.yaml            sed <span class="token punctuation">-</span>i "s/<span class="token punctuation">{</span><span class="token punctuation">{</span>CHART_NAME<span class="token punctuation">}</span><span class="token punctuation">}</span>/$<span class="token punctuation">{</span>CHART_NAME<span class="token punctuation">}</span>/g" Chart.yaml            sed <span class="token punctuation">-</span>i "s/<span class="token punctuation">{</span><span class="token punctuation">{</span>CHART_VERSION<span class="token punctuation">}</span><span class="token punctuation">}</span>/$<span class="token punctuation">{</span>CHART_VERSION<span class="token punctuation">}</span>/g" Chart.yaml                        cat Chart.yaml            helm package .            echo $<span class="token punctuation">{</span>CHART_NAME<span class="token punctuation">}</span><span class="token punctuation">-</span>$<span class="token punctuation">{</span>CHART_VERSION<span class="token punctuation">}</span>.$BUILD_NUMBER.tgz <span class="token punctuation">&gt;</span> tgz.txt            cat tgz.txt            curl <span class="token punctuation">-</span><span class="token punctuation">-</span>request POST      <span class="token punctuation">-</span><span class="token punctuation">-</span>form chart=@`cat tgz.txt`      <span class="token punctuation">-</span><span class="token punctuation">-</span>user admin<span class="token punctuation">:</span>harbor      https<span class="token punctuation">:</span>//192.168.56.11/api/chartrepo/demo/charts  <span class="token punctuation">-</span><span class="token punctuation">-</span>cacert /etc/docker/certs.d/ca.crt            '''            echo "打包结束"        <span class="token punctuation">}</span>        stage('deploy') <span class="token punctuation">{</span>            echo "准备开始部署"             sh '''                helm repo add <span class="token punctuation">-</span><span class="token punctuation">-</span>ca<span class="token punctuation">-</span>file /etc/docker/certs.d/ca.crt <span class="token punctuation">-</span><span class="token punctuation">-</span>username admin <span class="token punctuation">-</span><span class="token punctuation">-</span>password harbor myrepo https<span class="token punctuation">:</span>//192.168.56.11/chartrepo/demo                helm repo update                 cd k8s/helmValue                helm upgrade myapp  myrepo/$<span class="token punctuation">{</span>CHART_NAME<span class="token punctuation">}</span> <span class="token punctuation">-</span>n default <span class="token punctuation">-</span><span class="token punctuation">-</span>version $<span class="token punctuation">{</span>CHART_VERSION<span class="token punctuation">}</span>.$BUILD_NUMBER <span class="token punctuation">-</span>f dev.yaml              '''          <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-1代码拉取介绍"><a href="#3-1代码拉取介绍" class="headerlink" title="3.1代码拉取介绍"></a>3.1代码拉取介绍</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">checkout(<span class="token punctuation">[</span><span class="token key atrule">$class</span><span class="token punctuation">:</span> <span class="token string">'GitSCM'</span><span class="token punctuation">,</span> <span class="token key atrule">branches</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">'*/master'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token key atrule">doGenerateSubmoduleConfigurations</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token punctuation">,</span> <span class="token key atrule">extensions</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token key atrule">submoduleCfg</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token key atrule">userRemoteConfigs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token key atrule">credentialsId</span><span class="token punctuation">:</span> <span class="token string">'6dabf361-4478-47c3-aba9-dc6e3d15795f'</span><span class="token punctuation">,</span> <span class="token key atrule">url</span><span class="token punctuation">:</span> <span class="token string">'https://codeup.aliyun.com/61233c140fc7bf0dbe1e642d/docker-demo.git'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>)<span class="token comment"># 1.credentialsId为jenkins配置的秘钥</span><span class="token comment"># 2.url为请求url地址</span><span class="token comment"># 3.若是url使用ssh方式 那么配置的credentialsId也应该为ssh，反之同理</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-2自定义参数使用"><a href="#3-2自定义参数使用" class="headerlink" title="3.2自定义参数使用"></a>3.2自定义参数使用</h4><blockquote><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1638873996476-8aa48375-3dc0-4093-b6e6-752df89ac399.png#clientId=u9eca6b11-0ad6-4&amp;from=paste&amp;height=444&amp;id=uc0c90adc&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=444&amp;originWidth=1392&amp;originalType=binary&amp;ratio=1&amp;size=30996&amp;status=done&amp;style=none&amp;taskId=ub4f54f23-45cb-4c78-a670-6ad3f4f4817&amp;width=1392" alt="image.png"><br>使用方法为 ${CHART_NAME}</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> devops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> devops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建harbor私有镜像仓库</title>
      <link href="/devops/da-jian-harbor-si-you-jing-xiang-cang-ku.html"/>
      <url>/devops/da-jian-harbor-si-you-jing-xiang-cang-ku.html</url>
      
        <content type="html"><![CDATA[<h2 id="通过docker-compost来构建"><a href="#通过docker-compost来构建" class="headerlink" title="通过docker-compost来构建"></a>通过docker-compost来构建</h2><blockquote><p>1.参考地址：<a href="https://blog.csdn.net/submarineas/article/details/112788040">https://blog.csdn.net/submarineas/article/details/112788040</a> 开启https、设置证书位置<br>2.生成证书：<br>openssl genrsa -out ca.key 4096</p></blockquote><blockquote><p>openssl req -x509 -new -nodes -sha512 -days 3650 <br>    -subj “/C=CN/ST=Beijing/L=Beijing/O=chinatelecom/OU=ecloudcaas/CN=192.168.56.11” <br>    -key ca.key <br>    -out ca.crt</p><p>openssl genrsa -out 192.168.56.11.key 4096</p><p>openssl req -sha512 -new <br>    -subj “/C=CN/ST=Beijing/L=Beijing/O=chinatelecom/OU=ecloudcaas/CN=192.168.56.11” <br>    -key 192.168.56.11.key <br>    -out 192.168.56.11.csr </p><p>openssl x509 -req -sha512 -days 3650 <br>    -extfile v3.ext <br>    -CA ca.crt -CAkey ca.key -CAcreateserial <br>    -in 192.168.56.11.csr <br>    -out 192.168.56.11.crt</p><p>openssl x509 -inform PEM -in 192.168.56.11.crt -out 192.168.56.11.cert</p><p>cp 192.168.56.11.cert /etc/docker/cert/192.168.56.11/<br>cp 192.168.56.11.key /etc/docker/cert/192.168.56.11/<br>cp ca.crt /etc/docker/certs.d/   # 后续helm访问都需要使用改证书 </p><p>3.启动服务加上后缀<br>./prepare<br>./install.sh –with-notary –with-clair –with-chartmuseum </p></blockquote>]]></content>
      
      
      <categories>
          
          <category> devops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> devops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建k8s的jenkins集群</title>
      <link href="/devops/da-jian-k8s-de-jenkins-ji-qun.html"/>
      <url>/devops/da-jian-k8s-de-jenkins-ji-qun.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-机器参考"><a href="#1-机器参考" class="headerlink" title="1.机器参考"></a>1.机器参考</h3><table><thead><tr><th>ip</th><th>角色</th></tr></thead><tbody><tr><td>192.168.56.12</td><td>k8s-master</td></tr><tr><td>192.168.56.11</td><td>k8s-node1,harbor,nfs</td></tr><tr><td>192.168.56.10</td><td>k8s-node2</td></tr></tbody></table><h3 id="2-配置pvc"><a href="#2-配置pvc" class="headerlink" title="2.配置pvc"></a>2.配置pvc</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment">#需要提前配置要storageClass，否则需要配置声明pv和pvc指定</span><span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>master jenkins<span class="token punctuation">]</span><span class="token comment"># cat jenkins-pvc.yaml  </span><span class="token key atrule">kind</span><span class="token punctuation">:</span> PersistentVolumeClaim<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkins<span class="token punctuation">-</span>pvc  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> jenkins<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">accessModes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> ReadWriteMany  <span class="token key atrule">resources</span><span class="token punctuation">:</span>    <span class="token key atrule">requests</span><span class="token punctuation">:</span>      <span class="token key atrule">storage</span><span class="token punctuation">:</span> 10Gi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-配置rbac"><a href="#3-配置rbac" class="headerlink" title="3.配置rbac"></a>3.配置rbac</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>master jenkins<span class="token punctuation">]</span><span class="token comment"># cat jenkins-pvc.yaml </span><span class="token key atrule">kind</span><span class="token punctuation">:</span> PersistentVolumeClaim<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkins<span class="token punctuation">-</span>pvc  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> jenkins<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">accessModes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> ReadWriteMany  <span class="token key atrule">resources</span><span class="token punctuation">:</span>    <span class="token key atrule">requests</span><span class="token punctuation">:</span>      <span class="token key atrule">storage</span><span class="token punctuation">:</span> 10Gi<span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>master jenkins<span class="token punctuation">]</span><span class="token comment"># kubectl get sc</span>NAME                            PROVISIONER       RECLAIMPOLICY   VOLUMEBINDINGMODE   ALLOWVOLUMEEXPANSION   AGEmanaged<span class="token punctuation">-</span>nfs<span class="token punctuation">-</span>storage (default)   qgg<span class="token punctuation">-</span>nfs<span class="token punctuation">-</span>storage   Delete          Immediate           false                  16d<span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>master jenkins<span class="token punctuation">]</span><span class="token comment"># ls</span>jenkins_deployment.yaml  jenkins<span class="token punctuation">-</span>pvc.yaml  jenkins_rbac.yaml  jenkins_svc.yaml<span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>master jenkins<span class="token punctuation">]</span><span class="token comment"># cat jenkins_rbac.yaml </span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkins  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> jenkins<span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkins<span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"extensions"</span><span class="token punctuation">,</span> <span class="token string">"apps"</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"deployments"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"create"</span><span class="token punctuation">,</span> <span class="token string">"delete"</span><span class="token punctuation">,</span> <span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"list"</span><span class="token punctuation">,</span> <span class="token string">"watch"</span><span class="token punctuation">,</span> <span class="token string">"patch"</span><span class="token punctuation">,</span> <span class="token string">"update"</span><span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"services"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"create"</span><span class="token punctuation">,</span> <span class="token string">"delete"</span><span class="token punctuation">,</span> <span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"list"</span><span class="token punctuation">,</span> <span class="token string">"watch"</span><span class="token punctuation">,</span> <span class="token string">"patch"</span><span class="token punctuation">,</span> <span class="token string">"update"</span><span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"pods"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"create"</span><span class="token punctuation">,</span><span class="token string">"delete"</span><span class="token punctuation">,</span><span class="token string">"get"</span><span class="token punctuation">,</span><span class="token string">"list"</span><span class="token punctuation">,</span><span class="token string">"patch"</span><span class="token punctuation">,</span><span class="token string">"update"</span><span class="token punctuation">,</span><span class="token string">"watch"</span><span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"pods/exec"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"create"</span><span class="token punctuation">,</span><span class="token string">"delete"</span><span class="token punctuation">,</span><span class="token string">"get"</span><span class="token punctuation">,</span><span class="token string">"list"</span><span class="token punctuation">,</span><span class="token string">"patch"</span><span class="token punctuation">,</span><span class="token string">"update"</span><span class="token punctuation">,</span><span class="token string">"watch"</span><span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"pods/log"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"get"</span><span class="token punctuation">,</span><span class="token string">"list"</span><span class="token punctuation">,</span><span class="token string">"watch"</span><span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"secrets"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"create"</span><span class="token punctuation">,</span><span class="token string">"delete"</span><span class="token punctuation">,</span><span class="token string">"get"</span><span class="token punctuation">,</span><span class="token string">"list"</span><span class="token punctuation">,</span><span class="token string">"patch"</span><span class="token punctuation">,</span><span class="token string">"update"</span><span class="token punctuation">,</span><span class="token string">"watch"</span><span class="token punctuation">]</span><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRoleBinding<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkins  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> jenkins<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io  <span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole  <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkins<span class="token key atrule">subjects</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount    <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkins    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> jenkins<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-配置deploy"><a href="#4-配置deploy" class="headerlink" title="4.配置deploy"></a>4.配置deploy</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkins  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> jenkins<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> jenkins  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> jenkins    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">terminationGracePeriodSeconds</span><span class="token punctuation">:</span> <span class="token number">10</span>      <span class="token key atrule">serviceAccount</span><span class="token punctuation">:</span> jenkins      <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkins        <span class="token key atrule">image</span><span class="token punctuation">:</span> jenkins/jenkins<span class="token punctuation">:</span>lts<span class="token punctuation">-</span>centos7<span class="token punctuation">-</span>jdk8     <span class="token comment">#参考镜像</span>        <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent        <span class="token key atrule">ports</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">8080</span>                <span class="token comment">#外部访问端口</span>          <span class="token key atrule">name</span><span class="token punctuation">:</span> web          <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP        <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">50000</span>              <span class="token comment">#jenkins save发现端口</span>          <span class="token key atrule">name</span><span class="token punctuation">:</span> agent          <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP        <span class="token key atrule">resources</span><span class="token punctuation">:</span>          <span class="token key atrule">limits</span><span class="token punctuation">:</span>            <span class="token key atrule">cpu</span><span class="token punctuation">:</span> 1000m            <span class="token key atrule">memory</span><span class="token punctuation">:</span> 1Gi          <span class="token key atrule">requests</span><span class="token punctuation">:</span>            <span class="token key atrule">cpu</span><span class="token punctuation">:</span> 500m            <span class="token key atrule">memory</span><span class="token punctuation">:</span> 512Mi        <span class="token key atrule">livenessProbe</span><span class="token punctuation">:</span>          <span class="token key atrule">httpGet</span><span class="token punctuation">:</span>            <span class="token key atrule">path</span><span class="token punctuation">:</span> /login            <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span>          <span class="token key atrule">initialDelaySeconds</span><span class="token punctuation">:</span> <span class="token number">60</span>          <span class="token comment">#容器初始化完成后，等待60秒进行探针检查</span>          <span class="token key atrule">timeoutSeconds</span><span class="token punctuation">:</span> <span class="token number">5</span>          <span class="token key atrule">failureThreshold</span><span class="token punctuation">:</span> <span class="token number">12</span>          <span class="token comment">#当Pod成功启动且检查失败时，Kubernetes将在放弃之前尝试failureThreshold次。放弃生存检查意味着重新启动Pod。而放弃就绪检查，Pod将被标记为未就绪。默认为3.最小值为1</span>        <span class="token key atrule">readinessProbe</span><span class="token punctuation">:</span>          <span class="token key atrule">httpGet</span><span class="token punctuation">:</span>            <span class="token key atrule">path</span><span class="token punctuation">:</span> /login            <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span>          <span class="token key atrule">initialDelaySeconds</span><span class="token punctuation">:</span> <span class="token number">60</span>          <span class="token key atrule">timeoutSeconds</span><span class="token punctuation">:</span> <span class="token number">5</span>          <span class="token key atrule">failureThreshold</span><span class="token punctuation">:</span> <span class="token number">12</span>        <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>                       <span class="token comment">#需要将jenkins_home目录挂载出来</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkinshome          <span class="token key atrule">subPath</span><span class="token punctuation">:</span> jenkins          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /var/jenkins_home        <span class="token key atrule">env</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> LIMITS_MEMORY          <span class="token key atrule">valueFrom</span><span class="token punctuation">:</span>            <span class="token key atrule">resourceFieldRef</span><span class="token punctuation">:</span>              <span class="token key atrule">resource</span><span class="token punctuation">:</span> limits.memory              <span class="token key atrule">divisor</span><span class="token punctuation">:</span> 1Mi        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> JAVA_OPTS          <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>Xmx$(LIMITS_MEMORY)m <span class="token punctuation">-</span>XshowSettings<span class="token punctuation">:</span>vm <span class="token punctuation">-</span>Dhudson.slaves.NodeProvisioner.initialDelay=0 <span class="token punctuation">-</span>Dhudson.slaves.NodeProvisioner.MARGIN=50 <span class="token punctuation">-</span>Dhudson.slaves.NodeProvisioner.MARGIN0=0.85 <span class="token punctuation">-</span>Duser.timezone=Asia/Shanghai      <span class="token key atrule">securityContext</span><span class="token punctuation">:</span>        <span class="token key atrule">fsGroup</span><span class="token punctuation">:</span> <span class="token number">1000</span>      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkinshome        <span class="token key atrule">persistentVolumeClaim</span><span class="token punctuation">:</span>          <span class="token key atrule">claimName</span><span class="token punctuation">:</span> jenkins<span class="token punctuation">-</span>pvc     <span class="token comment">#挂载pvc名称</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-svc"><a href="#5-svc" class="headerlink" title="5.svc"></a>5.svc</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>master jenkins<span class="token punctuation">]</span><span class="token comment"># cat jenkins_svc.yaml </span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkins  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> jenkins  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> jenkins<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> jenkins  <span class="token key atrule">type</span><span class="token punctuation">:</span> NodePort  <span class="token key atrule">ports</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> web    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span>    <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> web    <span class="token key atrule">nodePort</span><span class="token punctuation">:</span> <span class="token number">30002</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> agent    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">50000</span>    <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> agent<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-输入访问地址：http-192-168-56-12-30002"><a href="#6-输入访问地址：http-192-168-56-12-30002" class="headerlink" title="6.输入访问地址：http://192.168.56.12:30002/"></a>6.输入访问地址：<a href="http://192.168.56.12:30002/">http://192.168.56.12:30002/</a></h3><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1638495977925-8544d989-7461-4eb7-af55-881067cee0be.png" class="" title="image.png"><h3 id="7-插件"><a href="#7-插件" class="headerlink" title="7.插件"></a>7.插件</h3><h4 id="7-1安装默认推荐插件"><a href="#7-1安装默认推荐插件" class="headerlink" title="7.1安装默认推荐插件"></a>7.1安装默认推荐插件</h4><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1638868702728-3d9b5694-4b0b-4244-a926-5ad502a43a71.png" class="" title="image.png"><h4 id="7-2安装k8s相关插件"><a href="#7-2安装k8s相关插件" class="headerlink" title="7.2安装k8s相关插件"></a>7.2安装k8s相关插件</h4><blockquote><p>参考安装一下插件<br>1.kubernetes<br>2.blue Ocean<br>3.groovy postBuild</p></blockquote><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1638868773627-87fe872c-5e16-4a9c-84ed-14b8133f7db5.png" class="" title="image.png"><h3 id="8-配置jenkins的k8s集群信息"><a href="#8-配置jenkins的k8s集群信息" class="headerlink" title="8.配置jenkins的k8s集群信息"></a>8.配置jenkins的k8s集群信息</h3><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1638870309364-cd8418ea-9c11-47ce-bee4-189afe3d91ca.png" class="" title="image.png"><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1638870324493-5281f4a3-6c23-4228-af1f-1104783f976b.png" class="" title="image.png"><h4 id="8-1访问地址"><a href="#8-1访问地址" class="headerlink" title="8.1访问地址"></a>8.1访问地址</h4><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1638870458304-33ffe50d-8d6b-4c6b-bebb-5fc9000d6213.png" class="" title="image.png"><h4 id="8-2jenkins集群地址"><a href="#8-2jenkins集群地址" class="headerlink" title="8.2jenkins集群地址"></a>8.2jenkins集群地址</h4><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1638870812385-74002971-98c2-4303-8a78-bcd077c149fe.png" class="" title="image.png"><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1638870830421-b927b435-b5b9-4fda-bf40-9a57b29c3d32.png" class="" title="image.png"><h4 id="8-3pod配置"><a href="#8-3pod配置" class="headerlink" title="8.3pod配置"></a>8.3pod配置</h4><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1638870863266-928911a0-1202-46de-a510-5f859505c54c.png" class="" title="image.png"><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1638870873827-30859444-0e65-4eca-9821-92f4361fbbe5.png" class="" title="image.png"><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1638870884468-7ec622ed-9c32-4fe3-9865-c816fe86619d.png" class="" title="image.png"><h4 id="8-4pod挂载信息（包含-kubectl，docker，maven，maven-reposity-helm-harbor-证书）"><a href="#8-4pod挂载信息（包含-kubectl，docker，maven，maven-reposity-helm-harbor-证书）" class="headerlink" title="8.4pod挂载信息（包含 kubectl，docker，maven，maven reposity,helm,harbor 证书）"></a>8.4pod挂载信息（包含 kubectl，docker，maven，maven reposity,helm,harbor 证书）</h4><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1638870933982-328e5d39-ffea-4ce0-917a-7a65caff2f4d.png" class="" title="image.png"><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1638870990450-ffc51303-67d1-427d-b626-299f32532df2.png" class="" title="image.png"><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1638871045632-6f46bfd3-05aa-4e99-b987-8be393732a73.png" class="" title="image.png"><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1639642193185-fee040b6-47d4-4578-8587-07858da4fa8d.png" class="" title="image.png"><h4 id="8-5参考yaml文件"><a href="#8-5参考yaml文件" class="headerlink" title="8.5参考yaml文件"></a>8.5参考yaml文件</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> <span class="token string">"v1"</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> <span class="token string">"Pod"</span><span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">jenkins</span><span class="token punctuation">:</span> <span class="token string">"jenkins-slave"</span>    <span class="token key atrule">jenkins/label-digest</span><span class="token punctuation">:</span> <span class="token string">"03ddc3eddf95d5470d5c7fb6d2937abaeca3b79e"</span>    <span class="token key atrule">jenkins/label</span><span class="token punctuation">:</span> <span class="token string">"jenkins-slave"</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"jenkins-slave-c0dm0"</span><span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">containers</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">env</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"JENKINS_SECRET"</span>      <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">"********"</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"JENKINS_TUNNEL"</span>      <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">"jenkins.jenkins.svc.cluster.local:50000"</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"JENKINS_AGENT_NAME"</span>      <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">"jenkins-slave-c0dm0"</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"JENKINS_NAME"</span>      <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">"jenkins-slave-c0dm0"</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"JENKINS_AGENT_WORKDIR"</span>      <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">"/home/jenkins/agent"</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"JENKINS_URL"</span>      <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">"http://jenkins.jenkins.svc.cluster.local:8080/"</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> <span class="token string">"zhongyuanzhao000/jenkins-slave:jnlp"</span>    <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> <span class="token string">"IfNotPresent"</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"jnlp"</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token key atrule">limits</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>      <span class="token key atrule">requests</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token key atrule">tty</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> <span class="token string">"/etc/docker/certs.d/ca.crt"</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"volume-4"</span>      <span class="token key atrule">readOnly</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> <span class="token string">"/usr/local/bin/helm"</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"volume-3"</span>      <span class="token key atrule">readOnly</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> <span class="token string">"/var/run/docker.sock"</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"volume-1"</span>      <span class="token key atrule">readOnly</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> <span class="token string">"/root/.kube"</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"volume-0"</span>      <span class="token key atrule">readOnly</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> <span class="token string">"/root/.m2/repository"</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"volume-2"</span>      <span class="token key atrule">readOnly</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> <span class="token string">"/home/jenkins/agent"</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"workspace-volume"</span>      <span class="token key atrule">readOnly</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token key atrule">workingDir</span><span class="token punctuation">:</span> <span class="token string">"/home/jenkins/agent"</span>  <span class="token key atrule">hostNetwork</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">nodeSelector</span><span class="token punctuation">:</span>    <span class="token key atrule">kubernetes.io/os</span><span class="token punctuation">:</span> <span class="token string">"linux"</span>  <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> <span class="token string">"Never"</span>  <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> <span class="token string">"jenkins"</span>  <span class="token key atrule">volumes</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">hostPath</span><span class="token punctuation">:</span>      <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">"/root/.kube"</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"volume-0"</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"volume-2"</span>    <span class="token key atrule">persistentVolumeClaim</span><span class="token punctuation">:</span>      <span class="token key atrule">claimName</span><span class="token punctuation">:</span> <span class="token string">"jenkins-maven-pvc"</span>      <span class="token key atrule">readOnly</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token punctuation">-</span> <span class="token key atrule">hostPath</span><span class="token punctuation">:</span>      <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">"/var/run/docker.sock"</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"volume-1"</span>  <span class="token punctuation">-</span> <span class="token key atrule">emptyDir</span><span class="token punctuation">:</span>      <span class="token key atrule">medium</span><span class="token punctuation">:</span> <span class="token string">""</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"workspace-volume"</span>  <span class="token punctuation">-</span> <span class="token key atrule">hostPath</span><span class="token punctuation">:</span>      <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">"/etc/docker/certs.d/ca.crt"</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"volume-4"</span>  <span class="token punctuation">-</span> <span class="token key atrule">hostPath</span><span class="token punctuation">:</span>      <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">"/usr/local/bin/helm"</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"volume-3"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="8-6-查看kubectl版本（版本过低会导致报错）"><a href="#8-6-查看kubectl版本（版本过低会导致报错）" class="headerlink" title="8.6 查看kubectl版本（版本过低会导致报错）"></a>8.6 查看kubectl版本（版本过低会导致报错）</h4><blockquote><h4 id="SchemaError-io-k8s-api-admissionregistration-v1-MutatingWebhook-invalid-object-doesn’t-have-additional-properties"><a href="#SchemaError-io-k8s-api-admissionregistration-v1-MutatingWebhook-invalid-object-doesn’t-have-additional-properties" class="headerlink" title="SchemaError(io.k8s.api.admissionregistration.v1.MutatingWebhook): invalid object doesn’t have additional properties"></a>SchemaError(io.k8s.api.admissionregistration.v1.MutatingWebhook): invalid object doesn’t have additional properties</h4><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1639711950499-f9428458-8c60-4059-aa9b-f5ca0bca8aa8.png" class="" title="image.png"></blockquote>]]></content>
      
      
      <categories>
          
          <category> devops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> devops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/kubernetes/k8s-hpa-dan-xing-shen-suo.html"/>
      <url>/kubernetes/k8s-hpa-dan-xing-shen-suo.html</url>
      
        <content type="html"><![CDATA[<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>HPA在k8s中也由一个controller控制，controller会间隔循环HPA，检查每个HPA中监控的指标是否触发伸缩条件，默认的间隔时间为<strong>15s</strong>。一旦触发伸缩条件，controller会向k8s发送请求，修改伸缩对象<strong>（statefulSet、replicaController、replicaSet）</strong>子对象<strong>scale</strong>中控制<strong>pod</strong>数量的字段。<strong>k8s</strong>响应请求，修改<strong>scale</strong>结构体，然后会刷新一次伸缩对象的<strong>pod</strong>数量。伸缩对象被修改后，自然会通过<strong>list/watch</strong>机制<strong>增加或减少pod</strong>数量，达到动态伸缩的目的</p><h3 id="预先安装metrics-server"><a href="#预先安装metrics-server" class="headerlink" title="预先安装metrics-server"></a>预先安装metrics-server</h3><blockquote><p>查看hpa配置<br>2.kubect get hpa<br>查看node配置<br>kubectl top node</p></blockquote><h3 id="二、进行压力测试"><a href="#二、进行压力测试" class="headerlink" title="二、进行压力测试"></a>二、进行压力测试</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl run <span class="token parameter variable">-i</span> <span class="token parameter variable">--tty</span> load-generator <span class="token parameter variable">--image</span><span class="token operator">=</span>busybox /bin/sh<span class="token keyword">while</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token function">wget</span> <span class="token parameter variable">-q</span> -O- http://10.105.5.65<span class="token punctuation">;</span> <span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="三、自定义HPA"><a href="#三、自定义HPA" class="headerlink" title="三、自定义HPA"></a>三、自定义HPA</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> autoscaling/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> HorizontalPodAutoscaler<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">autoscaling.alpha.kubernetes.io/conditions</span><span class="token punctuation">:</span> '<span class="token punctuation">[</span><span class="token punctuation">{</span>"type"<span class="token punctuation">:</span><span class="token string">"AbleToScale"</span><span class="token punctuation">,</span>"status"<span class="token punctuation">:</span><span class="token string">"True"</span><span class="token punctuation">,</span>"lastTransitionTime"<span class="token punctuation">:</span><span class="token string">"2021-11-12T10:24:12Z"</span><span class="token punctuation">,</span>"reason"<span class="token punctuation">:</span><span class="token string">"ReadyForNewScale"</span><span class="token punctuation">,</span>"message"<span class="token punctuation">:</span>"recommended      size matches current size"<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>"type"<span class="token punctuation">:</span><span class="token string">"ScalingActive"</span><span class="token punctuation">,</span>"status"<span class="token punctuation">:</span><span class="token string">"True"</span><span class="token punctuation">,</span>"lastTransitionTime"<span class="token punctuation">:</span><span class="token string">"2021-11-13T04:52:54Z"</span><span class="token punctuation">,</span>"reason"<span class="token punctuation">:</span><span class="token string">"ValidMetricFound"</span><span class="token punctuation">,</span>"message"<span class="token punctuation">:</span>"the      HPA was able to successfully calculate a replica count from cpu resource utilization      (percentage of request)"<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>"type"<span class="token punctuation">:</span><span class="token string">"ScalingLimited"</span><span class="token punctuation">,</span>"status"<span class="token punctuation">:</span><span class="token string">"True"</span><span class="token punctuation">,</span>"lastTransitionTime"<span class="token punctuation">:</span><span class="token string">"2021-11-13T05:52:31Z"</span><span class="token punctuation">,</span>"reason"<span class="token punctuation">:</span><span class="token string">"TooFewReplicas"</span><span class="token punctuation">,</span>"message"<span class="token punctuation">:</span>"the      desired replica count is less than the minimum replica count"<span class="token punctuation">}</span><span class="token punctuation">]</span>'    <span class="token key atrule">autoscaling.alpha.kubernetes.io/current-metrics</span><span class="token punctuation">:</span> <span class="token string">'[{"type":"Resource","resource":{"name":"cpu","currentAverageUtilization":0,"currentAverageValue":"1m"}}]'</span>  <span class="token key atrule">creationTimestamp</span><span class="token punctuation">:</span> <span class="token string">"2021-11-12T10:23:56Z"</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> php<span class="token punctuation">-</span>apache  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default  <span class="token key atrule">resourceVersion</span><span class="token punctuation">:</span> <span class="token string">"57579"</span>  <span class="token key atrule">uid</span><span class="token punctuation">:</span> 5bdf76cb<span class="token punctuation">-</span>fcfd<span class="token punctuation">-</span>4761<span class="token punctuation">-</span>91a4<span class="token punctuation">-</span>24e08cf88e23<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">maxReplicas</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">minReplicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">scaleTargetRef</span><span class="token punctuation">:</span>    <span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1    <span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment    <span class="token key atrule">name</span><span class="token punctuation">:</span> php<span class="token punctuation">-</span>apache  <span class="token key atrule">targetCPUUtilizationPercentage</span><span class="token punctuation">:</span> <span class="token number">50</span>  <span class="token comment">## 增加其他配置限制</span><span class="token key atrule">status</span><span class="token punctuation">:</span>  <span class="token key atrule">currentCPUUtilizationPercentage</span><span class="token punctuation">:</span> <span class="token number">0</span>  <span class="token key atrule">currentReplicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">desiredReplicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">lastScaleTime</span><span class="token punctuation">:</span> <span class="token string">"2021-11-13T05:50:00Z"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四HPA-最佳实践"><a href="#四HPA-最佳实践" class="headerlink" title="四HPA 最佳实践"></a>四HPA 最佳实践</h3><ul><li>为容器配置 CPU Requests</li><li>HPA 目标设置恰当，如设置 70% 给容器和应用预留 30% 的余量</li><li>保持 Pods 和 Nodes 健康（避免 Pod 频繁重建）</li><li>保证用户请求的负载均衡</li><li>使用 kubectl top node 和 kubectl top pod 查看资源使用情况</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>压测工具Sysbench、Stress、iperf或iperf3</title>
      <link href="/ya-ce/ya-ce-gong-ju-sysbench-stress-iperf-huo-iperf3.html"/>
      <url>/ya-ce/ya-ce-gong-ju-sysbench-stress-iperf-huo-iperf3.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>sysbench是一款开源的、模块化的、跨平台的多线程性能测试工具，可用于CPU、内存、磁盘I/O、线程、数据库的性能测试。sysbench目前支持的数据库压测有PG和MySQL。（若想学习数据库压测，可以私聊麦老师哟，MySQL和PG均有相关课程）<br>工具的官网说明：<a href="https://launchpad.net/sysbench">https://launchpad.net/sysbench</a><br>sysbench支持以下几种测试模式：<br>1、CPU运算性能<br>2、磁盘IO性能<br>3、调度程序性能<br>4、内存分配及传输速度<br>5、POSIX线程性能–互斥基准测试<br>6、数据库性能(OLTP基准测试)</p></blockquote><h1 id="Sysbench"><a href="#Sysbench" class="headerlink" title="Sysbench"></a>Sysbench</h1><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h2><blockquote><p>curl -s <a href="https://packagecloud.io/install/repositories/akopytov/sysbench/script.rpm.sh">https://packagecloud.io/install/repositories/akopytov/sysbench/script.rpm.sh</a> | sudo bash<br>sudo yum -y install sysbench<br>sysbench –version</p></blockquote><h2 id="2-使用"><a href="#2-使用" class="headerlink" title="2. 使用"></a>2. 使用</h2><h3 id="sysbench通用参数选项如下"><a href="#sysbench通用参数选项如下" class="headerlink" title="sysbench通用参数选项如下"></a>sysbench通用参数选项如下</h3><blockquote><p>–threads: 线程数，若设置为2，则sysbench会启动2个线程，同时分别进行素数的计算，默认值为1。<br>–time: 运行时长，单位秒。若设置为5，则sysbench会在5秒内循环进行素数计算，每完成一轮就是一个event，默认值为10。<br>–events: event上限次数，若设置为100，则表示当完成100次event后，即使时间富余也停止运行。默认值为0，则表示不限event次数。<br>–forced-shutdown=STRING：超时强制中断，默认为off。     –thread-stack-size=SIZE：线程栈大小，默认64K<br>–thread-init-timeout=N：线程初始化等待时间，默认为30秒<br>–rate=N：平均事务率，0表示不限制，默认为0。<br>–report-interval=N：测试进度报告输出的时间间隔，0表示关闭，默认为0。<br>–report-checkpoints=[LIST,…]：转储完全统计信息并在指定时间点复位所有计数器，参数是逗号分隔值的列表，表示从必须执行报告检查点的测试开始所经过的时间（以秒为单位）。 默认情况下，报告检查点处于关闭状态[off]。<br>–debug[=on|off]：打印调试信息，默认为off<br>–validate[=on|off]：尽可能执行验证检查，默认为off。<br>–help[=on|off]：打印help信息并退出，默认为off<br>–version[=on|off]：打印版本信息并退出，默认为off<br>–config-file=FILENAME：命令行选项文件<br>–luajit-cmd=STRING：执行LuaJIT控制命令</p></blockquote><h3 id="1-cpu压测"><a href="#1-cpu压测" class="headerlink" title="1. cpu压测"></a>1. cpu压测</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sysbench <span class="token parameter variable">--test</span><span class="token operator">=</span>cpu <span class="token builtin class-name">help</span>sysbench cpu --cpu-max-prime<span class="token operator">=</span><span class="token number">20000</span> <span class="token parameter variable">--threads</span><span class="token operator">=</span><span class="token number">8</span> <span class="token parameter variable">--time</span><span class="token operator">=</span><span class="token number">30</span> run下面的命令表示10个线程执行800次请求，每个请求执行质数相加到80000000，下面开始压测：sysbench <span class="token parameter variable">--threads</span><span class="token operator">=</span><span class="token number">10</span> <span class="token parameter variable">--events</span><span class="token operator">=</span><span class="token number">800</span>  cpu --cpu-max-prime<span class="token operator">=</span><span class="token number">80000000</span> run指标解释：Prime numbers limit: <span class="token number">20000</span>，每个线程产生的素数上限均为2000events per second: <span class="token number">650.7</span>，所有线程每秒完成了650.74次eventtotal time: <span class="token number">10</span>.0017s，共耗时10秒total number of events: <span class="token number">6510</span>，10秒内所有线程一共完成了6510次eventmin: <span class="token number">3.03</span>，完成1次event的最少耗时3.03秒avg: <span class="token number">3.07</span>，所有event的平均耗时3.07毫秒max: <span class="token number">3.27</span>，完成1次event的最多耗时3.27毫秒95th percentile: <span class="token number">3.13</span>， <span class="token number">95</span>%次event在3.13秒毫秒内完成sum: <span class="token number">19999.91</span>，每个线程耗时10秒，2个线程叠加耗时就是20秒events <span class="token punctuation">(</span>avg/stddev<span class="token punctuation">)</span>: <span class="token number">3255.0000</span>/44.00 // 平均每个线程完成3255次event，标准差为44execution <span class="token function">time</span> <span class="token punctuation">(</span>avg/stddev<span class="token punctuation">)</span>: <span class="token number">10.0000</span>/0.00 // 每个线程平均耗时10秒，标准差为0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-内存压测"><a href="#2-内存压测" class="headerlink" title="2. 内存压测"></a>2. 内存压测</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sysbench  <span class="token parameter variable">--test</span><span class="token operator">=</span>memory <span class="token builtin class-name">help</span>--memory-block-size<span class="token operator">=</span>SIZE：测试内存块的大小，默认为1K。--memory-total-size<span class="token operator">=</span>SIZE：数据传输的总大小，默认为100G。--memory-scope<span class="token operator">=</span>STRING：内存访问的范围，包括全局和本地范围，默认为global。--memory-hugetlb<span class="token operator">=</span><span class="token punctuation">[</span>on<span class="token operator">|</span>off<span class="token punctuation">]</span>：是否从HugeTLB池分配内存的开关，默认为off。--memory-oper<span class="token operator">=</span>STRING：内存操作的类型，包括read, write, none，默认为write--memory-access-mode<span class="token operator">=</span>STRING：内存访问模式，包括seq,rnd两种模式，默认为seq。开启12个线程，内存块大小为8K，顺序读写:sysbench memory <span class="token parameter variable">--threads</span><span class="token operator">=</span><span class="token number">12</span> --memory-block-size<span class="token operator">=</span>8K --memory-total-size<span class="token operator">=</span>100G --memory-access-mode<span class="token operator">=</span>seq runsysbench memory <span class="token parameter variable">--threads</span><span class="token operator">=</span><span class="token number">12</span> --memory-block-size<span class="token operator">=</span>8K --memory-total-size<span class="token operator">=</span>100G --memory-access-mode<span class="token operator">=</span>rnd run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-磁盘IO性能"><a href="#3-磁盘IO性能" class="headerlink" title="3. 磁盘IO性能"></a>3. 磁盘IO性能</h3><blockquote><p>sysbench –test=fileio help<br> –file-num=N：生成测试文件的数量，默认为128。<br>–file-block-size=N：测试时所使用文件块的大小，如果想磁盘针对innodb存储引擎进行测试，可以将其设置为16384（innodb存储引擎页的大小），默认为16384。<br>–file-total-size=SIZE：创建测试文件的总大小，默认为2G大小。<br>–file-test-mode=STRING：文件测试模式，seqwr(顺序写)、seqrewr(顺序读写)、seqrd(顺序读)、rndrd(随机读)、rndwr(随机写)、rndrw(随机读写)。<br>–file-io-mode=STRING：文件操作模式，sync（同步）、async（异步）、fastmmap（快速mmap）、slowmmap（慢速mmap），默认为sync。<br>–file-async-backlog=N：对应每个线程队列的异步操作数，默认为128。<br>–file-extra-flags=STRING：打开文件时的选项，与API相关的参数。<br>–file-fsync-freq=N：执行fsync函数的频率。fsync主要是同步磁盘文件，0代表不使用fsync函数，默认值为100。<br>–file-fsync-all=[on|off]：每执行完一次写操作，就执行一次fsync。默认为off。<br>–file-fsync-end=[on|off]：测试结束时执行fsync函数，默认为on。<br>–file-fsync-mode=STRING：文件同步函数选择，和API相关的参数，由于多个操作系统对于fdatasync支持不同，因此不建议使用fdatasync，默认为fsync。<br>–file-merged-requests=N：大多情况下，合并可能的IO的请求数，默认为0。<br>–file-rw-ratio=N：测试时的读写比例，默认时为1.5，即可3：2。</p><h3 id="数据准备："><a href="#数据准备：" class="headerlink" title="数据准备："></a><strong>数据准备：</strong></h3><p>sysbench fileio –file-num=16 –file-total-size=2G prepare</p><h3 id="执行测试："><a href="#执行测试：" class="headerlink" title="执行测试："></a><strong>执行测试：</strong></h3><p>sysbench fileio –file-total-size=2G –file-test-mode=rndrd –time=180  –threads=16  –file-num=16 –file-extra-flags=direct –file-fsync-freq=0 –file-block-size=16384 run</p><h3 id="清理数据："><a href="#清理数据：" class="headerlink" title="清理数据："></a><strong>清理数据：</strong></h3><p>sysbench fileio –file-num=16 –file-total-size=2G cleanup</p></blockquote><h1 id="Stress"><a href="#Stress" class="headerlink" title="Stress"></a>Stress</h1><h2 id="1-安装-1"><a href="#1-安装-1" class="headerlink" title="1. 安装"></a>1. 安装</h2><blockquote><ol><li>[# wget <a href="https://download-ib01.fedoraproject.org/pub/epel/7/x86_64/Packages/s/stress-1.0.4-16.el7.x86_64.rpm">https://download-ib01.fedoraproject.org/pub/epel/7/x86_64/Packages/s/stress-1.0.4-16.el7.x86_64.rpm</a></li><li>[]# rpm -ivh stress-1.0.4-16.el7.x86_64.rpm</li></ol></blockquote><h2 id="2-使用-1"><a href="#2-使用-1" class="headerlink" title="2. 使用"></a>2. 使用</h2><h3 id="1-cpu"><a href="#1-cpu" class="headerlink" title="1. cpu"></a>1. cpu</h3><blockquote><p>创建8个stress进程，持续时间600秒，模拟CPU在用户态使用率达到100%的场景。<br>stress –cpu 8 –timeout 600</p></blockquote><h3 id="2-内存"><a href="#2-内存" class="headerlink" title="2. 内存"></a>2. 内存</h3><blockquote><p>创建100个io进程，持续时间600秒，模拟CPU在内核态使用率达到100%的场景。<br> stress  –io 100 –timeout 600<br>stress –vm 5 –vm-bytes 1G –vm-hang 100 –timeout 100s </p></blockquote><h3 id="3-IO"><a href="#3-IO" class="headerlink" title="3.IO"></a>3.IO</h3><blockquote><p>创建8个stress进程和100个io进程，持续时间600秒，模拟CPU在用户态和内核态总使用率达到100%的场景。<br> stress -c 8 -i 100 –verbose –timeout 600</p></blockquote><h1 id="IfTOP"><a href="#IfTOP" class="headerlink" title="IfTOP"></a>IfTOP</h1><blockquote><p>yum install flex byacc  libpcap ncurses ncurses-devel<br>yum install gcc gcc-c++ autoconf automake<br>wget <a href="ftp://fr2.rpmfind.net/linux/dag/redhat/el5/en/i386/dag/RPMS/iftop-0.17-1.el5.rf.i386.rpm">ftp://fr2.rpmfind.net/linux/dag/redhat/el5/en/i386/dag/RPMS/iftop-0.17-1.el5.rf.i386.rpm</a><br>rpm -ivh iftop-0.17-1.el5.rf.i386.rpm</p><p>wget <a href="http://www.ex-parrot.com/~pdw/iftop/download/iftop-0.17.tar.gz">http://www.ex-parrot.com/~pdw/iftop/download/iftop-0.17.tar.gz</a><br> tar -xvzf iftop-0.17.tar.gz<br>./configure &amp;&amp; make &amp;&amp; make install  </p><p>TX：发送流量<br>RX：接收流量<br>TOTAL：总流量<br>Cumm：运行iftop到目前时间的总流量<br>peak：流量峰值<br>rates：分别表示过去 2s 10s 40s 的平均流量</p></blockquote><h1 id="iperf或iperf3"><a href="#iperf或iperf3" class="headerlink" title="iperf或iperf3"></a>iperf或iperf3</h1><blockquote><h3 id="服务端运行："><a href="#服务端运行：" class="headerlink" title="服务端运行："></a>服务端运行：</h3><p>iperf -u -s</p><h4 id="u表示以udp模式运行（不加该参数，默认是以tcp模式运行），-s表示作为服务端"><a href="#u表示以udp模式运行（不加该参数，默认是以tcp模式运行），-s表示作为服务端" class="headerlink" title="-u表示以udp模式运行（不加该参数，默认是以tcp模式运行），-s表示作为服务端"></a>-u表示以udp模式运行（不加该参数，默认是以tcp模式运行），-s表示作为服务端</h4><h3 id="客户端运行："><a href="#客户端运行：" class="headerlink" title="客户端运行："></a>客户端运行：</h3><p>iperf -u -c 192.168.30.115 -b 100M -t 60 -i 2</p><h4 id="解释：在udp模式下，以100Mbps为数据发送速率，客户端到服务器192-168-30-115上传带宽测试，测试时间为60秒"><a href="#解释：在udp模式下，以100Mbps为数据发送速率，客户端到服务器192-168-30-115上传带宽测试，测试时间为60秒" class="headerlink" title="解释：在udp模式下，以100Mbps为数据发送速率，客户端到服务器192.168.30.115上传带宽测试，测试时间为60秒"></a>解释：在udp模式下，以100Mbps为数据发送速率，客户端到服务器192.168.30.115上传带宽测试，测试时间为60秒</h4><p>iperf -c 192.168.30.115 -u -i 1 -t 10 -b 2M -P 2</p><h4 id="解释：客户端同时向服务器端发起2个连接线程，每个连接线程以2Mbps为数据发送速率，测试时间为10秒"><a href="#解释：客户端同时向服务器端发起2个连接线程，每个连接线程以2Mbps为数据发送速率，测试时间为10秒" class="headerlink" title="解释：客户端同时向服务器端发起2个连接线程，每个连接线程以2Mbps为数据发送速率，测试时间为10秒"></a>解释：客户端同时向服务器端发起2个连接线程，每个连接线程以2Mbps为数据发送速率，测试时间为10秒</h4><p>iperf -u -c 192.168.30.115 -b 1000M -d -t 60 -i 1</p><h4 id="解释：以1000M为数据发送速率，进行上下行带宽测试，测试时间60秒，每秒显示一次结果"><a href="#解释：以1000M为数据发送速率，进行上下行带宽测试，测试时间60秒，每秒显示一次结果" class="headerlink" title="解释：以1000M为数据发送速率，进行上下行带宽测试，测试时间60秒，每秒显示一次结果"></a>解释：以1000M为数据发送速率，进行上下行带宽测试，测试时间60秒，每秒显示一次结果</h4></blockquote>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 压测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【gRPC SSL】自签CA、服务端和客户端双向认证</title>
      <link href="/grpc/grpc-ssl-zi-qian-ca-fu-wu-duan-he-ke-hu-duan-shuang-xiang-ren-zheng.html"/>
      <url>/grpc/grpc-ssl-zi-qian-ca-fu-wu-duan-he-ke-hu-duan-shuang-xiang-ren-zheng.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文主要介绍了自签CA、服务端和客户端双向认证,主要包括自签CA、GolangGrpc服务端和客户端双向认证的相关内容,需要的朋友可以参考下</p></blockquote><h3 id="参考地址：https-blog-csdn-net-dl962454-article-details-124350199"><a href="#参考地址：https-blog-csdn-net-dl962454-article-details-124350199" class="headerlink" title="参考地址：https://blog.csdn.net/dl962454/article/details/124350199"></a>参考地址：<a href="https://blog.csdn.net/dl962454/article/details/124350199">https://blog.csdn.net/dl962454/article/details/124350199</a></h3><h2 id="一、双向认证"><a href="#一、双向认证" class="headerlink" title="一、双向认证"></a>一、双向认证</h2><h3 id="1-1-CA根证书生成"><a href="#1-1-CA根证书生成" class="headerlink" title="1.1 CA根证书生成"></a>1.1 CA根证书生成</h3><p>在openssl的bin目录下新建一个配置文件<strong>ca.conf</strong>，文件内容如下：</p><pre class="line-numbers language-toml" data-language="toml"><code class="language-toml"><span class="token punctuation">[</span> <span class="token table class-name">req</span> <span class="token punctuation">]</span><span class="token key property">default_bits</span>       <span class="token punctuation">=</span> <span class="token number">2048</span><span class="token key property">distinguished_name</span> <span class="token punctuation">=</span> req_distinguished_name<span class="token punctuation">[</span> <span class="token table class-name">req_distinguished_name</span> <span class="token punctuation">]</span><span class="token key property">countryName</span>                 <span class="token punctuation">=</span> Country Name (<span class="token number">2</span> letter code)<span class="token key property">countryName_default</span>         <span class="token punctuation">=</span> CN<span class="token key property">stateOrProvinceName</span>         <span class="token punctuation">=</span> State or Province Name (full name)<span class="token key property">stateOrProvinceName_default</span> <span class="token punctuation">=</span> SiChuan<span class="token key property">localityName</span>                <span class="token punctuation">=</span> Locality Name (eg<span class="token punctuation">,</span> city)<span class="token key property">localityName_default</span>        <span class="token punctuation">=</span> Chengdu<span class="token key property">organizationName</span>            <span class="token punctuation">=</span> Organization Name (eg<span class="token punctuation">,</span> company)<span class="token key property">organizationName_default</span>    <span class="token punctuation">=</span> Step<span class="token key property">commonName</span>                  <span class="token punctuation">=</span> CommonName (e<span class="token punctuation">.</span>g<span class="token punctuation">.</span> server FQDN or YOUR name)<span class="token key property">commonName_max</span>              <span class="token punctuation">=</span> <span class="token number">64</span><span class="token key property">commonName_default</span>          <span class="token punctuation">=</span> tonghua<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>依次执行下面的命令，执行过程中遇到的填写国家之类的直接Enter跳过，选择配置文件中默认的，从而生成**CA私钥(ca.key)<strong>、*<br>*签名请求(ca.csr)</strong> 和 <strong>签名证书（ca.crt）</strong>：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">openssl genrsa <span class="token parameter variable">-out</span> ca.key <span class="token number">2048</span>openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-sha256</span> <span class="token parameter variable">-out</span> ca.csr <span class="token parameter variable">-key</span> ca.key <span class="token parameter variable">-config</span> ca.confopenssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-days</span> <span class="token number">3650</span> <span class="token parameter variable">-in</span> ca.csr signkey ca.key out ca.crt //这地方的输出可以改写成ca.pem,改写后后面命令中也要同步<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="1-2-签发服务端证书"><a href="#1-2-签发服务端证书" class="headerlink" title="1.2 签发服务端证书"></a>1.2 签发服务端证书</h3><p>接下来创建服务端配置文件server.conf，文件内容如下:</p><pre class="line-numbers language-toml" data-language="toml"><code class="language-toml"><span class="token punctuation">[</span> <span class="token table class-name">req</span> <span class="token punctuation">]</span><span class="token key property">default_bits</span>       <span class="token punctuation">=</span> <span class="token number">2048</span><span class="token key property">distinguished_name</span> <span class="token punctuation">=</span> req_distinguished_name<span class="token punctuation">[</span> <span class="token table class-name">req_distinguished_name</span> <span class="token punctuation">]</span><span class="token key property">countryName</span>                 <span class="token punctuation">=</span> Country Name (<span class="token number">2</span> letter code)<span class="token key property">countryName_default</span>         <span class="token punctuation">=</span> CN<span class="token key property">stateOrProvinceName</span>         <span class="token punctuation">=</span> State or Province Name (full name)<span class="token key property">stateOrProvinceName_default</span> <span class="token punctuation">=</span> SiChuan<span class="token key property">localityName</span>                <span class="token punctuation">=</span> Locality Name (eg<span class="token punctuation">,</span> city)<span class="token key property">localityName_default</span>        <span class="token punctuation">=</span> Chengdu<span class="token key property">organizationName</span>            <span class="token punctuation">=</span> Organization Name (eg<span class="token punctuation">,</span> company)<span class="token key property">organizationName_default</span>    <span class="token punctuation">=</span> Step<span class="token key property">commonName</span>                  <span class="token punctuation">=</span> CommonName (e<span class="token punctuation">.</span>g<span class="token punctuation">.</span> server FQDN or YOUR name)<span class="token key property">commonName_max</span>              <span class="token punctuation">=</span> <span class="token number">64</span><span class="token key property">commonName_default</span>          <span class="token punctuation">=</span> tonghua<span class="token punctuation">[</span> <span class="token table class-name">req_ext</span> <span class="token punctuation">]</span><span class="token comment"># 添加subjectAltName </span><span class="token key property">subjectAltName</span> <span class="token punctuation">=</span> @alt_names<span class="token comment"># 文件末尾添加. www.p-pp.cn代表允许的ServerName,自己随便写</span><span class="token punctuation">[</span><span class="token table class-name">alt_names</span><span class="token punctuation">]</span><span class="token key property">DNS.1</span>   <span class="token punctuation">=</span> www<span class="token punctuation">.</span>p-pp<span class="token punctuation">.</span>cn<span class="token key property">IP</span>      <span class="token punctuation">=</span> <span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同样，使用上面得到的CA根证书（ca.crt）签发服务端证书，依次执行下面命令生成服务端的密钥、签名请求和签名证书：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">// 服务端私钥openssl genrsa <span class="token parameter variable">-out</span> server.key <span class="token number">2048</span>//服务端签名请求openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-sha256</span> <span class="token parameter variable">-out</span> server.csr <span class="token parameter variable">-key</span> server.key <span class="token parameter variable">-config</span> server.conf//用根证书签发服务端证书server.pemopenssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-days</span> <span class="token number">3650</span> <span class="token parameter variable">-CA</span> ca.crt <span class="token parameter variable">-CAkey</span> ca.key <span class="token parameter variable">-CAcreateserial</span> <span class="token parameter variable">-in</span> server.csr <span class="token parameter variable">-out</span> server.pem <span class="token parameter variable">-extensions</span> req_ext <span class="token parameter variable">-extfile</span> server.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-3-签发客户端证书"><a href="#1-3-签发客户端证书" class="headerlink" title="1.3 签发客户端证书"></a>1.3 签发客户端证书</h3><p>建立配置文件client.conf：</p><pre class="line-numbers language-toml" data-language="toml"><code class="language-toml"><span class="token punctuation">[</span> <span class="token table class-name">req</span> <span class="token punctuation">]</span><span class="token key property">default_bits</span>       <span class="token punctuation">=</span> <span class="token number">2048</span><span class="token key property">distinguished_name</span> <span class="token punctuation">=</span> req_distinguished_name<span class="token punctuation">[</span> <span class="token table class-name">req_distinguished_name</span> <span class="token punctuation">]</span><span class="token key property">countryName</span>                 <span class="token punctuation">=</span> Country Name (<span class="token number">2</span> letter code)<span class="token key property">countryName_default</span>         <span class="token punctuation">=</span> CN<span class="token key property">stateOrProvinceName</span>         <span class="token punctuation">=</span> State or Province Name (full name)<span class="token key property">stateOrProvinceName_default</span> <span class="token punctuation">=</span> SiChuan<span class="token key property">localityName</span>                <span class="token punctuation">=</span> Locality Name (eg<span class="token punctuation">,</span> city)<span class="token key property">localityName_default</span>        <span class="token punctuation">=</span> Chengdu<span class="token key property">organizationName</span>            <span class="token punctuation">=</span> Organization Name (eg<span class="token punctuation">,</span> company)<span class="token key property">organizationName_default</span>    <span class="token punctuation">=</span> Step<span class="token key property">commonName</span>                  <span class="token punctuation">=</span> CommonName (e<span class="token punctuation">.</span>g<span class="token punctuation">.</span> server FQDN or YOUR name)<span class="token key property">commonName_max</span>              <span class="token punctuation">=</span> <span class="token number">64</span><span class="token key property">commonName_default</span>          <span class="token punctuation">=</span> tonghua<span class="token punctuation">[</span> <span class="token table class-name">req_ext</span> <span class="token punctuation">]</span><span class="token key property">subjectAltName</span> <span class="token punctuation">=</span> @alt_names<span class="token punctuation">[</span><span class="token table class-name">alt_names</span><span class="token punctuation">]</span><span class="token key property">DNS.1</span>   <span class="token punctuation">=</span> www<span class="token punctuation">.</span>p-pp<span class="token punctuation">.</span>cn<span class="token key property">IP</span>      <span class="token punctuation">=</span> <span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行下面命令生成客户端密钥、证书等：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">openssl ecparam <span class="token parameter variable">-genkey</span> <span class="token parameter variable">-name</span> secp384r1 <span class="token parameter variable">-out</span> client.keyopenssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-sha256</span> <span class="token parameter variable">-out</span> client.csr <span class="token parameter variable">-key</span> client.key <span class="token parameter variable">-config</span> client.confopenssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-days</span> <span class="token number">3650</span> <span class="token parameter variable">-CA</span> ca.crt <span class="token parameter variable">-CAkey</span> ca.key <span class="token parameter variable">-CAcreateserial</span> <span class="token parameter variable">-in</span> client.csr <span class="token parameter variable">-out</span> client.pem <span class="token parameter variable">-extensions</span> req_ext <span class="token parameter variable">-extfile</span> client.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="1-4-服务端代码改写"><a href="#1-4-服务端代码改写" class="headerlink" title="1.4 服务端代码改写"></a>1.4 服务端代码改写</h3><p>服务端改写，首先拷贝ca.pem、server.key和server.pem到服务端项目中，改写代码：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"crypto/tls"</span><span class="token string">"crypto/x509"</span><span class="token string">"google.golang.org/grpc"</span><span class="token string">"google.golang.org/grpc/credentials"</span><span class="token string">"grpcpro/services"</span><span class="token string">"io/ioutil"</span><span class="token string">"log"</span><span class="token string">"net"</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token punctuation">(</span><span class="token comment">// Address gRPC服务地址</span>Address <span class="token operator">=</span> <span class="token string">"127.0.0.1:8888"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// TLS认证</span><span class="token comment">//从证书相关文件中读取和解析信息，得到证书公钥、密钥对</span>cert<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> tls<span class="token punctuation">.</span><span class="token function">LoadX509KeyPair</span><span class="token punctuation">(</span><span class="token string">"keys/server.pem"</span><span class="token punctuation">,</span> <span class="token string">"keys/server.key"</span><span class="token punctuation">)</span>certPool <span class="token operator">:=</span> x509<span class="token punctuation">.</span><span class="token function">NewCertPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//初始化一个CertPool</span>ca<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span><span class="token string">"keys/ca.pem"</span><span class="token punctuation">)</span>certPool<span class="token punctuation">.</span><span class="token function">AppendCertsFromPEM</span><span class="token punctuation">(</span>ca<span class="token punctuation">)</span> <span class="token comment">//解析传入的证书，解析成功会将其加到池子中</span>creds <span class="token operator">:=</span> credentials<span class="token punctuation">.</span><span class="token function">NewTLS</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>tls<span class="token punctuation">.</span>Config<span class="token punctuation">{</span> <span class="token comment">//构建基于TLS的TransportCredentials选项</span>Certificates<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>tls<span class="token punctuation">.</span>Certificate<span class="token punctuation">{</span>cert<span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token comment">//服务端证书链，可以有多个</span>ClientAuth<span class="token punctuation">:</span>   tls<span class="token punctuation">.</span>RequireAndVerifyClientCert<span class="token punctuation">,</span> <span class="token comment">//要求必须验证客户端证书</span>ClientCAs<span class="token punctuation">:</span>    certPool<span class="token punctuation">,</span>                       <span class="token comment">//设置根证书的集合，校验方式使用 ClientAuth 中设定的模式</span><span class="token punctuation">}</span><span class="token punctuation">)</span>rpcServer <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">NewServer</span><span class="token punctuation">(</span>grpc<span class="token punctuation">.</span><span class="token function">Creds</span><span class="token punctuation">(</span>creds<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//实例化grpc Server</span><span class="token comment">//创建带ca证书验证的服务端</span>services<span class="token punctuation">.</span><span class="token function">RegisterProdServiceServer</span><span class="token punctuation">(</span>rpcServer<span class="token punctuation">,</span> <span class="token function">new</span><span class="token punctuation">(</span>services<span class="token punctuation">.</span>ProdService<span class="token punctuation">)</span><span class="token punctuation">)</span>listen<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Listen</span><span class="token punctuation">(</span><span class="token string">"tcp"</span><span class="token punctuation">,</span> Address<span class="token punctuation">)</span> <span class="token comment">//设置传输协议和监听地址</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Listen on "</span> <span class="token operator">+</span> Address <span class="token operator">+</span> <span class="token string">" with TLS"</span><span class="token punctuation">)</span>rpcServer<span class="token punctuation">.</span><span class="token function">Serve</span><span class="token punctuation">(</span>listen<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-5-客户端代码改写"><a href="#1-5-客户端代码改写" class="headerlink" title="1.5 客户端代码改写"></a>1.5 客户端代码改写</h3><p>客户端改写：同样要拷贝ca.pem、client.key和client.pem到客户端项目中，改写代码：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"context"</span><span class="token string">"crypto/tls"</span><span class="token string">"crypto/x509"</span><span class="token string">"fmt"</span><span class="token string">"google.golang.org/grpc"</span><span class="token string">"google.golang.org/grpc/credentials"</span><span class="token string">"grpcClient/services"</span><span class="token string">"io/ioutil"</span><span class="token string">"log"</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token punctuation">(</span><span class="token comment">// Address gRPC服务地址</span>Address <span class="token operator">=</span> <span class="token string">"127.0.0.1:8888"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// TLS连接</span><span class="token comment">//从证书相关文件中读取和解析信息，得到证书公钥、密钥对</span>cert<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> tls<span class="token punctuation">.</span><span class="token function">LoadX509KeyPair</span><span class="token punctuation">(</span><span class="token string">"keys/client.pem"</span><span class="token punctuation">,</span> <span class="token string">"keys/client.key"</span><span class="token punctuation">)</span>certPool <span class="token operator">:=</span> x509<span class="token punctuation">.</span><span class="token function">NewCertPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span>ca<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span><span class="token string">"keys/ca.pem"</span><span class="token punctuation">)</span>certPool<span class="token punctuation">.</span><span class="token function">AppendCertsFromPEM</span><span class="token punctuation">(</span>ca<span class="token punctuation">)</span>creds <span class="token operator">:=</span> credentials<span class="token punctuation">.</span><span class="token function">NewTLS</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>tls<span class="token punctuation">.</span>Config<span class="token punctuation">{</span>Certificates<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>tls<span class="token punctuation">.</span>Certificate<span class="token punctuation">{</span>cert<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">//客户端证书</span>ServerName<span class="token punctuation">:</span>   <span class="token string">"www.p-pp.cn"</span><span class="token punctuation">,</span>           <span class="token comment">//注意这里的参数为配置文件中所允许的ServerName，也就是其中配置的DNS...</span>RootCAs<span class="token punctuation">:</span>      certPool<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span>conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span>Address<span class="token punctuation">,</span> grpc<span class="token punctuation">.</span><span class="token function">WithTransportCredentials</span><span class="token punctuation">(</span>creds<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//连接服务端</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">defer</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>prodClient <span class="token operator">:=</span> services<span class="token punctuation">.</span><span class="token function">NewProdServiceClient</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span>                                                <span class="token comment">//初始化客户端</span>prodRes<span class="token punctuation">,</span> err <span class="token operator">:=</span> prodClient<span class="token punctuation">.</span><span class="token function">GetProdStock</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>services<span class="token punctuation">.</span>ProdRequest<span class="token punctuation">{</span>ProdId<span class="token punctuation">:</span> <span class="token number">12</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">//调用方法</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">}</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"grpcClient getProdStock is %d\n"</span><span class="token punctuation">,</span> prodRes<span class="token punctuation">.</span>ProdStock<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-6-双向认证成功"><a href="#1-6-双向认证成功" class="headerlink" title="1.6 双向认证成功"></a>1.6 双向认证成功</h3><p>启动两个服务之后客户端就能使用服务端的服务了。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/12993007/1672903044229-edd8c492-2f47-42eb-81d4-453d29b8a0ec.png#averageHue=%23262d33&amp;clientId=ue9231923-8cb9-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;id=u53feb24a&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=109&amp;originWidth=673&amp;originalType=url&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=80996&amp;status=done&amp;style=none&amp;taskId=u9b6ce115-37b0-49e1-a7d2-8fd047eb139&amp;title=" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> grpc </tag>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>helm 使用</title>
      <link href="/kubernetes/helm.html"/>
      <url>/kubernetes/helm.html</url>
      
        <content type="html"><![CDATA[<h1 id="Helm是什么"><a href="#Helm是什么" class="headerlink" title="Helm是什么"></a>Helm是什么</h1><p>没有使用Helm之前，在Kubernetes部署应用，我们要依次部署deployment、service等，步骤比较繁琐。况且随着很多项目微服务化，复杂的应用在容器中部署以及管理显得较为复杂。<br>helm通过打包的方式，支持发布的版本管理和控制，很大程度上简化了Kubernetes应用的部署和管理。<br>Helm本质就是让k8s的应用管理（Deployment、Service等）可配置，能动态生成。通过动态生成K8S资源清单文件（deployment.yaml、service.yaml）。然后kubectl自动调用K8S资源部署。<br>Helm是官方提供类似于YUM的包管理，是部署环境的流程封装，Helm有三个重要的概念：chart、release和Repository</p><ul><li><strong>chart</strong>是创建一个应用的信息集合，包括各种Kubernetes对象的配置模板、参数定义、依赖关系、文档说明等。可以将chart想象成apt、yum中的软件安装包。</li><li><strong>release</strong>是chart的运行实例，代表一个正在运行的应用。当chart被安装到Kubernetes集群，就生成一个release。chart能多次安装到同一个集群，每次安装都是一个release【根据chart赋值不同，完全可以部署出多个release出来】。</li><li><strong>Repository</strong>用于发布和存储 Chart 的存储库。</li></ul><p>Helm包含两个组件：Helm客户端和Tiller服务端，如下图所示：</p><p> <img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1637200168556-6019a371-dafa-4b6a-a3a9-bfbf682b4088.png#clientId=u3c4056cd-8a23-4&amp;from=paste&amp;id=u4c4d8ae3&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=309&amp;originWidth=845&amp;originalType=url&amp;ratio=1&amp;size=71824&amp;status=done&amp;style=none&amp;taskId=u1f2ea02d-ed2f-4a34-b45a-dcc30028052" alt="image.png"></p><h1 id="Helm安装"><a href="#Helm安装" class="headerlink" title="Helm安装"></a>Helm安装</h1><h3 id="1-用二进制版本安装"><a href="#1-用二进制版本安装" class="headerlink" title="1.用二进制版本安装"></a>1.用二进制版本安装</h3><p>每个Helm <a href="https://github.com/helm/helm/releases">版本</a>都提供了各种操作系统的二进制版本，这些版本可以手动下载和安装。</p><ol><li>下载 <a href="https://github.com/helm/helm/releases">需要的版本</a></li><li>解压(tar -zxvf helm-v3.0.0-linux-amd64.tar.gz)</li><li>在解压目中找到helm程序，移动到需要的目录中(mv linux-amd64/helm /usr/local/bin/helm)</li></ol><p>然后就可以执行客户端程序并 <a href="https://helm.sh/zh/docs/intro/quickstart/#%e5%88%9d%e5%a7%8b%e5%8c%96">添加稳定仓库</a>: helm help.</p><h3 id="2-使用脚本安装"><a href="#2-使用脚本安装" class="headerlink" title="2.使用脚本安装"></a>2.使用脚本安装</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> <span class="token parameter variable">-o</span> get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3<span class="token function">chmod</span> <span class="token number">700</span> get_helm.sh./get_helm.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="3-启动服务并开启chart支持"><a href="#3-启动服务并开启chart支持" class="headerlink" title="3.启动服务并开启chart支持"></a>3.启动服务并开启chart支持</h3><blockquote><p>1.参考地址：<a href="https://blog.csdn.net/submarineas/article/details/112788040">https://blog.csdn.net/submarineas/article/details/112788040</a> 开启https、设置证书位置<br>2.生成证书：<br>openssl genrsa -out ca.key 4096</p></blockquote><blockquote><p>openssl req -x509 -new -nodes -sha512 -days 3650 <br>    -subj “/C=CN/ST=Beijing/L=Beijing/O=chinatelecom/OU=ecloudcaas/CN=192.168.56.11” <br>    -key ca.key <br>    -out ca.crt</p><p>openssl genrsa -out 192.168.56.11.key 4096</p><p>openssl req -sha512 -new <br>    -subj “/C=CN/ST=Beijing/L=Beijing/O=chinatelecom/OU=ecloudcaas/CN=192.168.56.11” <br>    -key 192.168.56.11.key <br>    -out 192.168.56.11.csr </p><p>openssl x509 -req -sha512 -days 3650 <br>    -extfile v3.ext <br>    -CA ca.crt -CAkey ca.key -CAcreateserial <br>    -in 192.168.56.11.csr <br>    -out 192.168.56.11.crt</p><p>openssl x509 -inform PEM -in 192.168.56.11.crt -out 192.168.56.11.cert</p><p>cp 192.168.56.11.cert /etc/docker/cert/192.168.56.11/<br>cp 192.168.56.11.key /etc/docker/cert/192.168.56.11/<br>cp ca.crt /etc/docker/cert/192.168.56.11/</p><p>3.启动服务加上后缀<br>./install.sh –with-notary –with-clair –with-chartmuseum<br>4.添加repo<br>helm repo add –ca-file /etc/docker/certs.d/ca.crt –username admin –password harbor myrepo <a href="https://192.168.56.11/chartrepo/demo">https://192.168.56.11/chartrepo/demo</a></p></blockquote><h1 id="Helm使用"><a href="#Helm使用" class="headerlink" title="Helm使用"></a>Helm使用</h1><h2 id="1-常用命令"><a href="#1-常用命令" class="headerlink" title="1.常用命令"></a>1.常用命令</h2><h3 id="char-管理"><a href="#char-管理" class="headerlink" title="char 管理"></a>char 管理</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span> create：根据给定的name创建一个新chart<span class="token number">2</span> fetch：从仓库下载chart，并<span class="token punctuation">(</span>可选项<span class="token punctuation">)</span>将其解压缩到本地目录中<span class="token number">3</span> inspect：chart详情<span class="token number">4</span> helm package <span class="token punctuation">[</span>CHART_PATH<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">..</span>.<span class="token punctuation">]</span> <span class="token punctuation">[</span>flags<span class="token punctuation">]</span>  ：打包chart目录到一个chart归档<span class="token number">5</span> lint：语法检测<span class="token number">6</span> verify：验证位于给定路径的chart已被签名且有效<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="release-管理"><a href="#release-管理" class="headerlink" title="release 管理"></a>release 管理</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span> get：下载一个release<span class="token number">2</span> delete：根据给定的release name，从Kubernetes中删除指定的release<span class="token number">3</span> install：安装一个chart<span class="token number">4</span> list：显示release列表  <span class="token number">5</span> upgrade：升级release  helm upgrade mytest-app01 <span class="token builtin class-name">.</span><span class="token number">6</span> rollback：回滚release到之前的一个版本  helm rollback <span class="token operator">&lt;</span>RELEASE<span class="token operator">&gt;</span> <span class="token punctuation">[</span>REVISION<span class="token punctuation">]</span> <span class="token punctuation">[</span>flags<span class="token punctuation">]</span><span class="token number">7</span> status：显示release状态信息<span class="token number">8</span> history：Fetch release历史信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="helm常见操作"><a href="#helm常见操作" class="headerlink" title="helm常见操作"></a>helm常见操作</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 添加仓库</span>helm repo <span class="token function">add</span> elastic https://helm.elastic.co<span class="token comment">#查看helm仓库列表</span>helm repo list<span class="token comment"># 创建chart【可供参考，一般都是自己手动创建chart】</span>helm create CHART_PATH<span class="token comment"># 根据指定chart部署一个release</span>helm <span class="token function">install</span> <span class="token parameter variable">--name</span> RELEASE_NAME CHART_PATH<span class="token comment"># 根据指定chart模拟安装一个release，并打印处debug信息</span>helm <span class="token function">install</span> --dry-run <span class="token parameter variable">--debug</span> <span class="token parameter variable">--name</span> RELEASE_NAME CHART_PATH<span class="token comment"># 列出已经部署的release</span>helm list<span class="token comment"># 列出所有的release</span>helm list <span class="token parameter variable">--all</span><span class="token comment"># 查询指定release的状态</span>helm status Release_NAME<span class="token comment"># 回滚到指定版本的release，这里指定的helm release版本</span>helm rollback Release_NAME REVISION_NUM<span class="token comment"># 查看指定release的历史信息</span>helm <span class="token function">history</span> Release_NAME<span class="token comment"># 对指定chart打包</span>helm package CHART_PATH    如：helm package my-test-app/<span class="token comment"># 对指定chart进行语法检测</span>helm lint CHART_PATH<span class="token comment"># 查看指定chart详情</span>helm inspect CHART_PATH<span class="token comment"># 从Kubernetes中删除指定release相关的资源【helm list --all 中仍然可见release记录信息】</span>helm delete RELEASE_NAME<span class="token comment"># 从Kubernetes中删除指定release相关的资源，并删除release记录</span>helm delete <span class="token parameter variable">--purge</span> RELEASE_NAME<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master my-test-app<span class="token punctuation">]</span><span class="token comment"># tree</span><span class="token builtin class-name">.</span>├── Chart.yaml├── my-app-chart-0.1.0.tgz├── templates│   ├── deployment.yaml│   └── service.yaml└── values.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Chart-yaml"><a href="#Chart-yaml" class="headerlink" title="Chart.yaml"></a>Chart.yaml</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>master my<span class="token punctuation">-</span>test<span class="token punctuation">-</span>app<span class="token punctuation">]</span><span class="token comment"># cat Chart.yaml </span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">appVersion</span><span class="token punctuation">:</span> v2.2<span class="token key atrule">version</span><span class="token punctuation">:</span> 0.1.0<span class="token key atrule">name</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>app<span class="token punctuation">-</span>chart<span class="token key atrule">description</span><span class="token punctuation">:</span> my test app<span class="token key atrule">keywords</span><span class="token punctuation">:</span><span class="token punctuation">-</span> myapp<span class="token key atrule">maintainers</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">email</span><span class="token punctuation">:</span> zhang@test.com  <span class="token key atrule">name</span><span class="token punctuation">:</span> zhang<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="values-yaml"><a href="#values-yaml" class="headerlink" title="values.yaml"></a>values.yaml</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>master my<span class="token punctuation">-</span>test<span class="token punctuation">-</span>app<span class="token punctuation">]</span><span class="token comment"># cat values.yaml </span><span class="token key atrule">deployname</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>test<span class="token punctuation">-</span>app02<span class="token key atrule">replicaCount</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token key atrule">images</span><span class="token punctuation">:</span>  <span class="token key atrule">repository</span><span class="token punctuation">:</span> registry.cn<span class="token punctuation">-</span>beijing.aliyuncs.com/google_registry/myapp  <span class="token key atrule">tag</span><span class="token punctuation">:</span> v3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="templates"><a href="#templates" class="headerlink" title="templates"></a>templates</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>master templates<span class="token punctuation">]</span><span class="token comment"># cat deployment.yaml </span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> .Values.deployname <span class="token punctuation">}</span><span class="token punctuation">}</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> mytestapp<span class="token punctuation">-</span>deploy<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> .Values.replicaCount <span class="token punctuation">}</span><span class="token punctuation">}</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> mytestapp      <span class="token key atrule">env</span><span class="token punctuation">:</span> test  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> mytestapp        <span class="token key atrule">env</span><span class="token punctuation">:</span> test        <span class="token key atrule">description</span><span class="token punctuation">:</span> mytest    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> myapp<span class="token punctuation">-</span>pod        <span class="token key atrule">image</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> .Values.images.repository <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token punctuation">{</span> .Values.images.tag <span class="token punctuation">}</span><span class="token punctuation">}</span>        <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent        <span class="token key atrule">ports</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>test<span class="token punctuation">-</span>app  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> NodePort  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> mytestapp    <span class="token key atrule">env</span><span class="token punctuation">:</span> test  <span class="token key atrule">ports</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> http    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span>    <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">80</span>    <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="上传chart包"><a href="#上传chart包" class="headerlink" title="上传chart包"></a>上传chart包</h3><blockquote><p>curl –request POST      –form chart=@<code>cat tgz.txt</code>      –user admin:harbor      <a href="https://192.168.56.11/api/chartrepo/demo/charts">https://192.168.56.11/api/chartrepo/demo/charts</a>  –cacert /etc/docker/certs.d/ca.crt</p></blockquote><h3 id="下载chart包，并进行部署"><a href="#下载chart包，并进行部署" class="headerlink" title="下载chart包，并进行部署"></a>下载chart包，并进行部署</h3><blockquote><p>安装<br>helm install myapp  myrepo/${CHART_NAME} –version ${CHART_VERSION}.$BUILD_NUMBER -f ../helmValue/dev.yaml</p><p>更新<br>helm upgrade myapp  myrepo/${CHART_NAME} –version ${CHART_VERSION}.$BUILD_NUMBER -f ../helmValue/dev.yaml</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ingress 使用</title>
      <link href="/kubernetes/ingress-wang-guan.html"/>
      <url>/kubernetes/ingress-wang-guan.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1636942313976-1d7d8c2d-1572-4d77-8c72-cf922f22632a.png#clientId=u668757c7-66ce-4&amp;from=paste&amp;height=702&amp;id=u7c561c92&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=702&amp;originWidth=835&amp;originalType=binary&amp;ratio=1&amp;size=213649&amp;status=done&amp;style=none&amp;taskId=uf62a847f-7f95-4d73-b15c-845e0c50dd1&amp;width=835" alt="image.png"></p><h2 id="官方文档地址："><a href="#官方文档地址：" class="headerlink" title="官方文档地址："></a>官方文档地址：</h2><p><a href="https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class">https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzI0MDQ4MTM5NQ==&amp;mid=2247512338&amp;idx=3&amp;sn=21ea67d53e7ae9409606df0933aeb917&amp;chksm=e918d40ede6f5d1894c00c2d7a1de2933e66ffc8b4337f06f375d5ff4059d921a13417862ea7&amp;scene=178&amp;cur_album_id=1790241575034290179#rd">https://mp.weixin.qq.com/s?__biz=MzI0MDQ4MTM5NQ==&amp;mid=2247512338&amp;idx=3&amp;sn=21ea67d53e7ae9409606df0933aeb917&amp;chksm=e918d40ede6f5d1894c00c2d7a1de2933e66ffc8b4337f06f375d5ff4059d921a13417862ea7&amp;scene=178&amp;cur_album_id=1790241575034290179#rd</a></p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>必须先具有<a href="https://kubernetes.io/zh/docs/concepts/services-networking/ingress-controllers">Ingress 控制器</a>才可以使用，参考配置 </p><h4 id="1-参考配置-1-22版本"><a href="#1-参考配置-1-22版本" class="headerlink" title="1.参考配置(1.22版本)"></a>1.参考配置(1.22版本)</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Namespace<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx <span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/controller-serviceaccount.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> controller  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token key atrule">automountServiceAccountToken</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/controller-configmap.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> controller  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>controller  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token key atrule">data</span><span class="token punctuation">:</span><span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/clusterrole.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">''</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> configmaps      <span class="token punctuation">-</span> endpoints      <span class="token punctuation">-</span> nodes      <span class="token punctuation">-</span> pods      <span class="token punctuation">-</span> secrets    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> list      <span class="token punctuation">-</span> watch  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">''</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> nodes    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> get  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">''</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> services    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> get      <span class="token punctuation">-</span> list      <span class="token punctuation">-</span> watch  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> networking.k8s.io    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ingresses    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> get      <span class="token punctuation">-</span> list      <span class="token punctuation">-</span> watch  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">''</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> events    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> create      <span class="token punctuation">-</span> patch  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> networking.k8s.io    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ingresses/status    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> update  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> networking.k8s.io    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ingressclasses    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> get      <span class="token punctuation">-</span> list      <span class="token punctuation">-</span> watch<span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/clusterrolebinding.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRoleBinding<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io  <span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token key atrule">subjects</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount    <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/controller-role.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Role<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> controller  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">''</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> namespaces    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> get  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">''</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> configmaps      <span class="token punctuation">-</span> pods      <span class="token punctuation">-</span> secrets      <span class="token punctuation">-</span> endpoints    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> get      <span class="token punctuation">-</span> list      <span class="token punctuation">-</span> watch  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">''</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> services    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> get      <span class="token punctuation">-</span> list      <span class="token punctuation">-</span> watch  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> networking.k8s.io    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ingresses    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> get      <span class="token punctuation">-</span> list      <span class="token punctuation">-</span> watch  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> networking.k8s.io    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ingresses/status    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> update  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> networking.k8s.io    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ingressclasses    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> get      <span class="token punctuation">-</span> list      <span class="token punctuation">-</span> watch  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">''</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> configmaps    <span class="token key atrule">resourceNames</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ingress<span class="token punctuation">-</span>controller<span class="token punctuation">-</span>leader    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> get      <span class="token punctuation">-</span> update  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">''</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> configmaps    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> create  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">''</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> events    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> create      <span class="token punctuation">-</span> patch<span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/controller-rolebinding.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> RoleBinding<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> controller  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io  <span class="token key atrule">kind</span><span class="token punctuation">:</span> Role  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token key atrule">subjects</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount    <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/controller-service-webhook.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> controller  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>controller<span class="token punctuation">-</span>admission  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> ClusterIP  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> https<span class="token punctuation">-</span>webhook      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">443</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> webhook      <span class="token key atrule">appProtocol</span><span class="token punctuation">:</span> https  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> controller<span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/controller-deployment.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> DaemonSet<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> controller  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>controller  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx      <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx      <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> controller  <span class="token key atrule">revisionHistoryLimit</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">minReadySeconds</span><span class="token punctuation">:</span> <span class="token number">0</span>  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx        <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx        <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> controller    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">hostNetwork</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>      <span class="token key atrule">dnsPolicy</span><span class="token punctuation">:</span> ClusterFirst      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> controller          <span class="token key atrule">image</span><span class="token punctuation">:</span> registry.cn<span class="token punctuation">-</span>beijing.aliyuncs.com/kole_chang/controller<span class="token punctuation">:</span>v1.0.0          <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent          <span class="token key atrule">lifecycle</span><span class="token punctuation">:</span>            <span class="token key atrule">preStop</span><span class="token punctuation">:</span>              <span class="token key atrule">exec</span><span class="token punctuation">:</span>                <span class="token key atrule">command</span><span class="token punctuation">:</span>                  <span class="token punctuation">-</span> /wait<span class="token punctuation">-</span>shutdown          <span class="token key atrule">args</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> /nginx<span class="token punctuation">-</span>ingress<span class="token punctuation">-</span>controller            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>election<span class="token punctuation">-</span>id=ingress<span class="token punctuation">-</span>controller<span class="token punctuation">-</span>leader            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>controller<span class="token punctuation">-</span>class=k8s.io/ingress<span class="token punctuation">-</span>nginx            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>configmap=$(POD_NAMESPACE)/ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>controller            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>validating<span class="token punctuation">-</span>webhook=<span class="token punctuation">:</span><span class="token number">8443</span>            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>validating<span class="token punctuation">-</span>webhook<span class="token punctuation">-</span>certificate=/usr/local/certificates/cert            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>validating<span class="token punctuation">-</span>webhook<span class="token punctuation">-</span>key=/usr/local/certificates/key            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>watch<span class="token punctuation">-</span>ingress<span class="token punctuation">-</span>without<span class="token punctuation">-</span>class=true          <span class="token key atrule">securityContext</span><span class="token punctuation">:</span>            <span class="token key atrule">capabilities</span><span class="token punctuation">:</span>              <span class="token key atrule">drop</span><span class="token punctuation">:</span>                <span class="token punctuation">-</span> ALL              <span class="token key atrule">add</span><span class="token punctuation">:</span>                <span class="token punctuation">-</span> NET_BIND_SERVICE            <span class="token key atrule">runAsUser</span><span class="token punctuation">:</span> <span class="token number">101</span>            <span class="token key atrule">allowPrivilegeEscalation</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>          <span class="token key atrule">env</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> POD_NAME              <span class="token key atrule">valueFrom</span><span class="token punctuation">:</span>                <span class="token key atrule">fieldRef</span><span class="token punctuation">:</span>                  <span class="token key atrule">fieldPath</span><span class="token punctuation">:</span> metadata.name            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> POD_NAMESPACE              <span class="token key atrule">valueFrom</span><span class="token punctuation">:</span>                <span class="token key atrule">fieldRef</span><span class="token punctuation">:</span>                  <span class="token key atrule">fieldPath</span><span class="token punctuation">:</span> metadata.namespace            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> LD_PRELOAD              <span class="token key atrule">value</span><span class="token punctuation">:</span> /usr/local/lib/libmimalloc.so          <span class="token key atrule">livenessProbe</span><span class="token punctuation">:</span>            <span class="token key atrule">failureThreshold</span><span class="token punctuation">:</span> <span class="token number">5</span>            <span class="token key atrule">httpGet</span><span class="token punctuation">:</span>              <span class="token key atrule">path</span><span class="token punctuation">:</span> /healthz              <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">10254</span>              <span class="token key atrule">scheme</span><span class="token punctuation">:</span> HTTP            <span class="token key atrule">initialDelaySeconds</span><span class="token punctuation">:</span> <span class="token number">10</span>            <span class="token key atrule">periodSeconds</span><span class="token punctuation">:</span> <span class="token number">10</span>            <span class="token key atrule">successThreshold</span><span class="token punctuation">:</span> <span class="token number">1</span>            <span class="token key atrule">timeoutSeconds</span><span class="token punctuation">:</span> <span class="token number">1</span>          <span class="token key atrule">readinessProbe</span><span class="token punctuation">:</span>            <span class="token key atrule">failureThreshold</span><span class="token punctuation">:</span> <span class="token number">3</span>            <span class="token key atrule">httpGet</span><span class="token punctuation">:</span>              <span class="token key atrule">path</span><span class="token punctuation">:</span> /healthz              <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">10254</span>              <span class="token key atrule">scheme</span><span class="token punctuation">:</span> HTTP            <span class="token key atrule">initialDelaySeconds</span><span class="token punctuation">:</span> <span class="token number">10</span>            <span class="token key atrule">periodSeconds</span><span class="token punctuation">:</span> <span class="token number">10</span>            <span class="token key atrule">successThreshold</span><span class="token punctuation">:</span> <span class="token number">1</span>            <span class="token key atrule">timeoutSeconds</span><span class="token punctuation">:</span> <span class="token number">1</span>          <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> http              <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> https              <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">443</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> webhook              <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">8443</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP          <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> webhook<span class="token punctuation">-</span>cert              <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /usr/local/certificates/              <span class="token key atrule">readOnly</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>          <span class="token key atrule">resources</span><span class="token punctuation">:</span>            <span class="token key atrule">requests</span><span class="token punctuation">:</span>              <span class="token key atrule">cpu</span><span class="token punctuation">:</span> 100m              <span class="token key atrule">memory</span><span class="token punctuation">:</span> 90Mi      <span class="token key atrule">nodeSelector</span><span class="token punctuation">:</span>        <span class="token key atrule">kubernetes.io/os</span><span class="token punctuation">:</span> linux      <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx      <span class="token key atrule">terminationGracePeriodSeconds</span><span class="token punctuation">:</span> <span class="token number">300</span>      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> webhook<span class="token punctuation">-</span>cert          <span class="token key atrule">secret</span><span class="token punctuation">:</span>            <span class="token key atrule">secretName</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission<span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/controller-ingressclass.yaml</span><span class="token comment"># We don't support namespaced ingressClass yet</span><span class="token comment"># So a ClusterRole and a ClusterRoleBinding is required</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> IngressClass<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> controller  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">controller</span><span class="token punctuation">:</span> k8s.io/ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/admission-webhooks/validating-webhook.yaml</span><span class="token comment"># before changing this value, check the required kubernetes version</span><span class="token comment"># https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#prerequisites</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> admissionregistration.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ValidatingWebhookConfiguration<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> admission<span class="token punctuation">-</span>webhook  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission<span class="token key atrule">webhooks</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> validate.nginx.ingress.kubernetes.io    <span class="token key atrule">matchPolicy</span><span class="token punctuation">:</span> Equivalent    <span class="token key atrule">rules</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> networking.k8s.io        <span class="token key atrule">apiVersions</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> v1        <span class="token key atrule">operations</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> CREATE          <span class="token punctuation">-</span> UPDATE        <span class="token key atrule">resources</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> ingresses    <span class="token key atrule">failurePolicy</span><span class="token punctuation">:</span> Fail    <span class="token key atrule">sideEffects</span><span class="token punctuation">:</span> None    <span class="token key atrule">admissionReviewVersions</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> v1    <span class="token key atrule">clientConfig</span><span class="token punctuation">:</span>      <span class="token key atrule">service</span><span class="token punctuation">:</span>        <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx        <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>controller<span class="token punctuation">-</span>admission        <span class="token key atrule">path</span><span class="token punctuation">:</span> /networking/v1/ingresses<span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/admission-webhooks/job-patch/serviceaccount.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/hook</span><span class="token punctuation">:</span> pre<span class="token punctuation">-</span>install<span class="token punctuation">,</span>pre<span class="token punctuation">-</span>upgrade<span class="token punctuation">,</span>post<span class="token punctuation">-</span>install<span class="token punctuation">,</span>post<span class="token punctuation">-</span>upgrade    <span class="token key atrule">helm.sh/hook-delete-policy</span><span class="token punctuation">:</span> before<span class="token punctuation">-</span>hook<span class="token punctuation">-</span>creation<span class="token punctuation">,</span>hook<span class="token punctuation">-</span>succeeded  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> admission<span class="token punctuation">-</span>webhook<span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/admission-webhooks/job-patch/clusterrole.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/hook</span><span class="token punctuation">:</span> pre<span class="token punctuation">-</span>install<span class="token punctuation">,</span>pre<span class="token punctuation">-</span>upgrade<span class="token punctuation">,</span>post<span class="token punctuation">-</span>install<span class="token punctuation">,</span>post<span class="token punctuation">-</span>upgrade    <span class="token key atrule">helm.sh/hook-delete-policy</span><span class="token punctuation">:</span> before<span class="token punctuation">-</span>hook<span class="token punctuation">-</span>creation<span class="token punctuation">,</span>hook<span class="token punctuation">-</span>succeeded  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> admission<span class="token punctuation">-</span>webhook<span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> admissionregistration.k8s.io    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> validatingwebhookconfigurations    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> get      <span class="token punctuation">-</span> update<span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/admission-webhooks/job-patch/clusterrolebinding.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRoleBinding<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/hook</span><span class="token punctuation">:</span> pre<span class="token punctuation">-</span>install<span class="token punctuation">,</span>pre<span class="token punctuation">-</span>upgrade<span class="token punctuation">,</span>post<span class="token punctuation">-</span>install<span class="token punctuation">,</span>post<span class="token punctuation">-</span>upgrade    <span class="token key atrule">helm.sh/hook-delete-policy</span><span class="token punctuation">:</span> before<span class="token punctuation">-</span>hook<span class="token punctuation">-</span>creation<span class="token punctuation">,</span>hook<span class="token punctuation">-</span>succeeded  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> admission<span class="token punctuation">-</span>webhook<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io  <span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission<span class="token key atrule">subjects</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount    <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/admission-webhooks/job-patch/role.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Role<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/hook</span><span class="token punctuation">:</span> pre<span class="token punctuation">-</span>install<span class="token punctuation">,</span>pre<span class="token punctuation">-</span>upgrade<span class="token punctuation">,</span>post<span class="token punctuation">-</span>install<span class="token punctuation">,</span>post<span class="token punctuation">-</span>upgrade    <span class="token key atrule">helm.sh/hook-delete-policy</span><span class="token punctuation">:</span> before<span class="token punctuation">-</span>hook<span class="token punctuation">-</span>creation<span class="token punctuation">,</span>hook<span class="token punctuation">-</span>succeeded  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> admission<span class="token punctuation">-</span>webhook<span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">''</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> secrets    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> get      <span class="token punctuation">-</span> create<span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/admission-webhooks/job-patch/rolebinding.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> RoleBinding<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/hook</span><span class="token punctuation">:</span> pre<span class="token punctuation">-</span>install<span class="token punctuation">,</span>pre<span class="token punctuation">-</span>upgrade<span class="token punctuation">,</span>post<span class="token punctuation">-</span>install<span class="token punctuation">,</span>post<span class="token punctuation">-</span>upgrade    <span class="token key atrule">helm.sh/hook-delete-policy</span><span class="token punctuation">:</span> before<span class="token punctuation">-</span>hook<span class="token punctuation">-</span>creation<span class="token punctuation">,</span>hook<span class="token punctuation">-</span>succeeded  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> admission<span class="token punctuation">-</span>webhook<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io  <span class="token key atrule">kind</span><span class="token punctuation">:</span> Role  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission<span class="token key atrule">subjects</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount    <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/admission-webhooks/job-patch/job-createSecret.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> batch/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Job<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission<span class="token punctuation">-</span>create  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/hook</span><span class="token punctuation">:</span> pre<span class="token punctuation">-</span>install<span class="token punctuation">,</span>pre<span class="token punctuation">-</span>upgrade    <span class="token key atrule">helm.sh/hook-delete-policy</span><span class="token punctuation">:</span> before<span class="token punctuation">-</span>hook<span class="token punctuation">-</span>creation<span class="token punctuation">,</span>hook<span class="token punctuation">-</span>succeeded  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> admission<span class="token punctuation">-</span>webhook<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission<span class="token punctuation">-</span>create      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1        <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx        <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx        <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0        <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm        <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> admission<span class="token punctuation">-</span>webhook    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> create          <span class="token key atrule">image</span><span class="token punctuation">:</span> registry.cn<span class="token punctuation">-</span>beijing.aliyuncs.com/kole_chang/kube<span class="token punctuation">-</span>webhook<span class="token punctuation">-</span>certgen<span class="token punctuation">:</span>v1.0          <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent          <span class="token key atrule">args</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> create            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>host=ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>controller<span class="token punctuation">-</span>admission<span class="token punctuation">,</span>ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>controller<span class="token punctuation">-</span>admission.$(POD_NAMESPACE).svc            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>namespace=$(POD_NAMESPACE)            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>secret<span class="token punctuation">-</span>name=ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission          <span class="token key atrule">env</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> POD_NAMESPACE              <span class="token key atrule">valueFrom</span><span class="token punctuation">:</span>                <span class="token key atrule">fieldRef</span><span class="token punctuation">:</span>                  <span class="token key atrule">fieldPath</span><span class="token punctuation">:</span> metadata.namespace      <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> OnFailure      <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission      <span class="token key atrule">nodeSelector</span><span class="token punctuation">:</span>        <span class="token key atrule">kubernetes.io/os</span><span class="token punctuation">:</span> linux      <span class="token key atrule">securityContext</span><span class="token punctuation">:</span>        <span class="token key atrule">runAsNonRoot</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>        <span class="token key atrule">runAsUser</span><span class="token punctuation">:</span> <span class="token number">2000</span><span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/admission-webhooks/job-patch/job-patchWebhook.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> batch/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Job<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission<span class="token punctuation">-</span>patch  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/hook</span><span class="token punctuation">:</span> post<span class="token punctuation">-</span>install<span class="token punctuation">,</span>post<span class="token punctuation">-</span>upgrade    <span class="token key atrule">helm.sh/hook-delete-policy</span><span class="token punctuation">:</span> before<span class="token punctuation">-</span>hook<span class="token punctuation">-</span>creation<span class="token punctuation">,</span>hook<span class="token punctuation">-</span>succeeded  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> admission<span class="token punctuation">-</span>webhook<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission<span class="token punctuation">-</span>patch      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1        <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx        <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx        <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0        <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm        <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> admission<span class="token punctuation">-</span>webhook    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> patch          <span class="token key atrule">image</span><span class="token punctuation">:</span> registry.cn<span class="token punctuation">-</span>beijing.aliyuncs.com/kole_chang/kube<span class="token punctuation">-</span>webhook<span class="token punctuation">-</span>certgen<span class="token punctuation">:</span>v1.0          <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent          <span class="token key atrule">args</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> patch            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>webhook<span class="token punctuation">-</span>name=ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>namespace=$(POD_NAMESPACE)            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>patch<span class="token punctuation">-</span>mutating=false            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>secret<span class="token punctuation">-</span>name=ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>patch<span class="token punctuation">-</span>failure<span class="token punctuation">-</span>policy=Fail          <span class="token key atrule">env</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> POD_NAMESPACE              <span class="token key atrule">valueFrom</span><span class="token punctuation">:</span>                <span class="token key atrule">fieldRef</span><span class="token punctuation">:</span>                  <span class="token key atrule">fieldPath</span><span class="token punctuation">:</span> metadata.namespace      <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> OnFailure      <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission      <span class="token key atrule">nodeSelector</span><span class="token punctuation">:</span>        <span class="token key atrule">kubernetes.io/os</span><span class="token punctuation">:</span> linux      <span class="token key atrule">securityContext</span><span class="token punctuation">:</span>        <span class="token key atrule">runAsNonRoot</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>        <span class="token key atrule">runAsUser</span><span class="token punctuation">:</span> <span class="token number">2000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-暴露ingress服务端口"><a href="#2-暴露ingress服务端口" class="headerlink" title="2.暴露ingress服务端口"></a>2.暴露ingress服务端口</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> NodePort  <span class="token key atrule">ports</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> http    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span>    <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">80</span>    <span class="token key atrule">nodePort</span><span class="token punctuation">:</span> <span class="token number">30080</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> https    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">443</span>    <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">443</span>    <span class="token key atrule">nodePort</span><span class="token punctuation">:</span> <span class="token number">30443</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Ingress转发基本配置"><a href="#Ingress转发基本配置" class="headerlink" title="Ingress转发基本配置"></a>Ingress转发基本配置</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment">#1.22版本只能使用networking.k8s.io/v1,1.19到1.21可以使用v1beta1、v1</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.k8s.io/v1 <span class="token key atrule">kind</span><span class="token punctuation">:</span> Ingress<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">kubernetes.io/ingress.class</span><span class="token punctuation">:</span> nginx<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> nginx.text.cn     <span class="token key atrule">http</span><span class="token punctuation">:</span>      <span class="token key atrule">paths</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">pathType</span><span class="token punctuation">:</span> Prefix <span class="token comment"># 类型为前缀 三种类型：Prefix Exact ImplementationSpecific 参考Path types</span>        <span class="token key atrule">path</span><span class="token punctuation">:</span> /foo        <span class="token key atrule">backend</span><span class="token punctuation">:</span>          <span class="token key atrule">service</span><span class="token punctuation">:</span>            <span class="token key atrule">name</span><span class="token punctuation">:</span> foo            <span class="token key atrule">port</span><span class="token punctuation">:</span>              <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token number">80</span>      <span class="token punctuation">-</span> <span class="token key atrule">pathType</span><span class="token punctuation">:</span> Prefix        <span class="token key atrule">path</span><span class="token punctuation">:</span> /bar        <span class="token key atrule">backend</span><span class="token punctuation">:</span>          <span class="token key atrule">service</span><span class="token punctuation">:</span>            <span class="token key atrule">name</span><span class="token punctuation">:</span> bar            <span class="token key atrule">port</span><span class="token punctuation">:</span>              <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token number">80</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Ingress-HTTP-访问"><a href="#Ingress-HTTP-访问" class="headerlink" title="Ingress HTTP 访问"></a>Ingress HTTP 访问</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 访问地址：http://foo.bar.com:30080/php</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Ingress<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ing<span class="token punctuation">-</span>php  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">kubernetes.io/ingress.class</span><span class="token punctuation">:</span> <span class="token string">"nginx"</span> <span class="token comment">##指定Ingress Controller的类型</span>    <span class="token key atrule">nginx.ingress.kubernetes.io/rewrite-target</span><span class="token punctuation">:</span>  /<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> foo.bar.com    <span class="token key atrule">http</span><span class="token punctuation">:</span>      <span class="token key atrule">paths</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">path</span><span class="token punctuation">:</span> /php        <span class="token key atrule">pathType</span><span class="token punctuation">:</span> Prefix        <span class="token key atrule">backend</span><span class="token punctuation">:</span>          <span class="token key atrule">service</span><span class="token punctuation">:</span>            <span class="token key atrule">name</span><span class="token punctuation">:</span> php<span class="token punctuation">-</span>apache            <span class="token key atrule">port</span><span class="token punctuation">:</span>              <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token number">80</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>[</p><p>](<a href="http://foo.bar.com:30080/php">http://foo.bar.com:30080/php</a>)</p><h2 id="升级https访问"><a href="#升级https访问" class="headerlink" title="升级https访问"></a>升级https访问</h2><h4 id="1-制作证书"><a href="#1-制作证书" class="headerlink" title="1.制作证书"></a>1.制作证书</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">openssl genrsa <span class="token parameter variable">-out</span> xiejiayi.key <span class="token number">2048</span>openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-x509</span> <span class="token parameter variable">-key</span> xiejiayi.key <span class="token parameter variable">-out</span> xiejiayi.crt <span class="token parameter variable">-subj</span> /C<span class="token operator">=</span>CN/ST<span class="token operator">=</span>Shanghai/L<span class="token operator">=</span>Shanghai/O<span class="token operator">=</span>DevOps/CN<span class="token operator">=</span>www.xiejiayi.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="2-创建secret资源"><a href="#2-创建secret资源" class="headerlink" title="2.创建secret资源"></a>2.创建secret资源</h4><p>方法1：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Secret<span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">tls.crt</span><span class="token punctuation">:</span> base64 encoded cert  <span class="token key atrule">tls.key</span><span class="token punctuation">:</span> base64 encoded key<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> xiejiayi<span class="token punctuation">-</span>secret  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">type</span><span class="token punctuation">:</span> Opaque<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>方法2：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl create secret tls xiejiayi-secret <span class="token parameter variable">--cert</span><span class="token operator">=</span>xiejiayi.crt <span class="token parameter variable">--key</span><span class="token operator">=</span>xiejiayi.keykubectl describe secret xiejiayi-secret<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-调整配置启用https证书"><a href="#3-调整配置启用https证书" class="headerlink" title="3.调整配置启用https证书"></a>3.调整配置启用https证书</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 访问地址 https://foo.bar.com:30443/php 需要找到对应的nodeport对应的https映射端口访问</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Ingress<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ing<span class="token punctuation">-</span>php  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>     <span class="token key atrule">kubernetes.io/ingress.class</span><span class="token punctuation">:</span> <span class="token string">"nginx"</span> <span class="token comment">##指定Ingress Controller的类型</span>    <span class="token key atrule">nginx.ingress.kubernetes.io/rewrite-target</span><span class="token punctuation">:</span>  /    <span class="token key atrule">nginx.ingress.kubernetes.io/ssl-redirect</span><span class="token punctuation">:</span> <span class="token string">'true'</span><span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">tls</span><span class="token punctuation">:</span> <span class="token comment"># 增加证书</span>  <span class="token punctuation">-</span> <span class="token key atrule">hosts</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> foo.bar.com    <span class="token key atrule">secretName</span><span class="token punctuation">:</span> xiejiayi<span class="token punctuation">-</span>secret  <span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> foo.bar.com    <span class="token key atrule">http</span><span class="token punctuation">:</span>      <span class="token key atrule">paths</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">path</span><span class="token punctuation">:</span> /php        <span class="token key atrule">pathType</span><span class="token punctuation">:</span> Prefix        <span class="token key atrule">backend</span><span class="token punctuation">:</span>          <span class="token key atrule">service</span><span class="token punctuation">:</span>            <span class="token key atrule">name</span><span class="token punctuation">:</span> php<span class="token punctuation">-</span>apache            <span class="token key atrule">port</span><span class="token punctuation">:</span>              <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token number">80</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="采用外部访问方式"><a href="#采用外部访问方式" class="headerlink" title="采用外部访问方式"></a>采用外部访问方式</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>external<span class="token punctuation">-</span>nginx  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> http      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">80</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> https      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">443</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">443</span>  <span class="token key atrule">externalIPs</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> 192.168.56.12<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="规则重写"><a href="#规则重写" class="headerlink" title="规则重写"></a>规则重写</h2><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1637139090316-0480565b-19d0-4fab-b1d2-ffabed983f3e.png#clientId=u07e45915-c495-4&amp;from=paste&amp;height=338&amp;id=u2f1917ce&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=338&amp;originWidth=736&amp;originalType=binary&amp;ratio=1&amp;size=73598&amp;status=done&amp;style=none&amp;taskId=ub95a8020-5032-438e-8ed3-ec23d0fd349&amp;width=736" alt="image.png"></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Ingress<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>test  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">nginx.ingress.kubernetes.io/rewrite-target</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//web3.escape.com<span class="token punctuation">:</span>31802/hostname.html<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">rules</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> web4.escape.com      <span class="token key atrule">http</span><span class="token punctuation">:</span>        <span class="token key atrule">paths</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">path</span><span class="token punctuation">:</span> /            <span class="token key atrule">backend</span><span class="token punctuation">:</span>              <span class="token key atrule">serviceName</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>svc              <span class="token key atrule">servicePort</span><span class="token punctuation">:</span> <span class="token number">80</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="keepalived-VIP"><a href="#keepalived-VIP" class="headerlink" title="keepalived-VIP"></a>keepalived-VIP</h2><h3 id="rbac"><a href="#rbac" class="headerlink" title="rbac"></a>rbac</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>master keepalived<span class="token punctuation">]</span><span class="token comment"># cat rbac.yaml </span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>keepalived<span class="token punctuation">-</span>vip<span class="token key atrule">rules</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>  <span class="token key atrule">resources</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> pods  <span class="token punctuation">-</span> nodes  <span class="token punctuation">-</span> endpoints  <span class="token punctuation">-</span> services  <span class="token punctuation">-</span> configmaps  <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"list"</span><span class="token punctuation">,</span> <span class="token string">"watch"</span><span class="token punctuation">]</span><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>keepalived<span class="token punctuation">-</span>vip   <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default <span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRoleBinding<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>keepalived<span class="token punctuation">-</span>vip<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io  <span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole  <span class="token key atrule">name</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>keepalived<span class="token punctuation">-</span>vip<span class="token key atrule">subjects</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount  <span class="token key atrule">name</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>keepalived<span class="token punctuation">-</span>vip  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="configMap"><a href="#configMap" class="headerlink" title="configMap"></a>configMap</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>master keepalived<span class="token punctuation">]</span><span class="token comment"># cat configmap.yaml </span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> vip<span class="token punctuation">-</span>configmap<span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">192.168.56.15</span><span class="token punctuation">:</span> default/nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="daemonSet"><a href="#daemonSet" class="headerlink" title="daemonSet"></a>daemonSet</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>master keepalived<span class="token punctuation">]</span><span class="token comment"># cat vip-daemonset.yaml </span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> DaemonSet<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>keepalived<span class="token punctuation">-</span>vip<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>keepalived<span class="token punctuation">-</span>vip  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">name</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>keepalived<span class="token punctuation">-</span>vip    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">hostNetwork</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>      <span class="token key atrule">serviceAccount</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>keepalived<span class="token punctuation">-</span>vip      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">image</span><span class="token punctuation">:</span> aledbf/kube<span class="token punctuation">-</span>keepalived<span class="token punctuation">-</span>vip<span class="token punctuation">:</span><span class="token number">0.35</span>          <span class="token key atrule">name</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>keepalived<span class="token punctuation">-</span>vip          <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent          <span class="token key atrule">livenessProbe</span><span class="token punctuation">:</span>            <span class="token key atrule">httpGet</span><span class="token punctuation">:</span>              <span class="token key atrule">path</span><span class="token punctuation">:</span> /health              <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span>            <span class="token key atrule">initialDelaySeconds</span><span class="token punctuation">:</span> <span class="token number">15</span>            <span class="token key atrule">timeoutSeconds</span><span class="token punctuation">:</span> <span class="token number">3</span>          <span class="token key atrule">securityContext</span><span class="token punctuation">:</span>            <span class="token key atrule">privileged</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>          <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /lib/modules              <span class="token key atrule">name</span><span class="token punctuation">:</span> modules              <span class="token key atrule">readOnly</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>            <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /dev              <span class="token key atrule">name</span><span class="token punctuation">:</span> dev          <span class="token comment"># use downward API</span>          <span class="token key atrule">env</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> POD_NAME              <span class="token key atrule">valueFrom</span><span class="token punctuation">:</span>                <span class="token key atrule">fieldRef</span><span class="token punctuation">:</span>                  <span class="token key atrule">fieldPath</span><span class="token punctuation">:</span> metadata.name            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> POD_NAMESPACE              <span class="token key atrule">valueFrom</span><span class="token punctuation">:</span>                <span class="token key atrule">fieldRef</span><span class="token punctuation">:</span>                  <span class="token key atrule">fieldPath</span><span class="token punctuation">:</span> metadata.namespace          <span class="token comment"># to use unicast</span>          <span class="token key atrule">args</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>services<span class="token punctuation">-</span>configmap=default/vip<span class="token punctuation">-</span>configmap            <span class="token comment"># unicast uses the ip of the nodes instead of multicast</span>            <span class="token comment"># this is useful if running in cloud providers (like AWS)</span>            <span class="token comment">#- --use-unicast=true</span>      <span class="token key atrule">nodeSelector</span><span class="token punctuation">:</span>        <span class="token key atrule">kubernetes.io/os</span><span class="token punctuation">:</span> linux      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> modules          <span class="token key atrule">hostPath</span><span class="token punctuation">:</span>            <span class="token key atrule">path</span><span class="token punctuation">:</span> /lib/modules        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> dev          <span class="token key atrule">hostPath</span><span class="token punctuation">:</span>            <span class="token key atrule">path</span><span class="token punctuation">:</span> /dev      <span class="token comment">#nodeSelector:</span>      <span class="token comment">#  type: worker</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ServiceAccount 使用</title>
      <link href="/kubernetes/serviceaccount.html"/>
      <url>/kubernetes/serviceaccount.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、创建-Service-Account"><a href="#一、创建-Service-Account" class="headerlink" title="一、创建 Service Account"></a>一、创建 Service Account</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 创建sa账号</span>root@k8s-master pv<span class="token punctuation">]</span><span class="token comment"># kubectl create serviceaccount xjy</span>serviceaccount/xjy created<span class="token punctuation">[</span>root@k8s-master pv<span class="token punctuation">]</span><span class="token comment"># kubectl get sa xjy -o yaml</span>apiVersion: v1kind: ServiceAccountmetadata:  creationTimestamp: <span class="token string">"2021-11-16T02:17:24Z"</span>  name: xjy  namespace: default  resourceVersion: <span class="token string">"236090"</span>  uid: a43c6d88-1633-4cc2-ac03-059f6767a197secrets:- name: xjy-token-l4cnc<span class="token comment"># 自动创建secret</span><span class="token punctuation">[</span>root@k8s-master pv<span class="token punctuation">]</span><span class="token comment"># kubectl get secrets xjy-token-l4cnc -o yaml</span>apiVersion: v1data:  ca.crt: <span class="token punctuation">(</span>BASE64<span class="token punctuation">)</span>  token: <span class="token punctuation">(</span>BASE64<span class="token punctuation">)</span>kind: Secretmetadata:  annotations:    kubernetes.io/service-account.name: xjy    kubernetes.io/service-account.uid: a43c6d88-1633-4cc2-ac03-059f6767a197  creationTimestamp: <span class="token string">"2021-11-16T02:17:24Z"</span>  name: xjy-token-l4cnc  namespace: default  resourceVersion: <span class="token string">"236089"</span>  uid: ff3f307e-0d3c-4380-bbd5-2e7a42e197actype: kubernetes.io/service-account-token<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、添加-ImagePullSecrets"><a href="#二、添加-ImagePullSecrets" class="headerlink" title="二、添加 ImagePullSecrets"></a>二、添加 ImagePullSecrets</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">imagePullSecrets</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> xiejiayi<span class="token punctuation">-</span>secret<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">creationTimestamp</span><span class="token punctuation">:</span> <span class="token string">"2021-11-16T02:17:24Z"</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> xjy  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default  <span class="token key atrule">resourceVersion</span><span class="token punctuation">:</span> <span class="token string">"236738"</span>  <span class="token key atrule">uid</span><span class="token punctuation">:</span> a43c6d88<span class="token punctuation">-</span>1633<span class="token punctuation">-</span>4cc2<span class="token punctuation">-</span>ac03<span class="token punctuation">-</span>059f6767a197<span class="token key atrule">secrets</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> xjy<span class="token punctuation">-</span>token<span class="token punctuation">-</span>l4c<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>弹性伸缩 使用</title>
      <link href="/kubernetes/k8s-wen-ti-ji-lu.html"/>
      <url>/kubernetes/k8s-wen-ti-ji-lu.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-calico-x2F-node-is-not-ready-BIRD-is-not-ready-BGP-not-established-with-192-168-56-12-192-168-56-10"><a href="#1-calico-x2F-node-is-not-ready-BIRD-is-not-ready-BGP-not-established-with-192-168-56-12-192-168-56-10" class="headerlink" title="1.calico/node is not ready: BIRD is not ready: BGP not established with 192.168.56.12,192.168.56.10"></a>1.calico/node is not ready: BIRD is not ready: BGP not established with 192.168.56.12,192.168.56.10</h3><blockquote><p><strong>interface=INTERFACE-REGEX</strong>配置可以指定calico使用匹配的网卡上的第一个IP地址。列出网卡和IP地址的顺序取决于系统。匹配支持goalong的正则语法。例如：</p><h1 id="Valid-IP-address-on-interface-eth0-eth1-eth2-etc"><a href="#Valid-IP-address-on-interface-eth0-eth1-eth2-etc" class="headerlink" title="Valid IP address on interface eth0, eth1, eth2 etc.*"></a>Valid IP address on interface eth0, eth1, eth2 etc.*</h1><p> IP_AUTODETECTION_METHOD=interface=eth.*<br>IP6_AUTODETECTION_METHOD=interface=eth.*<br><strong>解决方案：</strong></p></blockquote><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 修改calico。yaml文件</span><span class="token comment"># Specify interface</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> IP_AUTODETECTION_METHOD              <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">"interface=enp.*"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1637809959372-a4b604a7-643d-4fba-8039-e594f8ec3d9d.png#clientId=u671c4818-d2a8-4&amp;from=paste&amp;height=380&amp;id=u8b8180f0&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=380&amp;originWidth=638&amp;originalType=binary&amp;ratio=1&amp;size=27126&amp;status=done&amp;style=none&amp;taskId=u1fe11ff9-9375-4a8f-b2f2-4f94cc175d6&amp;width=638" alt="image.png"></p></blockquote><h3 id="2-打开-prometheus-的监控界面，在菜单的-status-gt-Targets-中，看到-cadvisor-与-nodes-的状态都是-DOWN-而其他-api-servers-和-endpoints-是-UP-状态。DOWN-状态下的错误消息显示-server-returned-HTTP-status-403-Forbidden"><a href="#2-打开-prometheus-的监控界面，在菜单的-status-gt-Targets-中，看到-cadvisor-与-nodes-的状态都是-DOWN-而其他-api-servers-和-endpoints-是-UP-状态。DOWN-状态下的错误消息显示-server-returned-HTTP-status-403-Forbidden" class="headerlink" title="2.打开 prometheus 的监控界面，在菜单的 status -> Targets 中，看到 cadvisor 与 nodes 的状态都是 DOWN. 而其他 api-servers 和 endpoints 是 UP 状态。DOWN 状态下的错误消息显示 server returned HTTP status 403 Forbidden"></a>2.打开 prometheus 的监控界面，在菜单的 status -&gt; Targets 中，看到 cadvisor 与 nodes 的状态都是 DOWN. 而其他 api-servers 和 endpoints 是 UP 状态。DOWN 状态下的错误消息显示 server returned HTTP status 403 Forbidden</h3><blockquote><p><a href="https://www.cnblogs.com/qkhh/p/14517861.html">https://www.cnblogs.com/qkhh/p/14517861.html</a><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1637822222465-20e6bc52-36ff-4a41-af07-89511439df67.png#clientId=u671c4818-d2a8-4&amp;from=paste&amp;height=411&amp;id=ue5955bee&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=411&amp;originWidth=899&amp;originalType=binary&amp;ratio=1&amp;size=30130&amp;status=done&amp;style=none&amp;taskId=u43ae94d4-266f-4037-ab4d-230a1ac17a6&amp;width=899" alt="image.png"><br>问题就出现标红的那一行。由于 cadvisor 对应的 api 是，/api/v1/nodes/${1}/proxy/metrics/cadvisor   （这里的 ${1} 会替换成具体的节点名称）。所属的 api 资源 nodes/proxy 没有被授权。如果加上授权：<br><strong>resources: [“nodes”, “nodes/proxy”, “nodes/metrics”, “services”, “endpoints”, “pods”]</strong><br>再重启 prometheus，cadvisor 和 nodes 的状态都变成 UP 了。</p></blockquote><h3 id="3-harbor上传镜像提示-http-server-gave-HTTP-response-to-HTTPS-client解决方案"><a href="#3-harbor上传镜像提示-http-server-gave-HTTP-response-to-HTTPS-client解决方案" class="headerlink" title="3.harbor上传镜像提示 http: server gave HTTP response to HTTPS client解决方案"></a>3.harbor上传镜像提示 <a href="https://www.cnblogs.com/xlizi/p/13553048.html">http: server gave HTTP response to HTTPS client解决方案</a></h3><blockquote><p><strong>在路径/etc/docker/daemon.json填写harbor配置信息</strong><br>“insecure-registries”:[“192.168.56.11:8084”],<br>重启docker<br>sudo systemctl daemon-reload<br>sudo service docker restart </p></blockquote><h3 id="4-kubelet、docker的状态正常但是提示The-connection-to-the-server-192-168-10-10-6443-was-refused-did-you-specify-the-right-host-or-port"><a href="#4-kubelet、docker的状态正常但是提示The-connection-to-the-server-192-168-10-10-6443-was-refused-did-you-specify-the-right-host-or-port" class="headerlink" title="4.kubelet、docker的状态正常但是提示The connection to the server 192.168.10.10:6443 was refused - did you specify the right host or port?"></a>4.kubelet、docker的状态正常但是提示The connection to the server 192.168.10.10:6443 was refused - did you specify the right host or port?</h3><blockquote><p><strong>参考地址：</strong><a href="https://blog.csdn.net/qq_35566365/article/details/116455177"><strong>https://blog.csdn.net/qq_35566365/article/details/116455177</strong></a><br>原因为etcd服务挂了，排查<br>docker ps 发现apiservice和etcd没有启动<br>通过docker logs 查看日志apiservice<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1638757760912-08bc9231-e5ce-4fd8-81a7-c98527536f6e.png#clientId=u3c9dd494-5d32-4&amp;from=paste&amp;height=125&amp;id=u4454e9cc&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=125&amp;originWidth=1094&amp;originalType=binary&amp;ratio=1&amp;size=19554&amp;status=done&amp;style=none&amp;taskId=ubba0b847-61f7-4b94-a503-826e9cbc7e6&amp;width=1094" alt="image.png"><br>发现apiservice无法访问 127.0.0.1:2379，<br>cat /etc/kubernetes/manifests/kube-apiserver.yaml 发现 对应的2379为etcd的端口<br>在访问查看etcd的日志<br>panic: freepages: failed to get all reachable pages (page 8463496752509895293: out of bounds: 6010)<br><strong>处理方案：会导致所有的数据丢失</strong><br>root@lax-01:/var/lib/etcd# cp xxx/etcd/** /var/lib/etcd<br>root@lax-01:/var/lib/etcd# rm -rf /var/lib/etcd/**</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>StatefulSet有状态应用 使用</title>
      <link href="/kubernetes/statefulset-you-zhuang-tai-fu-wu.html"/>
      <url>/kubernetes/statefulset-you-zhuang-tai-fu-wu.html</url>
      
        <content type="html"><![CDATA[<h4 id="参考地址：https-www-jianshu-com-p-693fe35a9156"><a href="#参考地址：https-www-jianshu-com-p-693fe35a9156" class="headerlink" title="参考地址：https://www.jianshu.com/p/693fe35a9156"></a>参考地址：<a href="https://www.jianshu.com/p/693fe35a9156">https://www.jianshu.com/p/693fe35a9156</a></h4><h2 id="一、StatefulSet组成部分"><a href="#一、StatefulSet组成部分" class="headerlink" title="一、StatefulSet组成部分"></a>一、StatefulSet组成部分</h2><ul><li><strong>Headless Service</strong>：用来定义Pod网络标识( DNS domain)。</li><li><strong>volumeClaimTemplates <strong>：存储卷申请模板，创建PVC，指定pvc名称大小，将</strong>自动创建pvc</strong>，且pvc必须由存储类供应。</li><li>**StatefulSet **：定义具体应用，名为Nginx，有三个Pod副本，并为每个Pod定义了一个域名部署statefulset。<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">为什么需要volumeClaimTemplate？对于有状态的副本集都会用到持久存储，对于分布式系统来讲，<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>red</span><span class="token punctuation">&gt;</span></span>它的最大特点是数据是不一样的<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>red</span><span class="token punctuation">&gt;</span></span>，所以各个节点不能使用同一存储卷，每个节点有自已的专用存储，但是如果在Deployment中的Pod template里定义的存储卷，是所有副本集共用一个存储卷，数据是相同的，因为是基于模板来的 ，而statefulset中每个Pod都要自已的专有存储卷，所以statefulset的存储卷就不能再用Pod模板来创建了，于是statefulSet使用volumeClaimTemplate，称为卷申请模板，它会为每个Pod生成不同的pvc，并绑定pv，从而实现各pod有专用存储。这就是为什么要用volumeClaimTemplate的原因。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h2 id="二、创建MYSQL一主多从环境"><a href="#二、创建MYSQL一主多从环境" class="headerlink" title="二、创建MYSQL一主多从环境"></a>二、创建MYSQL一主多从环境</h2><h3 id="1-定义configMap"><a href="#1-定义configMap" class="headerlink" title="1.定义configMap"></a>1.定义configMap</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> mysql  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> mysql<span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">master.cnf</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">    # Apply this config only on the master.    [mysqld]    log-bin    log_bin_trust_function_creators=1    lower_case_table_names=1</span>  <span class="token key atrule">slave.cnf</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">    # Apply this config only on slaves.    [mysqld]    super-read-only    log_bin_trust_function_creators=1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-定义service"><a href="#2-定义service" class="headerlink" title="2.定义service"></a>2.定义service</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> mysql  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> mysql<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">ports</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> mysql    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">3306</span>  <span class="token key atrule">clusterIP</span><span class="token punctuation">:</span> None  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> mysql<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> mysql<span class="token punctuation">-</span>read  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> mysql<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">ports</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> mysql    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">3306</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> mysql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-定义mysql的statefulSet文件"><a href="#3-定义mysql的statefulSet文件" class="headerlink" title="3.定义mysql的statefulSet文件"></a>3.定义mysql的statefulSet文件</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> StatefulSet<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> mysql<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> mysql  <span class="token key atrule">serviceName</span><span class="token punctuation">:</span> mysql  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">2</span>  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> mysql    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">initContainers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> init<span class="token punctuation">-</span>mysql        <span class="token key atrule">image</span><span class="token punctuation">:</span> mysql<span class="token punctuation">:</span>5.7.30         <span class="token key atrule">command</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> bash        <span class="token punctuation">-</span> <span class="token string">"-c"</span>        <span class="token punctuation">-</span> <span class="token punctuation">|</span><span class="token scalar string">          set -ex          # Generate mysql server-id from pod ordinal index.          [[ `hostname` =~ -([0-9]+)$ ]] || exit 1          ordinal=${BASH_REMATCH[1]}          echo [mysqld] &gt; /mnt/conf.d/server-id.cnf          # Add an offset to avoid reserved server-id=0 value.          echo server-id=$((100 + $ordinal)) &gt;&gt; /mnt/conf.d/server-id.cnf          # Copy appropriate conf.d files from config-map to emptyDir.          if [[ $ordinal -eq 0 ]]; then            cp /mnt/config-map/master.cnf /mnt/conf.d/          else            cp /mnt/config-map/slave.cnf /mnt/conf.d/          fi</span>        <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> conf          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /mnt/conf.d        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> config<span class="token punctuation">-</span>map          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /mnt/config<span class="token punctuation">-</span>map      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> clone<span class="token punctuation">-</span>mysql        <span class="token key atrule">image</span><span class="token punctuation">:</span> anjia0532/google<span class="token punctuation">-</span>samples.xtrabackup<span class="token punctuation">:</span><span class="token number">1.0</span>        <span class="token key atrule">command</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> bash        <span class="token punctuation">-</span> <span class="token string">"-c"</span>        <span class="token punctuation">-</span> <span class="token punctuation">|</span><span class="token scalar string">          set -ex          # Skip the clone if data already exists.          [[ -d /var/lib/mysql/mysql ]] &amp;&amp; exit 0          # Skip the clone on master (ordinal index 0).          [[ `hostname` =~ -([0-9]+)$ ]] || exit 1          ordinal=${BASH_REMATCH[1]}          [[ $ordinal -eq 0 ]] &amp;&amp; exit 0          # Clone data from previous peer.          ncat --recv-only mysql-$(($ordinal-1)).mysql 3307 | xbstream -x -C /var/lib/mysql          # Prepare the backup.          xtrabackup --prepare --target-dir=/var/lib/mysql</span>        <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> data          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /var/lib/mysql          <span class="token key atrule">subPath</span><span class="token punctuation">:</span> mysql        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> conf          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /etc/mysql/conf.d      <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> mysql        <span class="token key atrule">image</span><span class="token punctuation">:</span> mysql<span class="token punctuation">:</span>5.7.30         <span class="token key atrule">env</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> MYSQL_ALLOW_EMPTY_PASSWORD          <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">"1"</span>        <span class="token key atrule">ports</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> mysql          <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">3306</span>        <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> data          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /var/lib/mysql          <span class="token key atrule">subPath</span><span class="token punctuation">:</span> mysql        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> conf          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /etc/mysql/conf.d        <span class="token key atrule">resources</span><span class="token punctuation">:</span>          <span class="token key atrule">requests</span><span class="token punctuation">:</span>            <span class="token key atrule">cpu</span><span class="token punctuation">:</span> 500m            <span class="token key atrule">memory</span><span class="token punctuation">:</span> 1Gi        <span class="token key atrule">livenessProbe</span><span class="token punctuation">:</span>          <span class="token key atrule">exec</span><span class="token punctuation">:</span>            <span class="token key atrule">command</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"mysqladmin"</span><span class="token punctuation">,</span> <span class="token string">"ping"</span><span class="token punctuation">]</span>          <span class="token key atrule">initialDelaySeconds</span><span class="token punctuation">:</span> <span class="token number">30</span>          <span class="token key atrule">periodSeconds</span><span class="token punctuation">:</span> <span class="token number">10</span>          <span class="token key atrule">timeoutSeconds</span><span class="token punctuation">:</span> <span class="token number">5</span>        <span class="token key atrule">readinessProbe</span><span class="token punctuation">:</span>          <span class="token key atrule">exec</span><span class="token punctuation">:</span>            <span class="token comment"># Check we can execute queries over TCP (skip-networking is off).</span>            <span class="token key atrule">command</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"mysql"</span><span class="token punctuation">,</span> <span class="token string">"-h"</span><span class="token punctuation">,</span> <span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span> <span class="token string">"-e"</span><span class="token punctuation">,</span> <span class="token string">"SELECT 1"</span><span class="token punctuation">]</span>          <span class="token key atrule">initialDelaySeconds</span><span class="token punctuation">:</span> <span class="token number">5</span>          <span class="token key atrule">periodSeconds</span><span class="token punctuation">:</span> <span class="token number">2</span>          <span class="token key atrule">timeoutSeconds</span><span class="token punctuation">:</span> <span class="token number">1</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> xtrabackup        <span class="token key atrule">image</span><span class="token punctuation">:</span> anjia0532/google<span class="token punctuation">-</span>samples.xtrabackup<span class="token punctuation">:</span><span class="token number">1.0</span>        <span class="token key atrule">ports</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> xtrabackup          <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">3307</span>        <span class="token key atrule">command</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> bash        <span class="token punctuation">-</span> <span class="token string">"-c"</span>        <span class="token punctuation">-</span> <span class="token punctuation">|</span><span class="token scalar string">          set -ex          cd /var/lib/mysql          # Determine binlog position of cloned data, if any.          if [[ -f xtrabackup_slave_info ]]; then            # XtraBackup already generated a partial "CHANGE MASTER TO" query            # because we're cloning from an existing slave.            mv xtrabackup_slave_info change_master_to.sql.in            # Ignore xtrabackup_binlog_info in this case (it's useless).            rm -f xtrabackup_binlog_info          elif [[ -f xtrabackup_binlog_info ]]; then            # We're cloning directly from master. Parse binlog position.            [[ `cat xtrabackup_binlog_info` =~ ^(.*?)[[:space:]]+(.*?)$ ]] || exit 1            rm xtrabackup_binlog_info            echo "CHANGE MASTER TO MASTER_LOG_FILE='${BASH_REMATCH[1]}',\                  MASTER_LOG_POS=${BASH_REMATCH[2]}" &gt; change_master_to.sql.in          fi          # Check if we need to complete a clone by starting replication.          if [[ -f change_master_to.sql.in ]]; then            echo "Waiting for mysqld to be ready (accepting connections)"            until mysql -h 127.0.0.1 -e "SELECT 1"; do sleep 1; done            echo "Initializing replication from clone position"            # In case of container restart, attempt this at-most-once.            mv change_master_to.sql.in change_master_to.sql.orig            mysql -h 127.0.0.1 &lt;&lt;EOF          $(&lt;change_master_to.sql.orig),            MASTER_HOST='mysql-0.mysql',            MASTER_USER='root',            MASTER_PASSWORD='',            MASTER_CONNECT_RETRY=10;          START SLAVE;          EOF          fi          # Start a server to send backups when requested by peers.          exec ncat --listen --keep-open --send-only --max-conns=1 3307 -c \            "xtrabackup --backup --slave-info --stream=xbstream --host=127.0.0.1 --user=root"</span>        <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> data          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /var/lib/mysql          <span class="token key atrule">subPath</span><span class="token punctuation">:</span> mysql        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> conf          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /etc/mysql/conf.d        <span class="token key atrule">resources</span><span class="token punctuation">:</span>          <span class="token key atrule">requests</span><span class="token punctuation">:</span>            <span class="token key atrule">cpu</span><span class="token punctuation">:</span> 100m            <span class="token key atrule">memory</span><span class="token punctuation">:</span> 100Mi      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> conf        <span class="token key atrule">emptyDir</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> config<span class="token punctuation">-</span>map        <span class="token key atrule">configMap</span><span class="token punctuation">:</span>          <span class="token key atrule">name</span><span class="token punctuation">:</span> mysql  <span class="token key atrule">volumeClaimTemplates</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> data    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">accessModes</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"ReadWriteOnce"</span><span class="token punctuation">]</span>      <span class="token key atrule">storageClassName</span> <span class="token punctuation">:</span> managed<span class="token punctuation">-</span>nfs<span class="token punctuation">-</span>storage  <span class="token comment">#使用存储类创建pvc会自动创建pv，就不需要前面先创建pv</span>      <span class="token key atrule">resources</span><span class="token punctuation">:</span>        <span class="token key atrule">requests</span><span class="token punctuation">:</span>          <span class="token key atrule">storage</span><span class="token punctuation">:</span> 4Gi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-验证"><a href="#4-验证" class="headerlink" title="4.验证"></a>4.验证</h3><h5 id="4-1进入主节点"><a href="#4-1进入主节点" class="headerlink" title="4.1进入主节点"></a>4.1进入主节点</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> mysql-0 <span class="token function">bash</span>mysql <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> create database <span class="token builtin class-name">test</span><span class="token punctuation">;</span>show databases<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="4-2进去其他节点查看是否有存在test数据库"><a href="#4-2进去其他节点查看是否有存在test数据库" class="headerlink" title="4.2进去其他节点查看是否有存在test数据库"></a>4.2进去其他节点查看是否有存在test数据库</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> mysql-1 <span class="token function">bash</span>mysql <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> show databases<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="4-3查看pvc和pv挂载情况"><a href="#4-3查看pvc和pv挂载情况" class="headerlink" title="4.3查看pvc和pv挂载情况"></a>4.3查看pvc和pv挂载情况</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl get pv,pvc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cronjob 使用</title>
      <link href="/kubernetes/cronjob.html"/>
      <url>/kubernetes/cronjob.html</url>
      
        <content type="html"><![CDATA[<ul><li>.spec.schedule 指定任务运行周期，格式同 Cron</li><li>.spec.jobTemplate 指定需要运行的任务，格式同 Job</li><li>.spec.startingDeadlineSeconds 指定任务开始的截止期限</li><li>.spec.concurrencyPolicy 指定任务的并发策略，支持 Allow、Forbid 和<br>Replace </li><li>三个选项</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> batch/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> CronJob<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> hello<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">schedule</span><span class="token punctuation">:</span> <span class="token string">"*/1 * * * *"</span>  <span class="token key atrule">jobTemplate</span><span class="token punctuation">:</span>          <span class="token key atrule">spec</span><span class="token punctuation">:</span>                <span class="token key atrule">template</span><span class="token punctuation">:</span>                    <span class="token key atrule">spec</span><span class="token punctuation">:</span>                      <span class="token key atrule">containers</span><span class="token punctuation">:</span>                      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> hello                        <span class="token key atrule">image</span><span class="token punctuation">:</span> busybox                        <span class="token key atrule">args</span><span class="token punctuation">:</span>                        <span class="token punctuation">-</span> /bin/sh                        <span class="token punctuation">-</span> <span class="token punctuation">-</span>c                        <span class="token punctuation">-</span> date;echo Hello from the Kubernetes cluster                      <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> OnFailure<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>查看日志</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">//查看job和查看cronjobkubect get jobkubect get cronjob<span class="token assign-left variable">pods</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>kubectl get pods <span class="token parameter variable">--selector</span><span class="token operator">=</span>job-name<span class="token operator">=</span>hello-27280025 <span class="token parameter variable">--output</span><span class="token operator">=</span>jsonpath<span class="token operator">=</span><span class="token punctuation">{</span>.items<span class="token punctuation">..</span>metadata.name<span class="token punctuation">}</span> <span class="token variable">)</span></span>kubectl logs <span class="token variable">$pods</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>harbor 使用</title>
      <link href="/kubernetes/harbor-an-zhuang.html"/>
      <url>/kubernetes/harbor-an-zhuang.html</url>
      
        <content type="html"><![CDATA[<h3 id="Download-harbor-helm-chart"><a href="#Download-harbor-helm-chart" class="headerlink" title="Download harbor helm chart"></a>Download harbor helm chart</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">helm repo <span class="token function">add</span> harbor https://helm.goharbor.iohelm fetch harbor/harbor <span class="token parameter variable">--untar</span>kubectl create ns harbor<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="Update-values-yaml"><a href="#Update-values-yaml" class="headerlink" title="Update values.yaml"></a>Update values.yaml</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vi</span> .harbor/values.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>And change:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">expose</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> nodePort<span class="token key atrule">tls</span><span class="token punctuation">:</span>  <span class="token key atrule">commonName</span><span class="token punctuation">:</span> <span class="token string">'core.harbor.domain'</span><span class="token key atrule">persistence</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Install-helm-chart"><a href="#Install-helm-chart" class="headerlink" title="Install helm chart"></a>Install helm chart</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">helm <span class="token function">install</span> harbor ./harbor <span class="token parameter variable">-n</span> harbor<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Wait-for-all-pod-being-ready-and-access-harbor-portal"><a href="#Wait-for-all-pod-being-ready-and-access-harbor-portal" class="headerlink" title="Wait for all pod being ready and access harbor portal"></a>Wait for all pod being ready and access harbor portal</h3><p><a href="http://192.168.34.2:30002/">http://192.168.34.2:30002</a></p><pre class="line-numbers language-none"><code class="language-none">admin/Harbor12345<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Download-repository-certs-from"><a href="#Download-repository-certs-from" class="headerlink" title="Download repository certs from"></a>Download repository certs from</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://192.168.34.2:30003/harbor/projects/1/repositories<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Copy-the-downloaded-ca-crt-to-vm-docker-certs-configuration-folder"><a href="#Copy-the-downloaded-ca-crt-to-vm-docker-certs-configuration-folder" class="headerlink" title="Copy the downloaded ca.crt to vm docker certs configuration folder"></a>Copy the downloaded ca.crt to vm docker certs configuration folder</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> /etc/docker/certs.d/core.harbor.domaincopy the ca.crt to this foldersystemctl restart <span class="token function">docker</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="Edit-x2F-etc-x2F-hosts-to-map-core-harbor-domain-to-harbor-svc-clusterip"><a href="#Edit-x2F-etc-x2F-hosts-to-map-core-harbor-domain-to-harbor-svc-clusterip" class="headerlink" title="Edit /etc/hosts to map core.harbor.domain to harbor svc clusterip"></a>Edit /etc/hosts to map core.harbor.domain to harbor svc clusterip</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># host 配置harbor svc的集群ip</span><span class="token number">10.104</span>.231.99 core.harbor.domain<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="Docker-login"><a href="#Docker-login" class="headerlink" title="Docker login"></a>Docker login</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> login <span class="token parameter variable">-u</span> admin <span class="token parameter variable">-p</span> Harbor12345 core.harbor.domain<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Docker-tag-a-image-to-core-harbor-domain-and-push-it-and-you-will-see-it-in-harbor-portal"><a href="#Docker-tag-a-image-to-core-harbor-domain-and-push-it-and-you-will-see-it-in-harbor-portal" class="headerlink" title="Docker tag a image to core.harbor.domain and push it and you will see it in harbor portal"></a>Docker tag a image to core.harbor.domain and push it and you will see it in harbor portal</h3><h3 id="Check-repositories-and-blobs"><a href="#Check-repositories-and-blobs" class="headerlink" title="Check repositories and blobs"></a>Check repositories and blobs</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> harbor-registry-7d686859d7-xs5nv <span class="token parameter variable">-n</span> harbor <span class="token function">bash</span><span class="token function">ls</span> <span class="token parameter variable">-la</span> /storage/docker/registry/v2/repositories/<span class="token function">ls</span> <span class="token parameter variable">-la</span> /storage/docker/registry/v2/blobs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="Database-operator"><a href="#Database-operator" class="headerlink" title="Database operator"></a>Database operator</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> harbor-database-0 <span class="token parameter variable">-n</span> harbor -- <span class="token function">bash</span>psql <span class="token parameter variable">-U</span> postgres <span class="token parameter variable">-d</span> postgres <span class="token parameter variable">-h</span> <span class="token number">127.0</span>.0.1 <span class="token parameter variable">-p</span> <span class="token number">5432</span><span class="token punctuation">\</span>c registry<span class="token keyword">select</span> * from harbor_user<span class="token punctuation">;</span><span class="token punctuation">\</span>dt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>容器组pod 使用</title>
      <link href="/kubernetes/pod.html"/>
      <url>/kubernetes/pod.html</url>
      
        <content type="html"><![CDATA[<h2 id="资源限制"><a href="#资源限制" class="headerlink" title="资源限制"></a>资源限制</h2><ul><li>spec.containers[].resources.limits.cpu ： CPU 上限， 可以短暂超过， 容器也不会被停止</li><li>spec.containers[].resources.limits.memory ： 内存上限， 不可以超过； 如果超过， 容器可能会被终止或调度到其他资源充足的机器上</li><li>spec.containers[].resources.limits.ephemeral-storage ： 临时存储（ 容器可写层、 日志以及 EmptyDir 等） 的上限， 超过后 Pod 会被驱逐</li><li>spec.containers[].resources.requests.cpu ： CPU 请求， 也是调度 CPU 资源的依据， 可以超过</li><li>spec.containers[].resources.requests.memory ： 内存请求， 也是调度内存资源的依据， 可以超过； 但如果超过， 容器可能会在 Node 内存不足时清理</li><li>spec.containers[].resources.requests.ephemeral-storage ： 临时存储（ 容器可写层、 日志以及 EmptyDir 等） 的请求， 调度容器存储的依据<br> <img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1636974596726-86910ac8-901e-4317-9a6c-10394dc50d7e.png#clientId=u80a186dc-b152-4&amp;from=paste&amp;height=474&amp;id=ubaad357f&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=474&amp;originWidth=599&amp;originalType=binary&amp;ratio=1&amp;size=43934&amp;status=done&amp;style=none&amp;taskId=u33db6349-9f44-430e-8fee-1989062e80f&amp;width=599" alt="image.png"></li></ul><h2 id="健康检查"><a href="#健康检查" class="headerlink" title="健康检查"></a>健康检查</h2><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1636974655639-8db59863-d002-4628-9c2d-307467f0f0a2.png#clientId=u80a186dc-b152-4&amp;from=paste&amp;height=361&amp;id=ua88cd119&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=361&amp;originWidth=609&amp;originalType=binary&amp;ratio=1&amp;size=97898&amp;status=done&amp;style=none&amp;taskId=u2fafd748-462a-4288-ac87-4c914bd3211&amp;width=609" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1636974843048-079474b5-02f3-4e6d-9bb4-9b20b076ef3a.png#clientId=u80a186dc-b152-4&amp;from=paste&amp;height=801&amp;id=u2cebb90b&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=801&amp;originWidth=548&amp;originalType=binary&amp;ratio=1&amp;size=84261&amp;status=done&amp;style=none&amp;taskId=uc4738430-3b7b-4688-a825-3f2931ec093&amp;width=548" alt="image.png"><br><strong>liveness probe（存活探针）</strong>：来确定何时重启容器。例如，当应用程序处于运行状态但无法做进一步操作，liveness 探针将捕获到 deadlock，重启处于该状态下的容器，使应用程序在存在 bug 的情况下依然能够继续运行下去。<br><strong>readiness probe（就绪探针）</strong>：来确定容器是否已经就绪可以接受流量。只有当 Pod 中的容器都处于就绪状态时 kubelet 才会认定该 Pod处于就绪状态。该信号的作用是控制哪些 Pod应该作为service的后端。如果 Pod 处于非就绪状态，那么它们将会被从 service 的load balancer（负载均衡）中移除。<br><strong>startupProbe(启动探测)</strong> : 指示容器中的应用是否已经启动。如果提供了启动探测(startup probe)，则禁用所有其他探测，直到它成功为止。如果启动探测失败，kubelet 将杀死容器，容器服从其重启策略进行重启。如果容器没有提供启动探测，则默认状态为成功Success。</p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1637116192608-84a50bf2-591a-4a7a-abaf-46f37b8a3e58.png#clientId=u6ee81a2e-2a02-4&amp;from=paste&amp;id=u20daf2f6&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=602&amp;originWidth=1200&amp;originalType=url&amp;ratio=1&amp;size=364071&amp;status=done&amp;style=none&amp;taskId=ubc93a6df-6831-43b4-a921-76bcef77344" alt="image.png"></p><h2 id="存活探针"><a href="#存活探针" class="headerlink" title="存活探针"></a>存活探针</h2><h4 id="1-定义-liveness-exec请求"><a href="#1-定义-liveness-exec请求" class="headerlink" title="1.定义 liveness exec请求"></a>1.定义 liveness exec请求</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">test</span><span class="token punctuation">:</span> liveness  <span class="token key atrule">name</span><span class="token punctuation">:</span> liveness<span class="token punctuation">-</span>exec<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">containers</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> liveness    <span class="token key atrule">image</span><span class="token punctuation">:</span> busybox    <span class="token key atrule">args</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> /bin/sh    <span class="token punctuation">-</span> <span class="token punctuation">-</span>c    <span class="token punctuation">-</span> touch /tmp/healthy; sleep 30; rm <span class="token punctuation">-</span>rf /tmp/healthy; sleep 600    <span class="token key atrule">livenessProbe</span><span class="token punctuation">:</span>      <span class="token key atrule">exec</span><span class="token punctuation">:</span>        <span class="token key atrule">command</span><span class="token punctuation">:</span>  <span class="token comment"># kubelet 在容器内执行命令 cat /tmp/healthy 来进行探测。 如果命令执行成功并且返回值为 0，kubelet 就会认为这个容器是健康存活的</span>        <span class="token punctuation">-</span> cat        <span class="token punctuation">-</span> /tmp/healthy      <span class="token key atrule">initialDelaySeconds</span><span class="token punctuation">:</span> <span class="token number">5</span>      <span class="token key atrule">periodSeconds</span><span class="token punctuation">:</span> <span class="token number">5</span>~                                                                                                                                                                                        <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>调度失败后会进行容器重启</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># kubectl describe pod liveness-exec</span>Events:  Type     Reason     Age                 From               Message  ----     ------     ----                ----               -------  Normal   Scheduled  2m2s                default-scheduler  Successfully assigned default/liveness-exec to k8s-node1  Normal   Pulled     104s                kubelet            Successfully pulled image <span class="token string">"busybox"</span> <span class="token keyword">in</span> <span class="token number">15</span>.638033484s  Warning  Unhealthy  62s <span class="token punctuation">(</span>x3 over 72s<span class="token punctuation">)</span>   kubelet            Liveness probe failed: cat: can<span class="token string">'t open '</span>/tmp/healthy': No such <span class="token function">file</span> or directory  Normal   Killing    62s                 kubelet            Container liveness failed liveness probe, will be restarted  Normal   Pulling    32s <span class="token punctuation">(</span>x2 over 119s<span class="token punctuation">)</span>  kubelet            Pulling image <span class="token string">"busybox"</span>  Normal   Created    29s <span class="token punctuation">(</span>x2 over 104s<span class="token punctuation">)</span>  kubelet            Created container liveness  Normal   Started    29s <span class="token punctuation">(</span>x2 over 103s<span class="token punctuation">)</span>  kubelet            Started container liveness  Normal   Pulled     29s                 kubelet            Successfully pulled image <span class="token string">"busybox"</span> <span class="token keyword">in</span> <span class="token number">2</span>.736225925s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-定义-liveness-HTTP请求"><a href="#2-定义-liveness-HTTP请求" class="headerlink" title="2.定义 liveness HTTP请求"></a>2.定义 liveness HTTP请求</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">test</span><span class="token punctuation">:</span> liveness  <span class="token key atrule">name</span><span class="token punctuation">:</span> liveness<span class="token punctuation">-</span>http<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">containers</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> liveness    <span class="token key atrule">image</span><span class="token punctuation">:</span> fkconsultin/liveness<span class="token punctuation">-</span>testing    <span class="token key atrule">args</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> /server    <span class="token key atrule">livenessProbe</span><span class="token punctuation">:</span>      <span class="token key atrule">httpGet</span><span class="token punctuation">:</span>        <span class="token key atrule">path</span><span class="token punctuation">:</span> /healthz        <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span>        <span class="token key atrule">httpHeaders</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> X<span class="token punctuation">-</span>Custom<span class="token punctuation">-</span>Header          <span class="token key atrule">value</span><span class="token punctuation">:</span> Awesome      <span class="token key atrule">initialDelaySeconds</span><span class="token punctuation">:</span> <span class="token number">3</span>      <span class="token key atrule">periodSeconds</span><span class="token punctuation">:</span> <span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>HTTP liveness探测失败，进行容器重启</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">Events</span><span class="token punctuation">:</span>  Type     Reason     Age                  From               Message  <span class="token punctuation">---</span><span class="token punctuation">-</span>     <span class="token punctuation">---</span><span class="token punctuation">---</span>     <span class="token punctuation">---</span><span class="token punctuation">-</span>                 <span class="token punctuation">---</span><span class="token punctuation">-</span>               <span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">-</span>  Normal   Scheduled  2m47s                default<span class="token punctuation">-</span>scheduler  Successfully assigned default/liveness<span class="token punctuation">-</span>http to k8s<span class="token punctuation">-</span>node1  Normal   Pulled     117s                 kubelet            Successfully pulled image "fkconsultin/liveness<span class="token punctuation">-</span>testing" in 48.941841972s  Normal   Pulled     61s                  kubelet            Successfully pulled image "fkconsultin/liveness<span class="token punctuation">-</span>testing" in 40.836616911s  Normal   Created    36s (x3 over 117s)   kubelet            Created container liveness  Normal   Started    36s (x3 over 117s)   kubelet            Started container liveness  Normal   Pulled     36s                  kubelet            Successfully pulled image "fkconsultin/liveness<span class="token punctuation">-</span>testing" in 8.912067487s  <span class="token key atrule">Warning  Unhealthy  26s (x9 over 113s)   kubelet            Liveness probe failed</span><span class="token punctuation">:</span> <span class="token key atrule">HTTP probe failed with statuscode</span><span class="token punctuation">:</span> <span class="token number">404</span>  Normal   Killing    26s (x3 over 107s)   kubelet            Container liveness failed liveness probe<span class="token punctuation">,</span> will be restarted  Normal   Pulling    21s (x4 over 2m46s)  kubelet            Pulling image "fkconsultin/liveness<span class="token punctuation">-</span>testing"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-定义-liveness-TCP请求"><a href="#3-定义-liveness-TCP请求" class="headerlink" title="3.定义 liveness TCP请求"></a>3.定义 liveness TCP请求</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">containers</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx    <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx<span class="token punctuation">:</span>1.14<span class="token punctuation">-</span>alpine    <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">8080</span>    <span class="token key atrule">readinessProbe</span><span class="token punctuation">:</span>      <span class="token key atrule">tcpSocket</span><span class="token punctuation">:</span>        <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span>      <span class="token key atrule">initialDelaySeconds</span><span class="token punctuation">:</span> <span class="token number">5</span>      <span class="token key atrule">periodSeconds</span><span class="token punctuation">:</span> <span class="token number">10</span>    <span class="token key atrule">livenessProbe</span><span class="token punctuation">:</span>      <span class="token key atrule">tcpSocket</span><span class="token punctuation">:</span>   <span class="token comment"># 指定tcp端口是否通</span>        <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span>      <span class="token key atrule">initialDelaySeconds</span><span class="token punctuation">:</span> <span class="token number">15</span>      <span class="token key atrule">periodSeconds</span><span class="token punctuation">:</span> <span class="token number">20</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>15 秒之后，通过看 Pod 事件来检测存活探测器：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">Events</span><span class="token punctuation">:</span>  Type     Reason     Age                From               Message  <span class="token punctuation">---</span><span class="token punctuation">-</span>     <span class="token punctuation">---</span><span class="token punctuation">---</span>     <span class="token punctuation">---</span><span class="token punctuation">-</span>               <span class="token punctuation">---</span><span class="token punctuation">-</span>               <span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">-</span>  Normal   Scheduled  87s                default<span class="token punctuation">-</span>scheduler  Successfully assigned default/nginx to k8s<span class="token punctuation">-</span>node1  Normal   Killing    28s                kubelet            Container nginx failed liveness probe<span class="token punctuation">,</span> will be restarted  Normal   Pulled     27s (x2 over 86s)  kubelet            Container image "nginx<span class="token punctuation">:</span>1.14<span class="token punctuation">-</span>alpine" already present on machine  Normal   Created    27s (x2 over 86s)  kubelet            Created container nginx  Normal   Started    27s (x2 over 86s)  kubelet            Started container nginx  <span class="token key atrule">Warning  Unhealthy  8s (x9 over 78s)   kubelet            Readiness probe failed</span><span class="token punctuation">:</span> <span class="token key atrule">dial tcp 10.244.36.89:8080</span><span class="token punctuation">:</span> <span class="token key atrule">connect</span><span class="token punctuation">:</span> connection refused  <span class="token key atrule">Warning  Unhealthy  8s (x4 over 68s)   kubelet            Liveness probe failed</span><span class="token punctuation">:</span> <span class="token key atrule">dial tcp 10.244.36.89:8080</span><span class="token punctuation">:</span> <span class="token key atrule">connect</span><span class="token punctuation">:</span> connection refused<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="就绪探针"><a href="#就绪探针" class="headerlink" title="就绪探针"></a>就绪探针</h2><p><strong>Readiness probe</strong>的配置跟<strong>liveness probe</strong>很像。唯一的不同是使用 <strong>readinessProbe</strong>而不是<strong>livenessProbe</strong>。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">readinessProbe</span><span class="token punctuation">:</span>  <span class="token key atrule">exec</span><span class="token punctuation">:</span>    <span class="token key atrule">command</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> cat    <span class="token punctuation">-</span> /tmp/healthy  <span class="token key atrule">initialDelaySeconds</span><span class="token punctuation">:</span> <span class="token number">5</span>  <span class="token key atrule">periodSeconds</span><span class="token punctuation">:</span> <span class="token number">5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Configure-Probes"><a href="#Configure-Probes" class="headerlink" title="Configure Probes"></a>Configure Probes</h2><p>Probe 中有很多精确和详细的配置，通过它们您能准确的控制 liveness 和 readiness 检查</p><ul><li><strong>initialDelaySeconds</strong>：容器启动后第一次执行探测是需要等待多少秒。</li><li><strong>periodSeconds</strong>：执行探测的频率。默认是10秒，最小1秒。</li><li><strong>timeoutSeconds</strong>：探测超时时间。默认1秒，最小1秒。</li><li><strong>successThreshold</strong>：探测失败后，最少连续探测成功多少次才被认定为成功。默认是 1。对于 liveness 必须是 1。最小值是 1。</li><li><strong>failureThreshold</strong>：探测成功后，最少连续探测失败多少次才被认定为失败。默认是 3。最小值是 1。</li></ul><p>HTTP probe 中可以给 httpGet设置其他配置项：</p><ul><li><strong>host</strong>：连接的主机名，默认连接到 pod 的 IP。您可能想在 http header 中设置 “Host” 而不是使用 IP。</li><li><strong>scheme</strong>：连接使用的 schema，默认HTTP。</li><li><strong>path</strong>: 访问的HTTP server 的 path。</li><li><strong>httpHeaders</strong>：自定义请求的 header。HTTP运行重复的 header。</li><li><strong>port</strong>：访问的容器的端口名字或者端口号。端口号必须介于 1 和 65525 之间。</li></ul><h2 id="启动退出动作"><a href="#启动退出动作" class="headerlink" title="启动退出动作"></a>启动退出动作</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> lifecycle<span class="token punctuation">-</span>demo<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">containers</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> lifecycle<span class="token punctuation">-</span>demo<span class="token punctuation">-</span>container      <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx      <span class="token key atrule">lifecycle</span><span class="token punctuation">:</span>        <span class="token key atrule">postStart</span><span class="token punctuation">:</span>          <span class="token key atrule">exec</span><span class="token punctuation">:</span>            <span class="token key atrule">command</span><span class="token punctuation">:</span>              <span class="token punctuation">-</span> <span class="token string">"/bin/sh"</span>              <span class="token punctuation">-</span> <span class="token string">"-c"</span>              <span class="token punctuation">-</span> <span class="token string">"echo Hello from the postStart handler &gt; /usr/share/message"</span>        <span class="token key atrule">preStop</span><span class="token punctuation">:</span>          <span class="token key atrule">exec</span><span class="token punctuation">:</span>            <span class="token key atrule">command</span><span class="token punctuation">:</span>              <span class="token punctuation">-</span> <span class="token string">"/bin/sh"</span>              <span class="token punctuation">-</span> <span class="token string">"-c"</span>              <span class="token punctuation">-</span> <span class="token string">"echo Hello from the poststop handler &gt; /usr/share/message"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>其他插件 使用</title>
      <link href="/kubernetes/qi-ta-cha-jian.html"/>
      <url>/kubernetes/qi-ta-cha-jian.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、Grafana-Prometheus-node-exporter"><a href="#一、Grafana-Prometheus-node-exporter" class="headerlink" title="一、Grafana + Prometheus +node-exporter"></a>一、Grafana + Prometheus +node-exporter</h2><blockquote><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>1.参考地址：<a href="https://www.jianshu.com/p/80de3bb0ec18">https://www.jianshu.com/p/80de3bb0ec18</a><br>2.需要修改镜像prometheus、Grafana版本<br>3.调整nfs挂载pvc信息<br>4.调整rolebind中代理问题 </p><ul><li><strong>resources: [“nodes”, “nodes/proxy”, “nodes/metrics”, “services”, “endpoints”, “pods”]</strong></li></ul></blockquote><h3 id="1-node-exporter-yaml"><a href="#1-node-exporter-yaml" class="headerlink" title="1.node-exporter.yaml"></a>1.node-exporter.yaml</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">kind</span><span class="token punctuation">:</span> DaemonSet<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>   <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter  <span class="token key atrule">name</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ns<span class="token punctuation">-</span>monitor<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">revisionHistoryLimit</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter          <span class="token key atrule">image</span><span class="token punctuation">:</span> prom/node<span class="token punctuation">-</span>exporter<span class="token punctuation">:</span>v0.16.0          <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">9100</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP              <span class="token key atrule">name</span><span class="token punctuation">:</span>http      <span class="token key atrule">hostNetwork</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># 获得Node的物理指标信息</span>      <span class="token key atrule">hostPID</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># 获得Node的物理指标信息</span><span class="token comment">#      tolerations:  # Master节点</span><span class="token comment">#        - effect: NoSchedule</span><span class="token comment">#          operator: Exists</span><span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter  <span class="token key atrule">name</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter<span class="token punctuation">-</span>service  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ns<span class="token punctuation">-</span>monitor<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span>http      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9100</span>      <span class="token key atrule">nodePort</span><span class="token punctuation">:</span> <span class="token number">31672</span>      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP  <span class="token key atrule">type</span><span class="token punctuation">:</span> NodePort  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-Prometheus-yaml"><a href="#2-Prometheus-yaml" class="headerlink" title="2.Prometheus.yaml"></a>2.Prometheus.yaml</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">kind</span><span class="token punctuation">:</span> DaemonSet<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>   <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter  <span class="token key atrule">name</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ns<span class="token punctuation">-</span>monitor<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">revisionHistoryLimit</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter          <span class="token key atrule">image</span><span class="token punctuation">:</span> prom/node<span class="token punctuation">-</span>exporter<span class="token punctuation">:</span>v0.16.0          <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">9100</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP              <span class="token key atrule">name</span><span class="token punctuation">:</span>http      <span class="token key atrule">hostNetwork</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># 获得Node的物理指标信息</span>      <span class="token key atrule">hostPID</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># 获得Node的物理指标信息</span><span class="token comment">#      tolerations:  # Master节点</span><span class="token comment">#        - effect: NoSchedule</span><span class="token comment">#          operator: Exists</span><span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter  <span class="token key atrule">name</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter<span class="token punctuation">-</span>service  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ns<span class="token punctuation">-</span>monitor<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span>http      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9100</span>      <span class="token key atrule">nodePort</span><span class="token punctuation">:</span> <span class="token number">31672</span>      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP  <span class="token key atrule">type</span><span class="token punctuation">:</span> NodePort  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter<span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>master prometheus<span class="token punctuation">]</span><span class="token comment"># ls</span>grafana.yaml  node<span class="token punctuation">-</span>exporter.yaml  Prometheus.yaml<span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>master prometheus<span class="token punctuation">]</span><span class="token comment"># cat Prometheus.yaml </span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"nodes"</span><span class="token punctuation">,</span> <span class="token string">"nodes/proxy"</span><span class="token punctuation">,</span> <span class="token string">"nodes/metrics"</span><span class="token punctuation">,</span> <span class="token string">"services"</span><span class="token punctuation">,</span> <span class="token string">"endpoints"</span><span class="token punctuation">,</span> <span class="token string">"pods"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"list"</span><span class="token punctuation">,</span> <span class="token string">"watch"</span><span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"configmaps"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"get"</span><span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token key atrule">nonResourceURLs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"/metrics"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"get"</span><span class="token punctuation">]</span><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ns<span class="token punctuation">-</span>monitor  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRoleBinding<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token key atrule">subjects</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount    <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ns<span class="token punctuation">-</span>monitor<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>  <span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole  <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>conf  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ns<span class="token punctuation">-</span>monitor  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> prometheus<span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">prometheus.yml</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token punctuation">-</span>    <span class="token comment"># my global config</span>    <span class="token key atrule">global</span><span class="token punctuation">:</span>      <span class="token key atrule">scrape_interval</span><span class="token punctuation">:</span>     15s  <span class="token comment"># Set the scrape interval to every 15 seconds. Default is every 1 minute.</span>      <span class="token key atrule">evaluation_interval</span><span class="token punctuation">:</span> 15s  <span class="token comment"># Evaluate rules every 15 seconds. The default is every 1 minute.</span>      <span class="token comment"># scrape_timeout is set to the global default (10s).</span>    <span class="token comment"># Alertmanager configuration</span>    <span class="token key atrule">alerting</span><span class="token punctuation">:</span>      <span class="token key atrule">alertmanagers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">static_configs</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">targets</span><span class="token punctuation">:</span>          <span class="token comment"># - alertmanager:9093</span>    <span class="token comment"># Load rules once and periodically evaluate them according to the global 'evaluation_interval'.</span>    <span class="token key atrule">rule_files</span><span class="token punctuation">:</span>      <span class="token comment"># - "first_rules.yml"</span>      <span class="token comment"># - "second_rules.yml"</span>    <span class="token comment"># A scrape configuration containing exactly one endpoint to scrape:</span>    <span class="token comment"># Here it's Prometheus itself.</span>    <span class="token key atrule">scrape_configs</span><span class="token punctuation">:</span>      <span class="token comment"># The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.</span>      <span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> <span class="token string">'prometheus'</span>        <span class="token comment"># metrics_path defaults to '/metrics'</span>        <span class="token comment"># scheme defaults to 'http'.</span>        <span class="token key atrule">static_configs</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">targets</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'localhost:9090'</span><span class="token punctuation">]</span>                <span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> <span class="token string">'grafana'</span>        <span class="token key atrule">static_configs</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">targets</span><span class="token punctuation">:</span>              <span class="token punctuation">-</span> <span class="token string">'grafana-service.ns-monitor:3000'</span>      <span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> <span class="token string">'kubernetes-apiservers'</span>        <span class="token key atrule">kubernetes_sd_configs</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">role</span><span class="token punctuation">:</span> endpoints        <span class="token comment"># Default to scraping over https. If required, just disable this or change to</span>        <span class="token comment"># `http`.</span>        <span class="token key atrule">scheme</span><span class="token punctuation">:</span> https        <span class="token comment"># This TLS &amp; bearer token file config is used to connect to the actual scrape</span>        <span class="token comment"># endpoints for cluster components. This is separate to discovery auth</span>        <span class="token comment"># configuration because discovery &amp; scraping are two separate concerns in</span>        <span class="token comment"># Prometheus. The discovery auth config is automatic if Prometheus runs inside</span>        <span class="token comment"># the cluster. Otherwise, more config options have to be provided within the</span>        <span class="token comment"># &lt;kubernetes_sd_config&gt;.</span>        <span class="token key atrule">tls_config</span><span class="token punctuation">:</span>          <span class="token key atrule">ca_file</span><span class="token punctuation">:</span> /var/run/secrets/kubernetes.io/serviceaccount/ca.crt          <span class="token comment"># If your node certificates are self-signed or use a different CA to the</span>          <span class="token comment"># master CA, then disable certificate verification below. Note that</span>          <span class="token comment"># certificate verification is an integral part of a secure infrastructure</span>          <span class="token comment"># so this should only be disabled in a controlled environment. You can</span>          <span class="token comment"># disable certificate verification by uncommenting the line below.</span>          <span class="token comment">#</span>          <span class="token comment"># insecure_skip_verify: true</span>        <span class="token key atrule">bearer_token_file</span><span class="token punctuation">:</span> /var/run/secrets/kubernetes.io/serviceaccount/token        <span class="token comment"># Keep only the default/kubernetes service endpoints for the https port. This</span>        <span class="token comment"># will add targets for each API server which Kubernetes adds an endpoint to</span>        <span class="token comment"># the default/kubernetes service.</span>        <span class="token key atrule">relabel_configs</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_namespace<span class="token punctuation">,</span> __meta_kubernetes_service_name<span class="token punctuation">,</span> __meta_kubernetes_endpoint_port_name<span class="token punctuation">]</span>          <span class="token key atrule">action</span><span class="token punctuation">:</span> keep          <span class="token key atrule">regex</span><span class="token punctuation">:</span> default;kubernetes;https                <span class="token comment"># Scrape config for nodes (kubelet).</span>      <span class="token comment">#</span>      <span class="token comment"># Rather than connecting directly to the node, the scrape is proxied though the</span>      <span class="token comment"># Kubernetes apiserver.  This means it will work if Prometheus is running out of</span>      <span class="token comment"># cluster, or can't connect to nodes for some other reason (e.g. because of</span>      <span class="token comment"># firewalling).</span>      <span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> <span class="token string">'kubernetes-nodes'</span>        <span class="token comment"># Default to scraping over https. If required, just disable this or change to</span>        <span class="token comment"># `http`.</span>        <span class="token key atrule">scheme</span><span class="token punctuation">:</span> https        <span class="token comment"># This TLS &amp; bearer token file config is used to connect to the actual scrape</span>        <span class="token comment"># endpoints for cluster components. This is separate to discovery auth</span>        <span class="token comment"># configuration because discovery &amp; scraping are two separate concerns in</span>        <span class="token comment"># Prometheus. The discovery auth config is automatic if Prometheus runs inside</span>        <span class="token comment"># the cluster. Otherwise, more config options have to be provided within the</span>        <span class="token comment"># &lt;kubernetes_sd_config&gt;.</span>        <span class="token key atrule">tls_config</span><span class="token punctuation">:</span>          <span class="token key atrule">ca_file</span><span class="token punctuation">:</span> /var/run/secrets/kubernetes.io/serviceaccount/ca.crt        <span class="token key atrule">bearer_token_file</span><span class="token punctuation">:</span> /var/run/secrets/kubernetes.io/serviceaccount/token        <span class="token key atrule">kubernetes_sd_configs</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">role</span><span class="token punctuation">:</span> node        <span class="token key atrule">relabel_configs</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">action</span><span class="token punctuation">:</span> labelmap          <span class="token key atrule">regex</span><span class="token punctuation">:</span> __meta_kubernetes_node_label_(.+)        <span class="token punctuation">-</span> <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __address__          <span class="token key atrule">replacement</span><span class="token punctuation">:</span> kubernetes.default.svc<span class="token punctuation">:</span><span class="token number">443</span>        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_node_name<span class="token punctuation">]</span>          <span class="token key atrule">regex</span><span class="token punctuation">:</span> (.+)          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __metrics_path__          <span class="token key atrule">replacement</span><span class="token punctuation">:</span> /api/v1/nodes/$<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span>/proxy/metrics      <span class="token comment"># Scrape config for Kubelet cAdvisor.</span>      <span class="token comment">#</span>      <span class="token comment"># This is required for Kubernetes 1.7.3 and later, where cAdvisor metrics</span>      <span class="token comment"># (those whose names begin with 'container_') have been removed from the</span>      <span class="token comment"># Kubelet metrics endpoint.  This job scrapes the cAdvisor endpoint to</span>      <span class="token comment"># retrieve those metrics.</span>      <span class="token comment">#</span>      <span class="token comment"># In Kubernetes 1.7.0-1.7.2, these metrics are only exposed on the cAdvisor</span>      <span class="token comment"># HTTP endpoint; use "replacement: /api/v1/nodes/${1}:4194/proxy/metrics"</span>      <span class="token comment"># in that case (and ensure cAdvisor's HTTP server hasn't been disabled with</span>      <span class="token comment"># the --cadvisor-port=0 Kubelet flag).</span>      <span class="token comment">#</span>      <span class="token comment"># This job is not necessary and should be removed in Kubernetes 1.6 and</span>      <span class="token comment"># earlier versions, or it will cause the metrics to be scraped twice.</span>      <span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> <span class="token string">'kubernetes-cadvisor'</span>        <span class="token comment"># Default to scraping over https. If required, just disable this or change to</span>        <span class="token comment"># `http`.</span>        <span class="token key atrule">scheme</span><span class="token punctuation">:</span> https        <span class="token comment"># This TLS &amp; bearer token file config is used to connect to the actual scrape</span>        <span class="token comment"># endpoints for cluster components. This is separate to discovery auth</span>        <span class="token comment"># configuration because discovery &amp; scraping are two separate concerns in</span>        <span class="token comment"># Prometheus. The discovery auth config is automatic if Prometheus runs inside</span>        <span class="token comment"># the cluster. Otherwise, more config options have to be provided within the</span>        <span class="token comment"># &lt;kubernetes_sd_config&gt;.</span>        <span class="token key atrule">tls_config</span><span class="token punctuation">:</span>          <span class="token key atrule">ca_file</span><span class="token punctuation">:</span> /var/run/secrets/kubernetes.io/serviceaccount/ca.crt        <span class="token key atrule">bearer_token_file</span><span class="token punctuation">:</span> /var/run/secrets/kubernetes.io/serviceaccount/token        <span class="token key atrule">kubernetes_sd_configs</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">role</span><span class="token punctuation">:</span> node        <span class="token key atrule">relabel_configs</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">action</span><span class="token punctuation">:</span> labelmap          <span class="token key atrule">regex</span><span class="token punctuation">:</span> __meta_kubernetes_node_label_(.+)        <span class="token punctuation">-</span> <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __address__          <span class="token key atrule">replacement</span><span class="token punctuation">:</span> kubernetes.default.svc<span class="token punctuation">:</span><span class="token number">443</span>        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_node_name<span class="token punctuation">]</span>          <span class="token key atrule">regex</span><span class="token punctuation">:</span> (.+)          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __metrics_path__          <span class="token key atrule">replacement</span><span class="token punctuation">:</span> /api/v1/nodes/$<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span>/proxy/metrics/cadvisor      <span class="token comment"># Scrape config for service endpoints.</span>      <span class="token comment">#</span>      <span class="token comment"># The relabeling allows the actual service scrape endpoint to be configured</span>      <span class="token comment"># via the following annotations:</span>      <span class="token comment">#</span>      <span class="token comment"># * `prometheus.io/scrape`: Only scrape services that have a value of `true`</span>      <span class="token comment"># * `prometheus.io/scheme`: If the metrics endpoint is secured then you will need</span>      <span class="token comment"># to set this to `https` &amp; most likely set the `tls_config` of the scrape config.</span>      <span class="token comment"># * `prometheus.io/path`: If the metrics path is not `/metrics` override this.</span>      <span class="token comment"># * `prometheus.io/port`: If the metrics are exposed on a different port to the</span>      <span class="token comment"># service then set this appropriately.</span>      <span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> <span class="token string">'kubernetes-service-endpoints'</span>        <span class="token key atrule">kubernetes_sd_configs</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">role</span><span class="token punctuation">:</span> endpoints        <span class="token key atrule">relabel_configs</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_service_annotation_prometheus_io_scrape<span class="token punctuation">]</span>          <span class="token key atrule">action</span><span class="token punctuation">:</span> keep          <span class="token key atrule">regex</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_service_annotation_prometheus_io_scheme<span class="token punctuation">]</span>          <span class="token key atrule">action</span><span class="token punctuation">:</span> replace          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __scheme__          <span class="token key atrule">regex</span><span class="token punctuation">:</span> (https<span class="token punctuation">?</span>)        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_service_annotation_prometheus_io_path<span class="token punctuation">]</span>          <span class="token key atrule">action</span><span class="token punctuation">:</span> replace          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __metrics_path__          <span class="token key atrule">regex</span><span class="token punctuation">:</span> (.+)        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__address__<span class="token punctuation">,</span> __meta_kubernetes_service_annotation_prometheus_io_port<span class="token punctuation">]</span>          <span class="token key atrule">action</span><span class="token punctuation">:</span> replace          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __address__          <span class="token key atrule">regex</span><span class="token punctuation">:</span> (<span class="token punctuation">[</span>^<span class="token punctuation">:</span><span class="token punctuation">]</span>+)(<span class="token punctuation">?</span><span class="token punctuation">:</span><span class="token punctuation">:</span>\d+)<span class="token punctuation">?</span>;(\d+)          <span class="token key atrule">replacement</span><span class="token punctuation">:</span> $1<span class="token punctuation">:</span>$2        <span class="token punctuation">-</span> <span class="token key atrule">action</span><span class="token punctuation">:</span> labelmap          <span class="token key atrule">regex</span><span class="token punctuation">:</span> __meta_kubernetes_service_label_(.+)        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_namespace<span class="token punctuation">]</span>          <span class="token key atrule">action</span><span class="token punctuation">:</span> replace          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> kubernetes_namespace        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_service_name<span class="token punctuation">]</span>          <span class="token key atrule">action</span><span class="token punctuation">:</span> replace          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> kubernetes_name      <span class="token comment"># Example scrape config for probing services via the Blackbox Exporter.</span>      <span class="token comment">#</span>      <span class="token comment"># The relabeling allows the actual service scrape endpoint to be configured</span>      <span class="token comment"># via the following annotations:</span>      <span class="token comment">#</span>      <span class="token comment"># * `prometheus.io/probe`: Only probe services that have a value of `true`</span>      <span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> <span class="token string">'kubernetes-services'</span>        <span class="token key atrule">metrics_path</span><span class="token punctuation">:</span> /probe        <span class="token key atrule">params</span><span class="token punctuation">:</span>          <span class="token key atrule">module</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>http_2xx<span class="token punctuation">]</span>        <span class="token key atrule">kubernetes_sd_configs</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">role</span><span class="token punctuation">:</span> service        <span class="token key atrule">relabel_configs</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_service_annotation_prometheus_io_probe<span class="token punctuation">]</span>          <span class="token key atrule">action</span><span class="token punctuation">:</span> keep          <span class="token key atrule">regex</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__address__<span class="token punctuation">]</span>          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __param_target        <span class="token punctuation">-</span> <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __address__          <span class="token key atrule">replacement</span><span class="token punctuation">:</span> blackbox<span class="token punctuation">-</span>exporter.example.com<span class="token punctuation">:</span><span class="token number">9115</span>        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__param_target<span class="token punctuation">]</span>          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> instance        <span class="token punctuation">-</span> <span class="token key atrule">action</span><span class="token punctuation">:</span> labelmap          <span class="token key atrule">regex</span><span class="token punctuation">:</span> __meta_kubernetes_service_label_(.+)        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_namespace<span class="token punctuation">]</span>          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> kubernetes_namespace        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_service_name<span class="token punctuation">]</span>          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> kubernetes_name      <span class="token comment"># Example scrape config for probing ingresses via the Blackbox Exporter.</span>      <span class="token comment">#</span>      <span class="token comment"># The relabeling allows the actual ingress scrape endpoint to be configured</span>      <span class="token comment"># via the following annotations:</span>      <span class="token comment">#</span>      <span class="token comment"># * `prometheus.io/probe`: Only probe services that have a value of `true`</span>      <span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> <span class="token string">'kubernetes-ingresses'</span>        <span class="token key atrule">metrics_path</span><span class="token punctuation">:</span> /probe        <span class="token key atrule">params</span><span class="token punctuation">:</span>          <span class="token key atrule">module</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>http_2xx<span class="token punctuation">]</span>        <span class="token key atrule">kubernetes_sd_configs</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">role</span><span class="token punctuation">:</span> ingress        <span class="token key atrule">relabel_configs</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_ingress_annotation_prometheus_io_probe<span class="token punctuation">]</span>            <span class="token key atrule">action</span><span class="token punctuation">:</span> keep            <span class="token key atrule">regex</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>          <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_ingress_scheme<span class="token punctuation">,</span>__address__<span class="token punctuation">,</span>__meta_kubernetes_ingress_path<span class="token punctuation">]</span>            <span class="token key atrule">regex</span><span class="token punctuation">:</span> (.+);(.+);(.+)            <span class="token key atrule">replacement</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">:</span>//$<span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span>$<span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">}</span>            <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __param_target          <span class="token punctuation">-</span> <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __address__            <span class="token key atrule">replacement</span><span class="token punctuation">:</span> blackbox<span class="token punctuation">-</span>exporter.example.com<span class="token punctuation">:</span><span class="token number">9115</span>          <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__param_target<span class="token punctuation">]</span>            <span class="token key atrule">target_label</span><span class="token punctuation">:</span> instance          <span class="token punctuation">-</span> <span class="token key atrule">action</span><span class="token punctuation">:</span> labelmap            <span class="token key atrule">regex</span><span class="token punctuation">:</span> __meta_kubernetes_ingress_label_(.+)          <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_namespace<span class="token punctuation">]</span>            <span class="token key atrule">target_label</span><span class="token punctuation">:</span> kubernetes_namespace          <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_ingress_name<span class="token punctuation">]</span>            <span class="token key atrule">target_label</span><span class="token punctuation">:</span> kubernetes_name      <span class="token comment"># Example scrape config for pods</span>      <span class="token comment">#</span>      <span class="token comment"># The relabeling allows the actual pod scrape endpoint to be configured via the</span>      <span class="token comment"># following annotations:</span>      <span class="token comment">#</span>      <span class="token comment"># * `prometheus.io/scrape`: Only scrape pods that have a value of `true`</span>      <span class="token comment"># * `prometheus.io/path`: If the metrics path is not `/metrics` override this.</span>      <span class="token comment"># * `prometheus.io/port`: Scrape the pod on the indicated port instead of the</span>      <span class="token comment"># pod's declared ports (default is a port-free target if none are declared).</span>      <span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> <span class="token string">'kubernetes-pods'</span>        <span class="token key atrule">kubernetes_sd_configs</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">role</span><span class="token punctuation">:</span> pod        <span class="token key atrule">relabel_configs</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_pod_annotation_prometheus_io_scrape<span class="token punctuation">]</span>          <span class="token key atrule">action</span><span class="token punctuation">:</span> keep          <span class="token key atrule">regex</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_pod_annotation_prometheus_io_path<span class="token punctuation">]</span>          <span class="token key atrule">action</span><span class="token punctuation">:</span> replace          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __metrics_path__          <span class="token key atrule">regex</span><span class="token punctuation">:</span> (.+)        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__address__<span class="token punctuation">,</span> __meta_kubernetes_pod_annotation_prometheus_io_port<span class="token punctuation">]</span>          <span class="token key atrule">action</span><span class="token punctuation">:</span> replace          <span class="token key atrule">regex</span><span class="token punctuation">:</span> (<span class="token punctuation">[</span>^<span class="token punctuation">:</span><span class="token punctuation">]</span>+)(<span class="token punctuation">?</span><span class="token punctuation">:</span><span class="token punctuation">:</span>\d+)<span class="token punctuation">?</span>;(\d+)          <span class="token key atrule">replacement</span><span class="token punctuation">:</span> $1<span class="token punctuation">:</span>$2          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __address__        <span class="token punctuation">-</span> <span class="token key atrule">action</span><span class="token punctuation">:</span> labelmap          <span class="token key atrule">regex</span><span class="token punctuation">:</span> __meta_kubernetes_pod_label_(.+)        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_namespace<span class="token punctuation">]</span>          <span class="token key atrule">action</span><span class="token punctuation">:</span> replace          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> kubernetes_namespace        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_pod_name<span class="token punctuation">]</span>          <span class="token key atrule">action</span><span class="token punctuation">:</span> replace          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> kubernetes_pod_name<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>rules  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ns<span class="token punctuation">-</span>monitor  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> prometheus<span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">cpu-usage.rule</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">    groups:      - name: NodeCPUUsage        rules:          - alert: NodeCPUUsage            expr: (100 - (avg by (instance) (irate(node_cpu{name="node-exporter",mode="idle"}[5m])) * 100)) &gt; 75            for: 2m            labels:              severity: "page"            annotations:              summary: "{{$labels.instance}}: High CPU usage detected"              description: "{{$labels.instance}}: CPU usage is above 75% (current value is: {{ $value }})"</span><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PersistentVolume<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"prometheus-data-pv"</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>data<span class="token punctuation">-</span>pv    <span class="token key atrule">release</span><span class="token punctuation">:</span> stable<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">capacity</span><span class="token punctuation">:</span>    <span class="token key atrule">storage</span><span class="token punctuation">:</span> 5Gi  <span class="token key atrule">accessModes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> ReadWriteOnce  <span class="token key atrule">persistentVolumeReclaimPolicy</span><span class="token punctuation">:</span> Delete  <span class="token key atrule">storageClassName</span><span class="token punctuation">:</span> managed<span class="token punctuation">-</span>nfs<span class="token punctuation">-</span>storage  <span class="token key atrule">nfs</span><span class="token punctuation">:</span>    <span class="token key atrule">path</span><span class="token punctuation">:</span> /nfsdata/prometheus/data    <span class="token key atrule">server</span><span class="token punctuation">:</span> 192.168.56.11<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PersistentVolumeClaim<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>data<span class="token punctuation">-</span>pvc  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ns<span class="token punctuation">-</span>monitor<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">accessModes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> ReadWriteOnce  <span class="token key atrule">resources</span><span class="token punctuation">:</span>    <span class="token key atrule">requests</span><span class="token punctuation">:</span>      <span class="token key atrule">storage</span><span class="token punctuation">:</span> 5Gi  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>data<span class="token punctuation">-</span>pv      <span class="token key atrule">release</span><span class="token punctuation">:</span> stable<span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> prometheus  <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ns<span class="token punctuation">-</span>monitor<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">revisionHistoryLimit</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> prometheus  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> prometheus    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> prometheus      <span class="token key atrule">securityContext</span><span class="token punctuation">:</span>        <span class="token key atrule">runAsUser</span><span class="token punctuation">:</span> <span class="token number">0</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus          <span class="token key atrule">image</span><span class="token punctuation">:</span> prom/prometheus<span class="token punctuation">:</span>v2.30.0          <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent          <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /prometheus              <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>data<span class="token punctuation">-</span>volume            <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /etc/prometheus/prometheus.yml              <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>conf<span class="token punctuation">-</span>volume              <span class="token key atrule">subPath</span><span class="token punctuation">:</span> prometheus.yml            <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /etc/prometheus/rules              <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>rules<span class="token punctuation">-</span>volume          <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">9090</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>data<span class="token punctuation">-</span>volume          <span class="token key atrule">persistentVolumeClaim</span><span class="token punctuation">:</span>            <span class="token key atrule">claimName</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>data<span class="token punctuation">-</span>pvc        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>conf<span class="token punctuation">-</span>volume          <span class="token key atrule">configMap</span><span class="token punctuation">:</span>            <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>conf        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>rules<span class="token punctuation">-</span>volume          <span class="token key atrule">configMap</span><span class="token punctuation">:</span>            <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>rules      <span class="token key atrule">tolerations</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>role.kubernetes.io/master          <span class="token key atrule">effect</span><span class="token punctuation">:</span> NoSchedule<span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">prometheus.io/scrape</span><span class="token punctuation">:</span> <span class="token string">'true'</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> prometheus  <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>service  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ns<span class="token punctuation">-</span>monitor<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9090</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">9090</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> prometheus  <span class="token key atrule">type</span><span class="token punctuation">:</span> NodePort<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-grafana-yaml"><a href="#3-grafana-yaml" class="headerlink" title="3.grafana.yaml"></a>3.grafana.yaml</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PersistentVolumeClaim<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> grafana<span class="token punctuation">-</span>data<span class="token punctuation">-</span>pvc  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ns<span class="token punctuation">-</span>monitor<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">accessModes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> ReadWriteOnce  <span class="token key atrule">resources</span><span class="token punctuation">:</span>    <span class="token key atrule">requests</span><span class="token punctuation">:</span>      <span class="token key atrule">storage</span><span class="token punctuation">:</span> 5Gi<span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> grafana  <span class="token key atrule">name</span><span class="token punctuation">:</span> grafana  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ns<span class="token punctuation">-</span>monitor<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">revisionHistoryLimit</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> grafana  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> grafana    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">securityContext</span><span class="token punctuation">:</span>        <span class="token key atrule">runAsUser</span><span class="token punctuation">:</span> <span class="token number">0</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> grafana          <span class="token key atrule">image</span><span class="token punctuation">:</span> grafana/grafana<span class="token punctuation">:</span>8.2.0          <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent          <span class="token key atrule">env</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> GF_AUTH_BASIC_ENABLED              <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">"true"</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> GF_AUTH_ANONYMOUS_ENABLED              <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">"false"</span>          <span class="token key atrule">readinessProbe</span><span class="token punctuation">:</span>            <span class="token key atrule">httpGet</span><span class="token punctuation">:</span>              <span class="token key atrule">path</span><span class="token punctuation">:</span> /login              <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">3000</span>          <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /var/lib/grafana              <span class="token key atrule">name</span><span class="token punctuation">:</span> grafana<span class="token punctuation">-</span>data<span class="token punctuation">-</span>volume          <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">3000</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> grafana<span class="token punctuation">-</span>data<span class="token punctuation">-</span>volume          <span class="token key atrule">persistentVolumeClaim</span><span class="token punctuation">:</span>            <span class="token key atrule">claimName</span><span class="token punctuation">:</span> grafana<span class="token punctuation">-</span>data<span class="token punctuation">-</span>pvc<span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> grafana  <span class="token key atrule">name</span><span class="token punctuation">:</span> grafana<span class="token punctuation">-</span>service  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ns<span class="token punctuation">-</span>monitor<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">3000</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">3000</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> grafana  <span class="token key atrule">type</span><span class="token punctuation">:</span> NodePort<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s相关基础命令 使用</title>
      <link href="/kubernetes/k8s-ji-chu-ming-ling-he-qi-ta-qing-kuang-ji-lu.html"/>
      <url>/kubernetes/k8s-ji-chu-ming-ling-he-qi-ta-qing-kuang-ji-lu.html</url>
      
        <content type="html"><![CDATA[<h1 id="k8s"><a href="#k8s" class="headerlink" title="k8s"></a>k8s</h1><h2 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h2><h4 id="参考地址-："><a href="#参考地址-：" class="headerlink" title="参考地址 ："></a>参考地址 ：</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java">https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>cnblogs<span class="token punctuation">.</span>com<span class="token operator">/</span>tz90<span class="token operator">/</span>p<span class="token operator">/</span><span class="token number">15466646.</span>html#最新、最全、最详细的 <span class="token constant">K8S</span> 学习笔记总结（<span class="token number">2021</span>最新版）https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>jianshu<span class="token punctuation">.</span>com<span class="token operator">/</span>p<span class="token operator">/</span><span class="token number">2</span>cbdf5b65bb7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="二-命令"><a href="#二-命令" class="headerlink" title="二.命令"></a>二.命令</h2><h4 id="命令自动补全："><a href="#命令自动补全：" class="headerlink" title="命令自动补全："></a>命令自动补全：</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 ~<span class="token punctuation">]</span><span class="token comment"># yum install -y bash-completion</span><span class="token punctuation">[</span>root@k8s-master01 ~<span class="token punctuation">]</span><span class="token comment"># source /usr/share/bash-completion/bash_completion</span><span class="token punctuation">[</span>root@k8s-master01 ~<span class="token punctuation">]</span><span class="token comment"># source &lt;(kubectl completion bash)</span><span class="token punctuation">[</span>root@k8s-master01 ~<span class="token punctuation">]</span><span class="token comment"># echo "source &lt;(kubectl completion bash)" &gt;&gt; ~/.bashrc</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-查看类常用命令"><a href="#1-查看类常用命令" class="headerlink" title="1.查看类常用命令"></a>1.查看类常用命令</h4><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment">#生成加入token</span><span class="token key attr-name">kubeadm</span> <span class="token value attr-value">join 192.168.56.12:6443 --token qj0nng.wmfof5ego8i5bx5f --discovery-token-ca-cert-hash sha256:ed86c67741198cf7da9a8775db01672d00dfa6833d3e9059adb3ebdff09aebc8 </span><span class="token comment"># 查看node，pod，svc，cs，event，cm,sa ,deploy jobs ,ing ingresses</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">get pod </span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">get nod</span><span class="token comment">#查看命名空间</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">-n kube-system</span><span class="token comment">#查看node、pod启动情况</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">describe pod nginx-6799fc88d8-lwqb7</span><span class="token comment">#查看日志</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">logs --tail=300 -f nginx-6799fc88d8-lwqb7</span><span class="token comment">#调试容器</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">debug -n  zstack edge-vm-controller-6bbfc84f4f-hj66v   --image centos --target edge-vm-controller  -it</span><span class="token comment">#创建一份副本进行测试</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">debug cdebug-64cd86798b-sjxrl -it --image=centos --share-processes --copy-to=cdebug-debug -- sh</span><span class="token comment">#调试主机</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">debug node/10.69.202.146 -it --image=centos -- shchroot /host</span><span class="token comment">#进入容器</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">exec nginx-6799fc88d8-lwqb7 -it -- /bin/sh</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">exec mypod -c ruby-container -it -- bash</span><span class="token comment"># 切换命名空间</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">config set-context $(kubectl config current-context) --namespace=kube-ops</span><span class="token comment"># 查看pod的详细信息，以yaml格式或json格式显示</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">get pods -o yaml</span><span class="token comment"># 查看pod的标签信息</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">get pod -A --show-labels </span><span class="token comment"># 根据Selector（label query）来查询pod</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">get pod -A --selector="k8s-app=kube-dns"</span><span class="token comment">#查看运行pod的环境变量</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">exec podName env</span><span class="token comment"># 查看系统资源利用率</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">exec nginx-app-4028413181-cnt1i ps aux</span><span class="token comment">#权限判断</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">auth can-i create pods --all-namespaces</span><span class="token comment">#查看job</span><span class="token key attr-name">kubect</span> <span class="token value attr-value">get job  \ kubect get cronjob</span><span class="token comment">#查看所有存储信息记录</span><span class="token key attr-name">df</span> <span class="token value attr-value">-Th</span><span class="token comment">#查看组件日志</span><span class="token key attr-name">journalctl</span> <span class="token value attr-value">-l -u kube-apiserver</span><span class="token key attr-name">journalctl</span> <span class="token value attr-value">-l -u kube-controller-manager</span><span class="token key attr-name">journalctl</span> <span class="token value attr-value">-l -u kube-scheduler</span><span class="token key attr-name">journalctl</span> <span class="token value attr-value">-l -u kubelet</span><span class="token key attr-name">journalctl</span> <span class="token value attr-value">-l -u kube-proxy</span><span class="token comment">#格式化输出</span><span class="token key attr-name">-o</span><span class="token punctuation">=</span><span class="token value attr-value">custom-columns=&lt;spec&gt;   #使用逗号分隔的自定义列列表打印表格</span><span class="token key attr-name">-o</span><span class="token punctuation">=</span><span class="token value attr-value">custom-columns-file=&lt;filename&gt; #使用文件中的自定义列模板打印表格</span><span class="token key attr-name">-o</span><span class="token punctuation">=</span><span class="token value attr-value">json    #输出JSON 格式的API对象</span><span class="token key attr-name">-o</span><span class="token punctuation">=</span><span class="token value attr-value">jsonpath=&lt; template&gt;       #打印jsonpath表达式中定义的字段</span><span class="token key attr-name">-o</span><span class="token punctuation">=</span><span class="token value attr-value">jsonpath-file=&lt;filename&gt;   #打印由文件中的jsonpath表达式定义的字段</span><span class="token key attr-name">-o</span><span class="token punctuation">=</span><span class="token value attr-value">name  #仅打印资源名称 </span><span class="token key attr-name">-o</span><span class="token punctuation">=</span><span class="token value attr-value">wide  #以纯文本格式输出任何附加信息，对于Pod ，包含节点名称</span><span class="token key attr-name">-o</span><span class="token punctuation">=</span><span class="token value attr-value">yaml  #输出 YAML 格式的 API 对象 </span><span class="token comment">#查看卡住服务</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">api-resources --verbs=list --namespaced -o name   | xargs -n 1 kubectl get --show-kind --ignore-not-found -n kubesphere-logging-system</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-操作类指令"><a href="#2-操作类指令" class="headerlink" title="2.操作类指令"></a>2.操作类指令</h4><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment">#创建资源</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">create -f xxx.yaml</span><span class="token comment"># 应用资源</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">apply -f xxx.yaml</span><span class="token comment"># 应用资源，该目录下的所有 .yaml, .yml, 或 .json 文件都会被使用</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">apply -f &lt;directory&gt;</span><span class="token comment"># 创建test名称空间</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">create namespace test</span><span class="token comment"># 编辑资源</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">edit pod podName</span><span class="token comment"># 删除指定的pod</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">delete pod podName</span><span class="token comment">#文件复制</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">cp /tmp/foo_dir &lt;some-pod&gt;:/tmp/bar_dir</span><span class="token comment">#维护模式（标志node不可调度，但不影响现有pod）</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">cordon k8s-node1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-高级指令"><a href="#3-高级指令" class="headerlink" title="3. 高级指令"></a>3. 高级指令</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#######################回滚操作#############</span><span class="token comment"># 查询历史版本</span>$ kubectl rollout <span class="token function">history</span> daemonset <span class="token operator">&lt;</span>daemonset-name<span class="token operator">&gt;</span>kubectl rollout <span class="token function">history</span> deploy php-apache<span class="token comment"># 查询某个历史版本的详细信息</span>$ kubectl rollout <span class="token function">history</span> daemonset <span class="token operator">&lt;</span>daemonset-name<span class="token operator">&gt;</span> <span class="token parameter variable">--revision</span><span class="token operator">=</span><span class="token number">1</span><span class="token comment"># 回滚</span>$ kubectl rollout undo daemonset <span class="token operator">&lt;</span>daemonset-name<span class="token operator">&gt;</span> --to-revision<span class="token operator">=</span><span class="token operator">&lt;</span>revision<span class="token operator">&gt;</span><span class="token comment"># 查询回滚状态</span>$ kubectl rollout status  deploy <span class="token operator">&lt;</span>daemonset-name<span class="token operator">&gt;</span><span class="token comment">#######################扩容操作#################</span><span class="token comment">#手动扩容 </span>kubectl scale deployment php-apache <span class="token parameter variable">--replicas</span><span class="token operator">=</span><span class="token number">2</span><span class="token comment">#自动扩容（需要配合HPA metric使用）</span>kubectl autoscale deployment php-apache --cpu-percent<span class="token operator">=</span><span class="token number">50</span> <span class="token parameter variable">--min</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--max</span><span class="token operator">=</span><span class="token number">10</span><span class="token comment">#镜像更新</span>kubectl <span class="token builtin class-name">set</span> image deployment/nginx-deployment my-nginx<span class="token operator">=</span>nginx:1.9.1<span class="token comment"># 添加标签</span>kubectl label pods my-pod new-label<span class="token operator">=</span>awesome<span class="token comment"># 添加注解</span>kubectl annotate pods my-pod icon-url<span class="token operator">=</span>http://goo.gl/XXBTWq<span class="token comment"># 部分更新节点</span>kubectl patch <span class="token function">node</span> k8s-node-1 <span class="token parameter variable">-p</span> <span class="token string">'{"spec":{"unschedulable":true}}'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="dashboard"><a href="#dashboard" class="headerlink" title="dashboard"></a>dashboard</h4><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment">## dashboard生成token</span><span class="token comment"># 创建用户</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">create serviceaccount dashboard-admin -n kube-system</span><span class="token comment"># 用户授权</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">create clusterrolebinding dashboard-admin --clusterrole=cluster-admin --serviceaccount=kube-system:dashboard-admin</span><span class="token comment"># 获取用户Token</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">describe secrets -n kube-system $(kubectl -n kube-system get secret | awk '/dashboard-admin/{print $1}')</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1 <span class="token comment"># 版本信息</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment <span class="token comment"># 资源类别</span><span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token comment"># 资源元数据</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>deployment <span class="token comment"># 元数据对应的名称</span>  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> <span class="token key atrule">app-test   namespace</span><span class="token punctuation">:</span> app<span class="token punctuation">-</span>test   <span class="token key atrule">lables</span><span class="token punctuation">:</span> <span class="token comment"># 对资源打上便签供后续使用</span>    <span class="token key atrule">apps</span><span class="token punctuation">:</span> nginx   <span class="token key atrule">annotations</span><span class="token punctuation">:</span> <span class="token comment"># 主要目的是方便用户阅读查找</span><span class="token key atrule">spec</span><span class="token punctuation">:</span> <span class="token comment"># 定义期望状态</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">2</span>  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx    <span class="token key atrule">spec</span><span class="token punctuation">:</span>       <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx          <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx<span class="token punctuation">:</span>1.14.2          <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>集群调度 使用</title>
      <link href="/kubernetes/ji-qun-diao-du.html"/>
      <url>/kubernetes/ji-qun-diao-du.html</url>
      
        <content type="html"><![CDATA[<h2 id="调度过程"><a href="#调度过程" class="headerlink" title="调度过程"></a>调度过程</h2><p>调度分为几个部分：首先是<strong>过滤掉不满足条件</strong>的节点，这个过程称为 <strong>predicate</strong>；然后对通过的节点按照优先级排序，这个是 <strong>priority</strong>；最后从中选择<strong>优先级最高的节点</strong>。如果中间任何一步骤有错误，就直接返回错误。Predicate 有一系列的算法可以使用：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1637141679431-1ca2587a-f7f0-48bd-96a2-60f968923735.png#clientId=u8142e09e-abda-4&amp;from=paste&amp;height=422&amp;id=u9944d429&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=422&amp;originWidth=893&amp;originalType=binary&amp;ratio=1&amp;size=199391&amp;status=done&amp;style=none&amp;taskId=u33d14cbf-ad58-44b4-a979-c42e5f88884&amp;width=893" alt="image.png"><br>如果在 <strong>predicate <strong>过程中没有合适的节点，</strong>pod 会一直在 pending 状态</strong>，不断重试调度，直到有节点满足条件。经过这个步骤，如果有多个节点满足条件，就继续 <strong>priorities <strong>过程：按照</strong>优先级大小对节点排序</strong>。优先级由一系列键值对组成，键是该优先级项的名称，值是它的权重（该项的重要性）。这些优先级选项包括：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1637141723086-4ccda8d2-e19c-4b56-bcc8-16a560ce308a.png#clientId=u8142e09e-abda-4&amp;from=paste&amp;height=247&amp;id=u53e449b8&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=247&amp;originWidth=930&amp;originalType=binary&amp;ratio=1&amp;size=155294&amp;status=done&amp;style=none&amp;taskId=ue8e33cdb-6442-4b08-8f12-2bc539f8f5b&amp;width=930" alt="image.png"></p><h2 id="亲和性"><a href="#亲和性" class="headerlink" title="亲和性"></a>亲和性</h2><h3 id="节点亲和性（pod-spec-nodeAffinity）"><a href="#节点亲和性（pod-spec-nodeAffinity）" class="headerlink" title="节点亲和性（pod.spec.nodeAffinity）"></a>节点亲和性（pod.spec.nodeAffinity）</h3><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1637141900615-158977f3-a3c6-4fa9-a7e0-9e95388277e4.png#clientId=u8142e09e-abda-4&amp;from=paste&amp;height=436&amp;id=u3b26b576&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=436&amp;originWidth=833&amp;originalType=binary&amp;ratio=1&amp;size=138128&amp;status=done&amp;style=none&amp;taskId=ue5808968-0aa2-4536-98d5-eea3595a62f&amp;width=833" alt="image.png"></p><h4 id="硬策略-requiredDuringSchedulingIgnoredDuringExecution"><a href="#硬策略-requiredDuringSchedulingIgnoredDuringExecution" class="headerlink" title="硬策略 - requiredDuringSchedulingIgnoredDuringExecution"></a>硬策略 - requiredDuringSchedulingIgnoredDuringExecution</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> affinity  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>affinity<span class="token punctuation">-</span>pod<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">containers</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> with<span class="token punctuation">-</span>node<span class="token punctuation">-</span>affinity      <span class="token key atrule">image</span><span class="token punctuation">:</span> hub.escape.com/library/myapp<span class="token punctuation">:</span>v1  <span class="token key atrule">affinity</span><span class="token punctuation">:</span>    <span class="token key atrule">nodeAffinity</span><span class="token punctuation">:</span>      <span class="token key atrule">requiredDuringSchedulingIgnoredDuringExecution</span><span class="token punctuation">:</span>        <span class="token key atrule">nodeSelectorTerms</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">matchExpressions</span><span class="token punctuation">:</span>              <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> kubernetes.io/hostname                <span class="token key atrule">operator</span><span class="token punctuation">:</span> NotIn                <span class="token key atrule">values</span><span class="token punctuation">:</span>                  <span class="token punctuation">-</span> k8s<span class="token punctuation">-</span>node<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="软策略-preferredDuringSchedulingIgnoredDuringExecution"><a href="#软策略-preferredDuringSchedulingIgnoredDuringExecution" class="headerlink" title="软策略 - preferredDuringSchedulingIgnoredDuringExecution"></a>软策略 - preferredDuringSchedulingIgnoredDuringExecution</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> affinity  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>affinity<span class="token punctuation">-</span>pod<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">containers</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> with<span class="token punctuation">-</span>node<span class="token punctuation">-</span>affinity      <span class="token key atrule">image</span><span class="token punctuation">:</span> hub.escape.com/library/myapp<span class="token punctuation">:</span>v1  <span class="token key atrule">affinity</span><span class="token punctuation">:</span>    <span class="token key atrule">nodeAffinity</span><span class="token punctuation">:</span>      <span class="token key atrule">preferredDuringSchedulingIgnoredDuringExecution</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">weight</span><span class="token punctuation">:</span> <span class="token number">1</span>          <span class="token key atrule">preference</span><span class="token punctuation">:</span>            <span class="token key atrule">matchExpressions</span><span class="token punctuation">:</span>              <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> source                <span class="token key atrule">operator</span><span class="token punctuation">:</span> In                <span class="token key atrule">values</span><span class="token punctuation">:</span>                  <span class="token punctuation">-</span> test<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Pod-亲和性-pod-spec-affinity-podAffinity-x2F-podAntiAffinity"><a href="#Pod-亲和性-pod-spec-affinity-podAffinity-x2F-podAntiAffinity" class="headerlink" title="Pod 亲和性(pod.spec.affinity.podAffinity/podAntiAffinity)"></a>Pod 亲和性(pod.spec.affinity.podAffinity/podAntiAffinity)</h3><ul><li><strong>硬策略 - requiredDuringSchedulingIgnoredDuringExecution</strong></li><li><strong>软策略 - preferredDuringSchedulingIgnoredDuringExecution</strong><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> pod<span class="token punctuation">-</span><span class="token number">3</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> pod<span class="token punctuation">-</span><span class="token number">3</span><span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">containers</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> pod<span class="token punctuation">-</span><span class="token number">3</span>      <span class="token key atrule">image</span><span class="token punctuation">:</span> hub.escape.com/library/myapp<span class="token punctuation">:</span>v1      <span class="token key atrule">affinity</span><span class="token punctuation">:</span>        <span class="token key atrule">podAffinity</span><span class="token punctuation">:</span>          <span class="token key atrule">requiredDuringSchedulingIgnoredDuringExecution</span><span class="token punctuation">:</span> <span class="token comment">#硬策略</span>            <span class="token punctuation">-</span> <span class="token key atrule">labelSelector</span><span class="token punctuation">:</span>                <span class="token key atrule">matchExpressions</span><span class="token punctuation">:</span>                  <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> app                    <span class="token key atrule">operator</span><span class="token punctuation">:</span> In                    <span class="token key atrule">values</span><span class="token punctuation">:</span>                      <span class="token punctuation">-</span> pod<span class="token punctuation">-</span><span class="token number">1</span>              <span class="token key atrule">topologyKey</span><span class="token punctuation">:</span> kubernetes.io/hostname        <span class="token key atrule">podAntiAffinity</span><span class="token punctuation">:</span>          <span class="token key atrule">preferredDuringSchedulingIgnoredDuringExecution</span><span class="token punctuation">:</span> <span class="token comment">#软策略</span>            <span class="token punctuation">-</span> <span class="token key atrule">weight</span><span class="token punctuation">:</span> <span class="token number">1</span>              <span class="token key atrule">podAffinityTerm</span><span class="token punctuation">:</span>                <span class="token key atrule">labelSelector</span><span class="token punctuation">:</span>                  <span class="token key atrule">matchExpressions</span><span class="token punctuation">:</span>                    <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> app                      <span class="token key atrule">operator</span><span class="token punctuation">:</span> In                      <span class="token key atrule">values</span><span class="token punctuation">:</span>                        <span class="token punctuation">-</span> pod<span class="token punctuation">-</span><span class="token number">2</span>                <span class="token key atrule">topologyKey</span><span class="token punctuation">:</span> kubernetes.io/hostname<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1637142207783-5bc4a765-8476-406b-a924-d2866abd6b32.png#clientId=u8142e09e-abda-4&amp;from=paste&amp;height=428&amp;id=uc3c7ca0c&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=428&amp;originWidth=932&amp;originalType=binary&amp;ratio=1&amp;size=93525&amp;status=done&amp;style=none&amp;taskId=u50685864-94ae-405b-a935-19016a0d1d2&amp;width=932" alt="image.png"></li></ul><h4 id="注：拓扑域"><a href="#注：拓扑域" class="headerlink" title="注：拓扑域"></a>注：拓扑域</h4><p>第一种，在使用云存储服务的时候，经常会遇到 <strong>region</strong>，也就是地区的概念，在 K8s 中常通过 label failure-domain.beta.kubernetes.io/region 来标识。这个是为了标识单个 K8s 集群管理的跨 region 的 nodes 到底属于哪个地区；<br>第二种，比较常用的是<strong>可用区</strong>，也就是** available zone**，在 K8s 中常通过 label failure-domain.beta.kubernetes.io/zone 来标识。这个是为了标识单个 K8s 集群管理的跨 zone 的 nodes 到底属于哪个可用区；<br>第三种，是 <strong>hostname</strong>，就是单机维度，是拓扑域为 **node **范围，在 K8s 中常通过 label kubernetes.io/hostname 来标识，<br>[</p><p>](<a href="https://blog.csdn.net/weixin_30336949/article/details/112485203">https://blog.csdn.net/weixin_30336949/article/details/112485203</a>)</p><h2 id="污点和容忍"><a href="#污点和容忍" class="headerlink" title="污点和容忍"></a>污点和容忍</h2><p>节点亲和性，是 pod 的一种属性（偏好或硬性要求），它使 pod 被吸引到一类特定的节点。Taint 则相反，它使节点能够<strong>排斥</strong>一类特定的 pod。</p><p>**Taint **和 **toleration **相互配合，可以用来避免 <strong>pod 被分配到不合适的节点上</strong>。每个节点上都可以应用一个或多个 taint，这表示对于那些不能容忍这些 taint 的 pod，是不会被该节点接受的。如果将 toleration 应用于 pod 上，则表示这些 pod 可以（但不要求）被调度到具有匹配 taint 的节点上。</p><h3 id="污点"><a href="#污点" class="headerlink" title="污点"></a>污点</h3><ul><li><strong>NoSchedule</strong>：表示 k8s 将不会将 Pod 调度到具有该污点的 Node 上</li><li><strong>PreferNoSchedule</strong>：表示 k8s 将尽量避免将 Pod 调度到具有该污点的 Node 上</li><li><strong>NoExecute</strong>：将不会将 Pod 调度到具有该污点的 Node 上，同时会将 Node 上已经存在的 Pod 驱逐出去</li></ul><h4 id="1-查看污点"><a href="#1-查看污点" class="headerlink" title="1.查看污点"></a>1.查看污点</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl describe <span class="token function">node</span> k8s-masterTaints:         node-role.kubernetes.io/master:NoSchedule<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="2-污点的设置、查看和去除"><a href="#2-污点的设置、查看和去除" class="headerlink" title="2.污点的设置、查看和去除"></a>2.污点的设置、查看和去除</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 设置污点</span>$ kubectl taint nodes k8s<span class="token punctuation">-</span>node1 key1=value1<span class="token punctuation">:</span>NoSchedule$ kubectl taint nodes k8s<span class="token punctuation">-</span>node1 type=master<span class="token punctuation">:</span>NoExecute<span class="token comment"># 节点说明中查找Taints字段</span>$ kubectl describe pod pod<span class="token punctuation">-</span>name<span class="token comment"># 去除污点</span>$ kubectl taint nodes k8s<span class="token punctuation">-</span>node1 key1<span class="token punctuation">:</span>NoSchedule<span class="token punctuation">-</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="容忍"><a href="#容忍" class="headerlink" title="容忍"></a>容忍</h4><p>设置了污点的 Node 将根据 taint 的 effect：<strong>NoSchedule</strong>、<strong>PreferNoSchedule</strong>、<strong>NoExecute <strong>和 Pod 之间产生</strong>互斥</strong>的关系，Pod 将在一定程度上不会被调度到 Node 上。但我们可以在 Pod 上设置容忍，意思是设置了<strong>容忍的 Pod 将可以容忍污点的存在</strong>，可以被调度到存在污点的 Node 上。</p><ul><li>pod.spec.tolerations<ul><li>其中 operator 的值为 Exists 将会忽略 value 值</li><li>其中 key, value, effect 要与 Node 上设置的 taint 保持一致</li><li>其中 tolerationSeconds 用于描述当 Pod 需要被驱逐时可以在 Pod 上继续保留运行的时间<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> pod<span class="token punctuation">-</span><span class="token number">3</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> pod<span class="token punctuation">-</span><span class="token number">3</span><span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">containers</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> pod<span class="token punctuation">-</span><span class="token number">3</span>      <span class="token key atrule">image</span><span class="token punctuation">:</span> hub.escape.com/library/myapp<span class="token punctuation">:</span>v1  <span class="token key atrule">tolerations</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">"type"</span>      <span class="token key atrule">operator</span><span class="token punctuation">:</span> "Equal" //操作符      <span class="token key atrule">value</span><span class="token punctuation">:</span> "master"  //key，value      <span class="token key atrule">effect</span><span class="token punctuation">:</span> "NoSchedule"   //污点策略      <span class="token key atrule">tolerationSeconds</span><span class="token punctuation">:</span> 3600 //保留运行时间秒    <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">"type"</span>      <span class="token key atrule">operator</span><span class="token punctuation">:</span> <span class="token string">"Equal"</span>      <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">"master"</span>      <span class="token key atrule">effect</span><span class="token punctuation">:</span> <span class="token string">"NoExecute"</span>    <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">"type"</span>      <span class="token key atrule">operator</span><span class="token punctuation">:</span> <span class="token string">"Exists"</span>      <span class="token key atrule">effect</span><span class="token punctuation">:</span> <span class="token string">"NoSchedule"</span>      <span class="token punctuation">---</span><span class="token key atrule">tolerations</span><span class="token punctuation">:</span>  当不指定 key 值时，表示容忍所有的污点 key  <span class="token key atrule">operator</span><span class="token punctuation">:</span> <span class="token string">"Exists"</span>  <span class="token punctuation">---</span><span class="token key atrule">tolerations</span><span class="token punctuation">:</span>  <span class="token comment">#当不指定 effect 值时，表示容忍所有的污点作用</span>  <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">"key"</span>    <span class="token key atrule">operator</span><span class="token punctuation">:</span> <span class="token string">"Exists"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h2 id="指定调度节点"><a href="#指定调度节点" class="headerlink" title="指定调度节点"></a>指定调度节点</h2><p>将 Pod 直接调度到指定的 Node 节点上，会跳过 Scheduler 的调度策略，该匹配规则是<strong>强制匹配。</strong></p><h4 id="1-通过nodeName"><a href="#1-通过nodeName" class="headerlink" title="1.通过nodeName"></a>1.通过nodeName</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> extensions/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> myweb<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">7</span>  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> myweb    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">nodeName</span><span class="token punctuation">:</span> k8s<span class="token punctuation">-</span>node1  <span class="token comment">## 通过nodename</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> myweb          <span class="token key atrule">image</span><span class="token punctuation">:</span> hub.escape.com/library/myapp<span class="token punctuation">:</span>v1          <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-通过标签"><a href="#2-通过标签" class="headerlink" title="2.通过标签"></a>2.通过标签</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> extensions/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> myweb<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">2</span>  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> myweb    <span class="token key atrule">spec</span><span class="token punctuation">:</span>    <span class="token key atrule">nodeSelector</span><span class="token punctuation">:</span>  <span class="token comment">#通过标签选择</span>      <span class="token key atrule">type</span><span class="token punctuation">:</span> BackendNode    <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> myweb        <span class="token key atrule">image</span><span class="token punctuation">:</span> hub.escape.com/library/myapp<span class="token punctuation">:</span>v1        ports<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>存储 使用</title>
      <link href="/kubernetes/cun-chu.html"/>
      <url>/kubernetes/cun-chu.html</url>
      
        <content type="html"><![CDATA[<h4 id="参考地址：https-www-yuque-com-u12604243-mc2aau-qgh2pg-IHoc8"><a href="#参考地址：https-www-yuque-com-u12604243-mc2aau-qgh2pg-IHoc8" class="headerlink" title="参考地址：https://www.yuque.com/u12604243/mc2aau/qgh2pg#IHoc8"></a>参考地址：<a href="#IHoc8">https://www.yuque.com/u12604243/mc2aau/qgh2pg#IHoc8</a></h4><h1 id="ConfigMap"><a href="#ConfigMap" class="headerlink" title="ConfigMap"></a>ConfigMap</h1><h2 id="创建Map"><a href="#创建Map" class="headerlink" title="创建Map"></a>创建Map</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#使用目录创建</span>kubectl create configmap ganme-config --from-file<span class="token operator">=</span><span class="token punctuation">..</span>/mapdir<span class="token comment">#使用文件创建</span>kubectl create cm ganme-file --from-file<span class="token operator">=</span>./mapdir/game.properties <span class="token comment">#使用字面值创建</span>kubectl create cm special-config2 --from-literal<span class="token operator">=</span>sp.how<span class="token operator">=</span>very --from-literal<span class="token operator">=</span>sp.type<span class="token operator">=</span>charm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ConfigMap-的使用"><a href="#ConfigMap-的使用" class="headerlink" title="ConfigMap 的使用"></a>ConfigMap 的使用</h2><p><strong>使用 ConfigMap 来替代环境变量</strong></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> special<span class="token punctuation">-</span>config  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">special.how</span><span class="token punctuation">:</span> very  <span class="token key atrule">special.type</span><span class="token punctuation">:</span> charm<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> env<span class="token punctuation">-</span>config  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">log_level</span><span class="token punctuation">:</span> INFO<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> myapp<span class="token punctuation">-</span>test<span class="token punctuation">-</span>pod<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> Never  <span class="token key atrule">containers</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> test<span class="token punctuation">-</span>container      <span class="token key atrule">image</span><span class="token punctuation">:</span> hub.escape.com/library/myapp<span class="token punctuation">:</span>v1      <span class="token key atrule">command</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"/bin/sh"</span><span class="token punctuation">,</span> <span class="token string">"-c"</span><span class="token punctuation">,</span> <span class="token string">"env"</span><span class="token punctuation">]</span>      <span class="token key atrule">env</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> SPECIAL_LEVEL_KEY          <span class="token key atrule">valueFrom</span><span class="token punctuation">:</span>            <span class="token key atrule">configMapKeyRef</span><span class="token punctuation">:</span>              <span class="token key atrule">name</span><span class="token punctuation">:</span> special<span class="token punctuation">-</span>config              <span class="token key atrule">key</span><span class="token punctuation">:</span> special.how        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> SPECIAL_TYPE_KEY          <span class="token key atrule">valueFrom</span><span class="token punctuation">:</span>            <span class="token key atrule">configMapKeyRef</span><span class="token punctuation">:</span>              <span class="token key atrule">name</span><span class="token punctuation">:</span> special<span class="token punctuation">-</span>config              <span class="token key atrule">key</span><span class="token punctuation">:</span> special.type      <span class="token key atrule">envFrom</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">configMapRef</span><span class="token punctuation">:</span>          <span class="token key atrule">name</span><span class="token punctuation">:</span> env<span class="token punctuation">-</span>config<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>用 ConfigMap 设置命令行参数</strong></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> special<span class="token punctuation">-</span>config  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">special.how</span><span class="token punctuation">:</span> very  <span class="token key atrule">special.type</span><span class="token punctuation">:</span> charm<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> myapp<span class="token punctuation">-</span>test<span class="token punctuation">-</span>pod<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> Never  <span class="token key atrule">containers</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> test<span class="token punctuation">-</span>container      <span class="token key atrule">image</span><span class="token punctuation">:</span> myapp<span class="token punctuation">:</span>v1      <span class="token key atrule">command</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"/bin/sh"</span><span class="token punctuation">,</span> <span class="token string">"-c"</span><span class="token punctuation">,</span> <span class="token string">"echo $(SPECIAL_LEVEL_KEY) $(SPECIAL_TYPE_KEY)"</span><span class="token punctuation">]</span>      <span class="token key atrule">env</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> SPECIAL_LEVEL_KEY          <span class="token key atrule">valueFrom</span><span class="token punctuation">:</span>            <span class="token key atrule">configMapKeyRef</span><span class="token punctuation">:</span>              <span class="token key atrule">name</span><span class="token punctuation">:</span> special<span class="token punctuation">-</span>config              <span class="token key atrule">key</span><span class="token punctuation">:</span> special.how        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> SPECIAL_TYPE_KEY          <span class="token key atrule">valueFrom</span><span class="token punctuation">:</span>            <span class="token key atrule">configMapKeyRef</span><span class="token punctuation">:</span>              <span class="token key atrule">name</span><span class="token punctuation">:</span> special<span class="token punctuation">-</span>config              <span class="token key atrule">key</span><span class="token punctuation">:</span> special.type<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>通过数据卷插件使用 ConfigMap</strong></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> special<span class="token punctuation">-</span>config  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">special.how</span><span class="token punctuation">:</span> very  <span class="token key atrule">special.type</span><span class="token punctuation">:</span> charm<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> myapp<span class="token punctuation">-</span>test<span class="token punctuation">-</span>pod<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> Never  <span class="token key atrule">containers</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> test<span class="token punctuation">-</span>container      <span class="token key atrule">image</span><span class="token punctuation">:</span> hub.escape.com/library/myapp<span class="token punctuation">:</span>v1      <span class="token key atrule">command</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"/bin/sh"</span><span class="token punctuation">,</span> <span class="token string">"-c"</span><span class="token punctuation">,</span> <span class="token string">"cat /etc/config/special.how"</span><span class="token punctuation">]</span>      <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> config<span class="token punctuation">-</span>volume          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /etc/config  <span class="token key atrule">volumes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> config<span class="token punctuation">-</span>volume      <span class="token key atrule">configMap</span><span class="token punctuation">:</span>        <span class="token key atrule">name</span><span class="token punctuation">:</span> special<span class="token punctuation">-</span>config<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>热更新</strong></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 修改ConfigMap配置</span>$ kubectl edit configmap log<span class="token punctuation">-</span>config<span class="token comment"># 查找对应信息</span>$ kubectl exec \    `kubectl get pods <span class="token punctuation">-</span>l run=my<span class="token punctuation">-</span>nginx <span class="token punctuation">-</span>o=name<span class="token punctuation">|</span>cut <span class="token punctuation">-</span>d "/" <span class="token punctuation">-</span>f2` \    cat /etc/config/log_levelDEBUG<span class="token comment"># 修改version/config来进行滚动更新</span>kubectl patch deployment my<span class="token punctuation">-</span>nginx \    <span class="token punctuation">-</span><span class="token punctuation">-</span>patch '<span class="token punctuation">{</span><span class="token key atrule">"spec"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token key atrule">"template"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token key atrule">"metadata"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token key atrule">"annotations"</span><span class="token punctuation">:</span> \    <span class="token punctuation">{</span><span class="token key atrule">"version/config"</span><span class="token punctuation">:</span> <span class="token string">"20190411"</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Secret"><a href="#Secret" class="headerlink" title="Secret"></a>Secret</h1><p>**Secret <strong>解决了密码、token、密钥等敏感数据的配置问题，而不需要把这些敏感数据暴露到镜像或者 Pod Spec 中。</strong>Secret **可以以 Volume 或者环境变量的方式使用。Secret 有三种类型，分别是：</p><ul><li><strong>Service Account ：</strong>用来访问 Kubernetes API，由 Kubernetes 自动创建，并且会自动挂载到 Pod 的特点目录中。</li><li><strong>Opaque：</strong>base64 编码格式的 Secret，用来存储密码、密钥等，相当来说不安全。</li><li><strong>kubernetes.io/dockerconfigjson：</strong>用来存储私有 docker registry 的认证信息。</li></ul><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Secret<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> mysecret<span class="token key atrule">type</span><span class="token punctuation">:</span> Opaque<span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">password</span><span class="token punctuation">:</span> MWYyZDFlMmU2N2Rm  <span class="token key atrule">username</span><span class="token punctuation">:</span> YWRtaW4=<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> seret<span class="token punctuation">-</span>test<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">containers</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> db      <span class="token key atrule">image</span><span class="token punctuation">:</span> hub.escape.com/library/myapp<span class="token punctuation">:</span>v1      <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> secrets          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> <span class="token string">"readOnly: true"</span>  <span class="token key atrule">volumes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> secrets      <span class="token key atrule">secret</span><span class="token punctuation">:</span>        <span class="token key atrule">secretName</span><span class="token punctuation">:</span> mysecre  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Volume"><a href="#Volume" class="headerlink" title="Volume"></a>Volume</h1><p><strong>直接挂载目录</strong></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> pv<span class="token punctuation">-</span>ng<span class="token punctuation">-</span>deploy<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">2</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span> <span class="token comment"># 定义选择器</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span> <span class="token comment">#匹配的标签，下面定义了3个标签，将会选择有这些标签的pod</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> pvnginx  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> pvnginx    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> pvnginx        <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx        <span class="token key atrule">ports</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span>        <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span><span class="token comment">#挂载pv</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> ng<span class="token punctuation">-</span>data<span class="token comment">#挂载资源的名称，随便起</span>          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /ng/data<span class="token comment">#挂载目</span>         <span class="token comment"># 方法.直接挂载到nfs目录上</span>      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> ng<span class="token punctuation">-</span>data        <span class="token key atrule">nfs</span><span class="token punctuation">:</span>          <span class="token key atrule">server</span><span class="token punctuation">:</span> 192.168.56.12          <span class="token key atrule">path</span><span class="token punctuation">:</span> /nfsdata/ng<span class="token punctuation">-</span>data/wordpress<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="PV"><a href="#PV" class="headerlink" title="PV"></a>PV</h1><h2 id="一、PV（其他可参考官方文档）（静态挂载）"><a href="#一、PV（其他可参考官方文档）（静态挂载）" class="headerlink" title="一、PV（其他可参考官方文档）（静态挂载）"></a>一、PV（其他可参考官方文档）（静态挂载）</h2><h3 id="NFS"><a href="#NFS" class="headerlink" title="NFS"></a>NFS</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PersistentVolume<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> pv0001<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">capacity</span><span class="token punctuation">:</span>    <span class="token key atrule">storage</span><span class="token punctuation">:</span> 1Gi  <span class="token key atrule">accessModes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> ReadWriteOnce  <span class="token key atrule">persistentVolumeReclaimPolicy</span><span class="token punctuation">:</span> Recycle  <span class="token key atrule">storageClassName</span><span class="token punctuation">:</span> nfspv <span class="token comment"># 指定存储class那么，pvc必须配置一样才行</span>  <span class="token key atrule">nfs</span><span class="token punctuation">:</span>    <span class="token key atrule">path</span><span class="token punctuation">:</span> /tmp    <span class="token key atrule">server</span><span class="token punctuation">:</span> 192.168.56.11<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="本地卷："><a href="#本地卷：" class="headerlink" title="本地卷："></a>本地卷：</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PersistentVolume<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> example<span class="token punctuation">-</span>pv<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">capacity</span><span class="token punctuation">:</span>    <span class="token key atrule">storage</span><span class="token punctuation">:</span> 1Gi  <span class="token key atrule">volumeMode</span><span class="token punctuation">:</span> Filesystem  <span class="token key atrule">accessModes</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> ReadWriteOnce  <span class="token key atrule">persistentVolumeReclaimPolicy</span><span class="token punctuation">:</span> Delete  <span class="token key atrule">storageClassName</span><span class="token punctuation">:</span> local<span class="token punctuation">-</span>storage  <span class="token key atrule">local</span><span class="token punctuation">:</span>    <span class="token key atrule">path</span><span class="token punctuation">:</span> /disks  <span class="token key atrule">nodeAffinity</span><span class="token punctuation">:</span>    <span class="token key atrule">required</span><span class="token punctuation">:</span>      <span class="token key atrule">nodeSelectorTerms</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">matchExpressions</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> kubernetes.io/hostname          <span class="token key atrule">operator</span><span class="token punctuation">:</span> In          <span class="token key atrule">values</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> k8s<span class="token punctuation">-</span>node1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>PV 的访问模式（ accessModes） 有三种</strong>： </p><ul><li><strong>ReadWriteOnce</strong>（ RWO） ： 是最基本的方式， 可读可写， 但只支持被单个节点挂<br>载。</li><li><strong>ReadOnlyMany</strong>（ ROX） ： 可以以只读的方式被多个节点挂载。</li><li><strong>ReadWriteMany</strong>（ RWX） ： 这种存储可以以读写的方式被多个节点共享。 不是每一<br>种存储都支持这三种方式， 像共享方式， 目前支持的还比较少， 比较常用的是<br>NFS。 在 PVC 绑定 PV 时通常根据两个条件来绑定， 一个是存储的大小， 另一个就<br>是访问模式</li></ul><p><strong>PV 的回收策略（ persistentVolumeReclaimPolicy， 即 PVC 释放卷的时候 PV 该如何操<br>作） 也有三种 ：</strong></p><ul><li><strong>Retain</strong>， 不清理, 保留 Volume（ 需要手动清理） </li><li><strong>Recycle</strong>， 删除数据， 即 rm -rf /thevolume/* （ 只有 NFS 和 HostPath 支持 ）</li><li><strong>Delete</strong>， 删除存储资源， 比如删除 AWS EBS 卷（ 只有 AWS EBS, GCE PD, Azure<br>Disk 和 Cinder 支持）</li></ul><p><strong>卷阶段</strong></p><ul><li><strong>Available</strong>（可用）– 卷是一个空闲资源，尚未绑定到任何申领；</li><li><strong>Bound</strong>（已绑定）– 该卷已经绑定到某申领；</li><li><strong>Released</strong>（已释放）– 所绑定的申领已被删除，但是资源尚未被集群回收；</li><li><strong>Failed</strong>（失败）– 卷的自动回收操作失败。</li></ul><h2 id="二-PVC（PersistentVolumeClaim-）"><a href="#二-PVC（PersistentVolumeClaim-）" class="headerlink" title="二.PVC（PersistentVolumeClaim ）"></a>二.PVC（PersistentVolumeClaim ）</h2><h3 id="1-新建pvc"><a href="#1-新建pvc" class="headerlink" title="1.新建pvc"></a>1.新建pvc</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PersistentVolumeClaim<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>pvc<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">storageClassName</span><span class="token punctuation">:</span> nfspv <span class="token comment">#绑定与pv一直</span>  <span class="token key atrule">volumeName</span><span class="token punctuation">:</span> zk<span class="token punctuation">-</span>pop<span class="token punctuation">-</span>pv<span class="token punctuation">-</span><span class="token number">2</span> <span class="token comment"># 挂载pv名称 可选</span>  <span class="token key atrule">dataSource</span><span class="token punctuation">:</span>   <span class="token comment"># 快照卷</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> new<span class="token punctuation">-</span>snapshot<span class="token punctuation">-</span>test    <span class="token key atrule">kind</span><span class="token punctuation">:</span> VolumeSnapshot    <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> snapshot.storage.k8s.io  <span class="token key atrule">accessModes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> ReadWriteOnce    <span class="token comment">#必须跟pv一直</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">pv</span><span class="token punctuation">:</span> kod<span class="token punctuation">-</span>pv01//定义pv标签，与pv进行关联  <span class="token key atrule">resources</span><span class="token punctuation">:</span>    <span class="token key atrule">requests</span><span class="token punctuation">:</span>      <span class="token key atrule">storage</span><span class="token punctuation">:</span> 1Gi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-pvc挂载应用"><a href="#2-pvc挂载应用" class="headerlink" title="2.pvc挂载应用"></a>2.pvc挂载应用</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> pv<span class="token punctuation">-</span>ng<span class="token punctuation">-</span>deploy<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">2</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span> <span class="token comment"># 定义选择器</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span> <span class="token comment">#匹配的标签，下面定义了3个标签，将会选择有这些标签的pod</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> pvnginx  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> pvnginx    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> pvnginx        <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx        <span class="token key atrule">ports</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span>        <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span><span class="token comment">#挂载pv</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> ng<span class="token punctuation">-</span>data<span class="token comment">#挂载资源的名称，随便起</span>          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /ng/data<span class="token comment">#挂载目录</span>          <span class="token comment">#方法1.挂载pvc</span>      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> ng<span class="token punctuation">-</span>data<span class="token comment">#资源名称和volumemounts中的name对应</span>        <span class="token key atrule">persistentVolumeClaim</span><span class="token punctuation">:</span>          <span class="token key atrule">claimName</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>pvc<span class="token comment">#pvc的名称</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-pv和pvc删除"><a href="#3-pv和pvc删除" class="headerlink" title="3.pv和pvc删除"></a>3.pv和pvc删除</h3><ul><li>优先删除使用deploy</li><li>在删除pvc</li><li>最后删除pv</li></ul><h2 id="三、StorageClass-动态挂载）"><a href="#三、StorageClass-动态挂载）" class="headerlink" title="三、StorageClass(动态挂载）"></a>三、StorageClass(动态挂载）</h2><p>Kubernetes提供了一套可以自动创建PV的机制,即:Dynamic Provisioning.而这个机制的核心在于:StorageClass这个API对象. </p><h3 id="1-步骤"><a href="#1-步骤" class="headerlink" title="1.步骤"></a>1.步骤</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token number">1.</span>创建一个可用的<span class="token constant">NFS</span> <span class="token class-name">Serve</span><span class="token number">2.</span>创建<span class="token class-name">Service</span> <span class="token class-name">Account</span><span class="token punctuation">.</span>这是用来管控<span class="token constant">NFS</span> provisioner在k8s集群中运行的权限<span class="token number">3.</span>创建<span class="token class-name">StorageClass</span><span class="token punctuation">.</span>负责建立<span class="token constant">PVC</span>并调用<span class="token constant">NFS</span> provisioner进行预定的工作<span class="token punctuation">,</span>并让<span class="token constant">PV</span>与<span class="token constant">PVC</span>建立管理<span class="token number">4.</span>创建<span class="token constant">NFS</span> provisioner<span class="token punctuation">.</span>有两个功能<span class="token punctuation">,</span>一个是在<span class="token constant">NFS</span>共享目录下创建挂载点<span class="token punctuation">(</span>volume<span class="token punctuation">)</span><span class="token punctuation">,</span>另一个则是建了<span class="token constant">PV</span>并将<span class="token constant">PV</span>与<span class="token constant">NFS</span>的挂载点建立关联  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-搭建"><a href="#2-搭建" class="headerlink" title="2.搭建"></a>2.搭建</h3><h4 id="2-1创建rbac配置account和权限"><a href="#2-1创建rbac配置account和权限" class="headerlink" title="2.1创建rbac配置account和权限"></a>2.1创建rbac配置account和权限</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner  <span class="token comment"># replace with namespace where provisioner is deployed</span>  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default        <span class="token comment">#根据实际环境设定namespace,下面类同</span><span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner<span class="token punctuation">-</span>runner<span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"persistentvolumes"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"list"</span><span class="token punctuation">,</span> <span class="token string">"watch"</span><span class="token punctuation">,</span> <span class="token string">"create"</span><span class="token punctuation">,</span> <span class="token string">"delete"</span><span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"persistentvolumeclaims"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"list"</span><span class="token punctuation">,</span> <span class="token string">"watch"</span><span class="token punctuation">,</span> <span class="token string">"update"</span><span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"storage.k8s.io"</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"storageclasses"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"list"</span><span class="token punctuation">,</span> <span class="token string">"watch"</span><span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"events"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"create"</span><span class="token punctuation">,</span> <span class="token string">"update"</span><span class="token punctuation">,</span> <span class="token string">"patch"</span><span class="token punctuation">]</span><span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRoleBinding<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> run<span class="token punctuation">-</span>nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner<span class="token key atrule">subjects</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount    <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner    <span class="token comment"># replace with namespace where provisioner is deployed</span>    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>  <span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole  <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner<span class="token punctuation">-</span>runner  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io<span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Role<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> leader<span class="token punctuation">-</span>locking<span class="token punctuation">-</span>nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner    <span class="token comment"># replace with namespace where provisioner is deployed</span>  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"endpoints"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"list"</span><span class="token punctuation">,</span> <span class="token string">"watch"</span><span class="token punctuation">,</span> <span class="token string">"create"</span><span class="token punctuation">,</span> <span class="token string">"update"</span><span class="token punctuation">,</span> <span class="token string">"patch"</span><span class="token punctuation">]</span><span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> RoleBinding<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> leader<span class="token punctuation">-</span>locking<span class="token punctuation">-</span>nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner<span class="token key atrule">subjects</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount    <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner    <span class="token comment"># replace with namespace where provisioner is deployed</span>    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>  <span class="token key atrule">kind</span><span class="token punctuation">:</span> Role  <span class="token key atrule">name</span><span class="token punctuation">:</span> leader<span class="token punctuation">-</span>locking<span class="token punctuation">-</span>nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-2创建NFS资源的StorageClass"><a href="#2-2创建NFS资源的StorageClass" class="headerlink" title="2.2创建NFS资源的StorageClass"></a>2.2创建NFS资源的StorageClass</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> storage.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> StorageClass<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> managed<span class="token punctuation">-</span>nfs<span class="token punctuation">-</span>storage<span class="token key atrule">provisioner</span><span class="token punctuation">:</span> qgg<span class="token punctuation">-</span>nfs<span class="token punctuation">-</span>storage <span class="token comment">#这里的名称要和provisioner配置文件中的环境变量PROVISIONER_NAME保持一致</span><span class="token key atrule">parameters</span><span class="token punctuation">:</span>  <span class="token key atrule">archiveOnDelete</span><span class="token punctuation">:</span> <span class="token string">"false"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-3创建nfs-Provisioner"><a href="#2-3创建nfs-Provisioner" class="headerlink" title="2.3创建nfs-Provisioner"></a>2.3创建nfs-Provisioner</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner  <span class="token comment"># replace with namespace where provisioner is deployed</span>  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default  <span class="token comment">#与RBAC文件中的namespace保持一致</span><span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner  <span class="token key atrule">strategy</span><span class="token punctuation">:</span>    <span class="token key atrule">type</span><span class="token punctuation">:</span> Recreate  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner          <span class="token key atrule">image</span><span class="token punctuation">:</span> quay.io/external_storage/nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner<span class="token punctuation">:</span>latest          <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>root              <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /persistentvolumes          <span class="token key atrule">env</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> PROVISIONER_NAME              <span class="token key atrule">value</span><span class="token punctuation">:</span> qgg<span class="token punctuation">-</span>nfs<span class="token punctuation">-</span>storage  <span class="token comment">#provisioner名称,请确保该名称与 nfs-StorageClass.yaml文件中的provisioner名称保持一致</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> NFS_SERVER              <span class="token key atrule">value</span><span class="token punctuation">:</span> 192.168.56.11   <span class="token comment">#NFS Server IP地址</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> NFS_PATH                <span class="token key atrule">value</span><span class="token punctuation">:</span> /nfsdata    <span class="token comment">#NFS挂载卷</span>      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>root          <span class="token key atrule">nfs</span><span class="token punctuation">:</span>            <span class="token key atrule">server</span><span class="token punctuation">:</span> 192.168.56.11  <span class="token comment">#NFS Server IP地址</span>            <span class="token key atrule">path</span><span class="token punctuation">:</span> /nfsdata     <span class="token comment">#NFS 挂载卷</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-4创建pvc"><a href="#2-4创建pvc" class="headerlink" title="2.4创建pvc"></a>2.4创建pvc</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PersistentVolumeClaim<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> test<span class="token punctuation">-</span>claim  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">volume.beta.kubernetes.io/storage-class</span><span class="token punctuation">:</span> <span class="token string">"managed-nfs-storage"</span>   <span class="token comment">#与nfs-StorageClass.yaml metadata.name保持一致</span><span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">accessModes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> ReadWriteMany  <span class="token key atrule">resources</span><span class="token punctuation">:</span>    <span class="token key atrule">requests</span><span class="token punctuation">:</span>      <span class="token key atrule">storage</span><span class="token punctuation">:</span> 1Mi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-5设置默认sc"><a href="#2-5设置默认sc" class="headerlink" title="2.5设置默认sc"></a>2.5设置默认sc</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl patch storageclass managed-nfs-storage <span class="token parameter variable">-p</span> <span class="token string">'{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="2-6出现创建pvc后一直等待情况waiting-for-a-volume-to-be-created-either-by-external-provisioner-“qgg-nfs-storage”-or-manually-created-by-system-administrator"><a href="#2-6出现创建pvc后一直等待情况waiting-for-a-volume-to-be-created-either-by-external-provisioner-“qgg-nfs-storage”-or-manually-created-by-system-administrator" class="headerlink" title="2.6出现创建pvc后一直等待情况waiting for a volume to be created, either by external provisioner “qgg-nfs-storage” or manually created by system administrator"></a>2.6出现创建pvc后一直等待情况<a href="https://www.cnblogs.com/Applogize/p/15161379.html">waiting for a volume to be created, either by external provisioner “qgg-nfs-storage” or manually created by system administrator</a></h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 修改kube-apiserver.yaml文件</span>参考地址：https<span class="token punctuation">:</span>//www.cnblogs.com/Applogize/p/15161379.html<span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>matser01 nfs.rbac<span class="token punctuation">]</span><span class="token comment"># cat /etc/kubernetes/manifests/kube-apiserver.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token punctuation">---</span><span class="token punctuation">-</span><span class="token punctuation">-</span>    <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>tls<span class="token punctuation">-</span>private<span class="token punctuation">-</span>key<span class="token punctuation">-</span>file=/etc/kubernetes/pki/apiserver.key    <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>feature<span class="token punctuation">-</span>gates=RemoveSelfLink=false <span class="token comment"># 添加这个配置</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、案例-搭建redis服务器并挂载）"><a href="#四、案例-搭建redis服务器并挂载）" class="headerlink" title="四、案例(搭建redis服务器并挂载）"></a>四、案例(搭建redis服务器并挂载）</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> PersistentVolumeClaim<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> redis<span class="token punctuation">-</span>pvc  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">volume.beta.kubernetes.io/storage-class</span><span class="token punctuation">:</span> <span class="token string">"managed-nfs-storage"</span>   <span class="token comment">#与nfs-StorageClass.yaml metadata.name保持一致</span><span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">accessModes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> ReadWriteMany  <span class="token key atrule">resources</span><span class="token punctuation">:</span>    <span class="token key atrule">requests</span><span class="token punctuation">:</span>      <span class="token key atrule">storage</span><span class="token punctuation">:</span> 100Mi<span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> devops<span class="token punctuation">-</span>redis   <span class="token key atrule">name</span><span class="token punctuation">:</span> deploy<span class="token punctuation">-</span>devops<span class="token punctuation">-</span>redis<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>   <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> devops<span class="token punctuation">-</span>redis  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> devops<span class="token punctuation">-</span>redis    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> redis<span class="token punctuation">-</span>container          <span class="token key atrule">image</span><span class="token punctuation">:</span> redis          <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> Always          <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> <span class="token string">"/data/redis-data/"</span> <span class="token comment"># 挂载容器里面的目录</span>            <span class="token key atrule">name</span><span class="token punctuation">:</span> redis<span class="token punctuation">-</span>datadir      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> redis<span class="token punctuation">-</span>datadir          <span class="token key atrule">persistentVolumeClaim</span><span class="token punctuation">:</span>            <span class="token key atrule">claimName</span><span class="token punctuation">:</span> redis<span class="token punctuation">-</span>pvc  <span class="token comment"># 挂载k8s的pvc名称</span><span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> devops<span class="token punctuation">-</span>redis  <span class="token key atrule">name</span><span class="token punctuation">:</span> srv<span class="token punctuation">-</span>devops<span class="token punctuation">-</span>redis<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> NodePort  <span class="token key atrule">ports</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> http    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">6379</span>     <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">6379</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> devops<span class="token punctuation">-</span>redis  <span class="token key atrule">sessionAffinity</span><span class="token punctuation">:</span> ClientIP  <span class="token key atrule">sessionAffinityConfig</span><span class="token punctuation">:</span>    <span class="token key atrule">clientIP</span><span class="token punctuation">:</span>      <span class="token key atrule">timeoutSeconds</span><span class="token punctuation">:</span> <span class="token number">10800</span>      <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>article title</title>
      <link href="/article-title.html"/>
      <url>/article-title.html</url>
      
        <content type="html"><![CDATA[<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/hello-world.html"/>
      <url>/hello-world.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
