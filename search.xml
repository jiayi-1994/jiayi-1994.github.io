<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Dockerfile的使用</title>
      <link href="/devops/dockerfile-de-shi-yong.html"/>
      <url>/devops/dockerfile-de-shi-yong.html</url>
      
        <content type="html"><![CDATA[<h1 id="DockerFile介绍"><a href="#DockerFile介绍" class="headerlink" title="DockerFile介绍"></a>DockerFile介绍</h1><p>镜像的定制实际上就是定制每一层所添加的配置、文件。如果我们可以把每一层修改、安装、构建、操作的命令都写入一个脚本，用这个脚本来构建、定制镜像，那么之前提及的无法重复的问题、镜</p><p>像构建透明性的问题、体积的问题就都会解决。这个脚本就是Dockerfile。</p><p>　　Dockerfile是一个文本文件，其内包含了一条条的指令(Instruction)，每一条指令构建一层，因此每</p><p>一条指令的内容，就是描述该层应当如何构建。</p><h2 id="Go的DockerFile"><a href="#Go的DockerFile" class="headerlink" title="Go的DockerFile"></a>Go的DockerFile</h2><pre class="line-numbers language-docker" data-language="docker"><code class="language-docker"><span class="token comment"># FROM 基于 golang:1.20</span><span class="token instruction"><span class="token keyword">FROM</span> golang:1.20 <span class="token keyword">AS</span> builder</span><span class="token comment"># ENV 设置环境变量</span><span class="token instruction"><span class="token keyword">ENV</span> GOPATH=/opt/repo</span><span class="token instruction"><span class="token keyword">ENV</span> GO111MODULE=on</span><span class="token instruction"><span class="token keyword">ENV</span> GOPROXY=https://goproxy.cn,https://gocenter.io,https://goproxy.io,direct</span><span class="token instruction"><span class="token keyword">ENV</span> CGO_ENABLED=0</span><span class="token instruction"><span class="token keyword">ENV</span> GOOS=linux</span><span class="token instruction"><span class="token keyword">WORKDIR</span> <span class="token variable">$GOPATH</span>/app</span><span class="token comment"># COPY 源路径 目标路径</span><span class="token instruction"><span class="token keyword">COPY</span> . <span class="token variable">$GOPATH</span>/app</span><span class="token comment"># RUN 执行 go build .</span><span class="token instruction"><span class="token keyword">RUN</span>  cd <span class="token variable">$GOPATH</span>/app &amp;&amp;go build main.go</span><span class="token comment"># FROM 基于 alpine:latest</span><span class="token instruction"><span class="token keyword">FROM</span> alpine:latest</span><span class="token comment"># RUN 设置 Asia/Shanghai 时区</span><span class="token instruction"><span class="token keyword">RUN</span> apk --no-cache add tzdata  &amp;&amp; <span class="token operator">\</span>    ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; <span class="token operator">\</span>    echo <span class="token string">"Asia/Shanghai"</span> &gt; /etc/timezone</span><span class="token comment"># COPY 源路径 目标路径 从镜像中 COPY</span><span class="token instruction"><span class="token keyword">COPY</span> <span class="token options"><span class="token property">--from</span><span class="token punctuation">=</span><span class="token string">builder</span></span> /opt/repo/app/main /opt/ginctl</span><span class="token comment"># EXPOSE 设置端口映射</span><span class="token instruction"><span class="token keyword">EXPOSE</span> 9999/tcp</span><span class="token comment"># WORKDIR 设置工作目录</span><span class="token instruction"><span class="token keyword">WORKDIR</span> /opt</span><span class="token comment"># CMD 设置启动命令</span><span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"./ginctl"</span>, <span class="token string">"-env"</span>, <span class="token string">"fat"</span>]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Dockerfile-指令介绍"><a href="#Dockerfile-指令介绍" class="headerlink" title="Dockerfile 指令介绍"></a>Dockerfile 指令介绍</h2><h3 id="FROM"><a href="#FROM" class="headerlink" title="FROM"></a><strong><strong>FROM</strong></strong></h3><p>1、介绍</p><ul><li>FROM指令用于为镜像文件构建过程指定基础镜像，后续的指令运行于此基础镜像所提供的运行环境；</li><li>配合AS可以做成区分运行时镜像和构建时镜像</li></ul><p>2、示例： </p><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token constant">FROM</span> <span class="token literal-property property">golang</span><span class="token operator">:</span><span class="token number">1.20</span> <span class="token constant">AS</span> builder# <span class="token constant">COPY</span> 源路径 目标路径 从镜像中 <span class="token constant">COPY</span><span class="token constant">COPY</span> <span class="token operator">--</span>from<span class="token operator">=</span>builder <span class="token operator">/</span>opt<span class="token operator">/</span>repo<span class="token operator">/</span>app<span class="token operator">/</span>main <span class="token operator">/</span>opt<span class="token operator">/</span>ginctl<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="MAINTAINER"><a href="#MAINTAINER" class="headerlink" title="MAINTAINER"></a><strong><strong>MAINTAINER</strong></strong></h3><p>1、介绍</p><ul><li>用于让dockerfile制作者提供本人的详细信息</li></ul><p>2、示例</p><pre class="line-numbers language-docker" data-language="docker"><code class="language-docker"><span class="token instruction"><span class="token keyword">FROM</span> golang:1.20 <span class="token keyword">AS</span> builder</span><span class="token instruction"><span class="token keyword">MAINTAINER</span> <span class="token string">'xiejiayi &lt;looknicemm@126.com&gt;'</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="COPY"><a href="#COPY" class="headerlink" title="COPY"></a><strong><strong>COPY</strong></strong></h3><p>1、介绍</p><ul><li>用于从docker主机复制新文件或者目录至创建的新镜像指定路径中</li><li>目标路径，即正在创建的image的文件系统路径；建议使用绝对路径，否则，COPY指定以WORKDIR为其实路径</li></ul><p>2、示例</p><pre class="line-numbers language-docker" data-language="docker"><code class="language-docker"><span class="token comment"># FROM 基于 golang:1.20</span><span class="token instruction"><span class="token keyword">FROM</span> golang:1.20 <span class="token keyword">AS</span> builder</span><span class="token instruction"><span class="token keyword">MAINTAINER</span> <span class="token string">'xiejiayi &lt;looknicemm@126.com&gt;'</span></span><span class="token comment"># COPY 源路径 目标路径</span><span class="token instruction"><span class="token keyword">COPY</span> . <span class="token variable">$GOPATH</span>/app</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ENV"><a href="#ENV" class="headerlink" title="ENV"></a><strong><strong>ENV</strong></strong></h3><p>1、介绍</p><ul><li>用于为镜像定义所需的环境变量，并可被Dockerfile文件中位于其后的其它指令(如ENV、ADD、COPY等)所调用</li></ul><p>2、示例</p><pre class="line-numbers language-docker" data-language="docker"><code class="language-docker"><span class="token comment"># FROM 基于 golang:1.20</span><span class="token instruction"><span class="token keyword">FROM</span> golang:1.20 <span class="token keyword">AS</span> builder</span><span class="token instruction"><span class="token keyword">MAINTAINER</span> <span class="token string">'xiejiayi &lt;looknicemm@126.com&gt;'</span></span><span class="token comment"># ENV 设置环境变量</span><span class="token instruction"><span class="token keyword">ENV</span> GOPATH=/opt/repo</span><span class="token instruction"><span class="token keyword">ENV</span> GO111MODULE=on</span><span class="token instruction"><span class="token keyword">ENV</span> GOPROXY=https://goproxy.cn,https://gocenter.io,https://goproxy.io,direct</span><span class="token instruction"><span class="token keyword">ENV</span> CGO_ENABLED=0</span><span class="token instruction"><span class="token keyword">ENV</span> GOOS=linux</span><span class="token comment"># COPY 源路径 目标路径</span><span class="token instruction"><span class="token keyword">COPY</span> . <span class="token variable">$GOPATH</span>/app</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="WORKDIR"><a href="#WORKDIR" class="headerlink" title="WORKDIR"></a><strong><strong>WORKDIR</strong></strong></h3><p>1、介绍</p><ul><li>用于为Dockerfile中所有的RUN、CMD、ENTRYPOINT、COPY和ADD指定设定工作目录</li></ul><p>2、示例</p><pre class="line-numbers language-docker" data-language="docker"><code class="language-docker"><span class="token comment"># FROM 基于 golang:1.20</span><span class="token instruction"><span class="token keyword">FROM</span> golang:1.20 <span class="token keyword">AS</span> builder</span><span class="token instruction"><span class="token keyword">MAINTAINER</span> <span class="token string">'xiejiayi &lt;looknicemm@126.com&gt;'</span></span><span class="token comment"># ENV 设置环境变量</span><span class="token instruction"><span class="token keyword">ENV</span> GOPATH=/opt/repo</span><span class="token instruction"><span class="token keyword">ENV</span> GO111MODULE=on</span><span class="token instruction"><span class="token keyword">ENV</span> GOPROXY=https://goproxy.cn,https://gocenter.io,https://goproxy.io,direct</span><span class="token instruction"><span class="token keyword">ENV</span> CGO_ENABLED=0</span><span class="token instruction"><span class="token keyword">ENV</span> GOOS=linux</span><span class="token comment">#用于为Dockerfile中所有的RUN、CMD、ENTRYPOINT、COPY和ADD指定设定工作目录</span><span class="token instruction"><span class="token keyword">WORKDIR</span> <span class="token variable">$GOPATH</span>/app</span><span class="token comment"># COPY 源路径 目标路径</span><span class="token instruction"><span class="token keyword">COPY</span> . <span class="token variable">$GOPATH</span>/app</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="RUN"><a href="#RUN" class="headerlink" title="RUN"></a><strong><strong>RUN</strong></strong></h3><p>1、介绍</p><ul><li>用于指定docker build过程中运行的程序，其可以是任何命令</li></ul><p>2、示例</p><pre class="line-numbers language-docker" data-language="docker"><code class="language-docker"><span class="token comment"># FROM 基于 golang:1.20</span><span class="token instruction"><span class="token keyword">FROM</span> golang:1.20 <span class="token keyword">AS</span> builder</span><span class="token instruction"><span class="token keyword">MAINTAINER</span> <span class="token string">'xiejiayi &lt;looknicemm@126.com&gt;'</span></span><span class="token comment"># ENV 设置环境变量</span><span class="token instruction"><span class="token keyword">ENV</span> GOPATH=/opt/repo</span><span class="token instruction"><span class="token keyword">ENV</span> GO111MODULE=on</span><span class="token instruction"><span class="token keyword">ENV</span> GOPROXY=https://goproxy.cn,https://gocenter.io,https://goproxy.io,direct</span><span class="token instruction"><span class="token keyword">ENV</span> CGO_ENABLED=0</span><span class="token instruction"><span class="token keyword">ENV</span> GOOS=linux</span><span class="token comment">#用于为Dockerfile中所有的RUN、CMD、ENTRYPOINT、COPY和ADD指定设定工作目录</span><span class="token instruction"><span class="token keyword">WORKDIR</span> <span class="token variable">$GOPATH</span>/app</span><span class="token comment"># COPY 源路径 目标路径</span><span class="token instruction"><span class="token keyword">COPY</span> . <span class="token variable">$GOPATH</span>/app</span><span class="token comment"># RUN 执行 go build .</span><span class="token instruction"><span class="token keyword">RUN</span>  cd <span class="token variable">$GOPATH</span>/app &amp;&amp;go build main.go</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="EXPOSE"><a href="#EXPOSE" class="headerlink" title="EXPOSE"></a>EXPOSE</h3><p>1、介绍</p><ul><li>用于为容器打开指定要监听的端口以实现与外部通信</li></ul><p>2、 示例</p><pre class="line-numbers language-docker" data-language="docker"><code class="language-docker"><span class="token comment"># FROM 基于 alpine:latest</span><span class="token instruction"><span class="token keyword">FROM</span> alpine:latest</span><span class="token comment"># RUN 设置 Asia/Shanghai 时区</span><span class="token instruction"><span class="token keyword">RUN</span> apk --no-cache add tzdata  &amp;&amp; <span class="token operator">\</span>    ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; <span class="token operator">\</span>    echo <span class="token string">"Asia/Shanghai"</span> &gt; /etc/timezone</span><span class="token comment"># COPY 源路径 目标路径 从镜像中 COPY</span><span class="token instruction"><span class="token keyword">COPY</span> <span class="token options"><span class="token property">--from</span><span class="token punctuation">=</span><span class="token string">builder</span></span> /opt/repo/app/main /opt/ginctl</span><span class="token comment"># EXPOSE 设置端口映射</span><span class="token instruction"><span class="token keyword">EXPOSE</span> 9999/tcp</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a><strong><strong>CMD</strong></strong></h2><p>1、介绍</p><ul><li>类似于RUN指令，CMD指令也可用于运行任何命令或应用程序，不过，二者的运行时间点不同</li><li>CMD指令的首要目的在于为启动的容器指定默认要运行的程序，且其运行结束后，容器也将终止；不过，CMD指定的命令其可以被docker run的命令行选项所覆盖</li></ul><pre class="line-numbers language-docker" data-language="docker"><code class="language-docker"><span class="token comment"># CMD 设置启动命令</span><span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"./ginctl"</span>, <span class="token string">"-env"</span>, <span class="token string">"fat"</span>]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong><strong>ENTRYPOINT</strong></strong></p><p>1、</p><ul><li>类似CMD指令的功能，用于为容器指定默认运行程序，从而使容器像是一个单独的可执行程序</li><li>与CMD不同的是，由ENTRYPOINT启动的程序不会被docker run命令行指定的参数所覆盖，而且，这些命令行参数会被当作参数传递给ENTRYPOINT指定指定的程序</li><li>不过，docker run命令的–entrypoint选项的参数可覆盖ENTRYPOINT指令指定的程序</li></ul><pre class="line-numbers language-docker" data-language="docker"><code class="language-docker"><span class="token instruction"><span class="token keyword">ENTRYPOINT</span> /bin/httpd -f -h <span class="token variable">${WEB_DOC_ROOT}</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="HEALTHCHECK"><a href="#HEALTHCHECK" class="headerlink" title="HEALTHCHECK"></a><strong>HEALTHCHECK</strong></h2><p>1、介绍</p><ul><li>HEALTHCHECK指令告诉Docker如何测试容器以检查它是否仍在工作</li><li>即使服务器进程仍在运行，也可以检测出陷入无限循环且无法处理新连接的Web服务器等情况</li></ul><p>2、语法格式</p><p>HEALTHCHECK [OPTIONS] CMD command (通过在容器内运行命令来检查容器运行状况)</p><p>HEALTHCHECK NONE (禁用从基础映像继承的任何运行状况检查)</p><p>1）常见选项：</p><ul><li>-interval=DURATION (default: 30s)：每隔多长时间探测一次，默认30秒</li><li><ul><li>timeout= DURATION (default: 30s)：服务响应超时时长，默认30秒</li></ul></li><li>-start-period= DURATION (default: 0s)：服务启动多久后开始探测，默认0秒</li><li>-retries=N (default: 3)：认为检测失败几次为宕机，默认3次</li></ul><p>2）返回值</p><ul><li>0：容器成功是健康的，随时可以使用</li><li>1：不健康的容器无法正常工作</li><li>2：保留不使用此退出代码</li></ul><p>3、示例</p><p>1）编写dockerfile文件</p><p>检测web1容器的10080端口（其实打开的是80端口，10080并没有打开，所以会检测失败）</p><pre class="line-numbers language-docker" data-language="docker"><code class="language-docker"><span class="token instruction"><span class="token keyword">FROM</span> busybox:latest</span><span class="token instruction"><span class="token keyword">MAINTAINER</span> <span class="token string">'111'</span></span><span class="token instruction"><span class="token keyword">ENV</span> WEB_DOC_ROOT=<span class="token string">"/data/web/html"</span></span><span class="token instruction"><span class="token keyword">RUN</span> mkdir -p <span class="token variable">${WEB_DOC_ROOT}</span> &amp;&amp; <span class="token operator">\</span>echo <span class="token string">"&lt;h1&gt;Busybox httpd server&lt;/h1&gt;"</span> &gt; <span class="token variable">${WEB_DOC_ROOT}</span>/index.html</span><span class="token instruction"><span class="token keyword">CMD</span> /bin/httpd -f -h <span class="token variable">${WEB_DOC_ROOT}</span></span><span class="token instruction"><span class="token keyword">HEALTHCHECK</span> <span class="token options"><span class="token property">--start-period</span><span class="token punctuation">=</span><span class="token string">3s</span></span> <span class="token keyword">CMD</span> wget -O - -q [http://<span class="token variable">${IP:-0.0.0.0}</span>:10080/]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> devops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> devops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vlan、子网掩码、MAC地址、网关、DNS、三层交换机</title>
      <link href="/wang-luo/vlan-zi-wang-yan-ma-mac-di-zhi-wang-guan-dns-san-ceng-jiao-huan-ji.html"/>
      <url>/wang-luo/vlan-zi-wang-yan-ma-mac-di-zhi-wang-guan-dns-san-ceng-jiao-huan-ji.html</url>
      
        <content type="html"><![CDATA[<h2 id="01-什么是VLAN"><a href="#01-什么是VLAN" class="headerlink" title="01 什么是VLAN"></a>01 什么是VLAN</h2><blockquote><p>VLAN中文是“虚拟局域网”。LAN可以是由少数几台家用计算机构成的网络，也可以是数以百计的计算机构成的企业网络。VLAN所指的LAN特指使用路由器分割的网络——也就是广播域。</p><p>听上面的概念，肯定有不少朋友是一头雾水的，什么是虚拟局域网？好好的，为什么要划分vlan？</p></blockquote><p><strong>这里举个例：通俗的了解</strong></p><blockquote><p>一所高中，新学期高一招了800个学生，这800个学生，如果放在一个班里，那肯定是管理不过来，面对800个人，老师看了也头疼，这边在授课，那边完全听不到，老师布置什么任务，也会有一些传达不到，老师要是想找某个学生的信息，要从800份信息中去找，极其麻烦，浪费时间；</p><p>而实际中，也是一样，电脑A要想要与电脑B通信，于是电脑A就需要发送arp请求，而网络中电脑众多，最终ARP请求会被转发到同一网络中的所有电脑，才能找到电脑B，如此一来，为了找到电脑B，消耗了网络整体的带宽，收到广播信息的计算机还要消耗一部分CPU时间来对它进行处理。造成了网络带宽和CPU运算能力的大量无谓消耗</p></blockquote><p><strong>那么怎么办呢？</strong></p><blockquote><p>学校就针对这800个学生，分成了10个班，每个班80人，分别命名为高一（1）班，高一（2）班、、、、高一（10）班，每个人都会获得一个班级编号。</p><p>1101表示一班01号学生。</p><p>1102表示一班02号学生。</p><p>1201表示2班01号学生。</p><p>同一个班的学生编号尾数不同，其它的都相同。</p><p>那么这样老师再管理起来就轻松多了，可以把一班这80人管理的妥妥的，隔壁2班与3班乱成一锅粥也不管一班的事，我就要这一班80人好好上课就行。</p><p>这就是vlan，每个班就相当于一个vlan，而每个班名称，就相当于vlan的名称，而每个学生的编号就是ip地址；同班同学（同一个vlan的ip），因为同一个教室，朝夕相处，且可以相互通信，不同班的同学，若不做其它工作，很难往来通信。</p><p>所以同一个vlan间，可以相互通信；不同vlan，若不做配置，不能相互通信。</p><p>那么不同vlan如何通通信呢？就需要单臂路由与三层交换机。</p></blockquote><h2 id="02-单臂路由与三层交换机"><a href="#02-单臂路由与三层交换机" class="headerlink" title="02 单臂路由与三层交换机"></a>02 单臂路由与三层交换机</h2><blockquote><p>我们知道要实现不同vlan间通信，就必须需要有路由功能，不同VLAN之间相互通信的两种方式（单臂路由、三层交换机）。</p></blockquote><p><strong>什么是单臂路由？</strong></p><p>单臂路由的实现方式，其实就是普通二层交换机加路由器，从而实现不同vlan间的可以互相通信。</p><img src="/wang-luo/vlan-zi-wang-yan-ma-mac-di-zhi-wang-guan-dns-san-ceng-jiao-huan-ji/640.jpeg" class="" title="图片"><p><strong>那什么是三层交换机呢？</strong></p><blockquote><p>对于小型的网络，单臂路由可以应付，但随着VLAN之间流量的不断增加，很可能导致路由器成为整个网络的瓶颈，出现掉包、或者通信堵塞。</p><p>为了解决上述问题，三层交换机应运而生。三层交换机，本质上就是“带有路由功能的（二层）交换机”。路由属于OSI参照模型中第三层网络层的功能，因此带有第三层路由功能的交换机才被称为“三层交换机”。</p><p>关于三层交换机的内部结构，可以参照下面的简图</p></blockquote><img src="/wang-luo/vlan-zi-wang-yan-ma-mac-di-zhi-wang-guan-dns-san-ceng-jiao-huan-ji/640-16748944419483.png" class="" title="图片"><blockquote><p>在一台本体内，分别设置了交换机模块和路由器模块；而内置的路由模块与交换模块相同，使用ASIC硬件处理路由。因此，与传统的路由器相比，可以实现高速路由。并且，路由与交换模块是汇聚链接的，由于是内部连接，可以确保相当大的带宽，所以对于正规的项目，需要使用三层交换机来实现网网络间的通信。</p></blockquote><h2 id="03-网关与默认网关"><a href="#03-网关与默认网关" class="headerlink" title="03 网关与默认网关"></a>03 网关与默认网关</h2><blockquote><p>在了解了vlan与三层交换机后，能不能通信，还需要看网关是否正确。</p></blockquote><h3 id="一、什么是网关"><a href="#一、什么是网关" class="headerlink" title="一、什么是网关"></a><strong>一、什么是网关</strong></h3><blockquote><p>网关(Gateway)又称网间连接器、协议转换器。网关在传输层上以实现网络互连，是最复杂的网络互连设备，仅用于两个高层协议不同的网络互连。</p></blockquote><h3 id="二、如何来理解网关"><a href="#二、如何来理解网关" class="headerlink" title="二、如何来理解网关"></a><strong>二、如何来理解网关</strong></h3><blockquote><p>大家都知道，从一个房间走到另一个房间，必然要经过<strong>一扇门</strong>。同样，从一个网络向另一个网络发送信息，也必须经过一道“关口”，这道关口就是网关。顾名思义，网关(Gateway)就是一个网络连接到另一个网络的“<strong>关口</strong>”。</p><p>按照不同的分类标准，网关也有很多种。TCP/IP协议里的网关是最常用的，在这里我们所讲的“网关”均指TCP/IP协议下的网关。</p></blockquote><h3 id="三、网关的ip地址"><a href="#三、网关的ip地址" class="headerlink" title="三、网关的ip地址"></a><strong>三、网关的ip地址</strong></h3><p><strong>那么网关到底是什么呢？</strong></p><p>网关实质上是一个网络通向其他网络的IP地址，网关在网段内的可用<strong>ip中选一个</strong>，不过，一般用的是<strong>第1个和最后一个</strong>。</p><blockquote><p><strong>例如</strong></p><p>比如有网络A和网络B，</p><p><strong>网络A：</strong>的IP地址范围为“192.168.1.1~192. 168.1.254”，子网掩255.255.255.0；</p><p>如果需要与其它网段通信，那么它的网关可以设置为192.168.1.1，当然也可以设置为<strong>网段内</strong>其它的一个ip地址。</p><p><strong>网络B：</strong>的IP地址范为“192.168.2.1~192.168.2.254”，子网掩码255.255.255.0。</p><p>如果需要与其它网段通信，那么它的网关可以设置为192.168.2.1，当然也可以设置为<strong>网段内</strong>其它的一个ip地址。</p></blockquote><img src="/wang-luo/vlan-zi-wang-yan-ma-mac-di-zhi-wang-guan-dns-san-ceng-jiao-huan-ji/640-16748945544036.jpeg" class="" title="图片"><h3 id="四、网关是如何实现通信？"><a href="#四、网关是如何实现通信？" class="headerlink" title="四、网关是如何实现通信？"></a><strong>四、网关是如何实现通信？</strong></h3><blockquote><p>在没有<strong>路由器</strong>的情况下，不同的两个网络之间是<strong>不能</strong>进行TCP/IP通信的，即使是两个网络连接在同一台交换机(或集线器)上，TCP/IP协议也会根据子网掩码(255.255.255.0)判定两个网络中的主机处在不同的网络里。而要实现这两个网络之间的通信，则<strong>必须通过网关</strong>。</p><p>如果<strong>网络A</strong>中的主机发现<strong>数据包</strong>的目的主机<strong>不在</strong>本地网络中，就把数据包转发给它<strong>自己的网关</strong>，再由网关转发给网络B的网关，网络B的网关再转发给网络B的某个主机(如附图所示)。网络B向网络A转发数据包的过程。</p><p>所以说，只有设置好网关的<strong>IP地址</strong>，TCP/IP协议才能实现不同网络之间的相互通信。</p></blockquote><h3 id="五、什么是默认网关？"><a href="#五、什么是默认网关？" class="headerlink" title="五、什么是默认网关？"></a><strong>五、什么是默认网关？</strong></h3><blockquote><p>如果搞清了什么是网关，默认网关也就好理解了。就好像一个房间可以有多扇门一样，一台主机可以有多个网关。<strong>默认网关</strong>的意思是一台主机如果找不到可用的网关，就把数据包发给默认<strong>指定的网关</strong>，由这个网关来处理数据包。现在<strong>主机</strong>使用的网关，一般指的是默认网关。</p></blockquote><h2 id="04-什么是DNS"><a href="#04-什么是DNS" class="headerlink" title="04 什么是DNS"></a>04 什么是DNS</h2><blockquote><p>DNS是域名解析服务器（Domain Name System），是把网址变成IP地址的服务器。</p><p>DNS说白了是把域名翻译成IP地址用的，这里面<strong>举个例子</strong>，大家就很容易清楚了。</p><p>例如我们在浏览器里面输入 <a href="http://www.baidu.com/">www.baidu.com</a> 的时候，机器要跟百度这个网站进行<strong>通信</strong>，机器要往外面<strong>发送</strong>数据包，数据包里面要写百度这台服务器的<strong>IP地址</strong>，我们不知道IP地址是多少，那么就需要主机<strong>问DNS服务器</strong>，DNS服务器就自动帮我们把 <a href="http://www.baidu.com/">www.baidu.com</a> 这个域名<strong>翻译成</strong>了IP地址61.135.169.105。然后写到了数据包的目的IP地址里面就可以进行通信。</p><p>就跟我们写信一样，你得写个收信人的<strong>地址</strong>邮局才能给你发送吧，你给国外写信，你写中文地址邮局不认识，需要这个一个人帮你翻译成英语。这就是DNS的作用，所以你的在本地连接里面写DNS才可以正常浏览网页，如果不设置DNS，是无法正常访问网页的。</p></blockquote><h2 id="05-MAC地址与IP"><a href="#05-MAC地址与IP" class="headerlink" title="05 MAC地址与IP"></a>05 MAC地址与IP</h2><blockquote><p>讲到MAC地址，就不得不提ip地址，这里顺便把ip地址也说下。</p><p><strong>IP与MAC</strong></p><p>虽然现在已经ipv6了，但我们基本用的大多数还是ipv4协议，所谓ip就是你电脑整个<strong>网络的编号</strong>。其他电脑想访问电脑就得需要这个编号。但是这个编号很多情况下是一直在<strong>变化</strong>的。唯一不变的是你的MAC地址：<strong>物理地址</strong>。</p><p>MAC是网络中用来标识网卡设备的唯一网络地址。由相关硬件制造商统一分配，每台电脑的MAC地址都是<strong>唯一</strong>的。</p><p>做个比喻，你经常搬家，你没搬一次家都有一个地址，XX小区XX单元XX号，这个就是IP。但是你的名字不变，这个就是MAC，不同的是我们的<strong>MAC不允许重名。</strong></p></blockquote><img src="/wang-luo/vlan-zi-wang-yan-ma-mac-di-zhi-wang-guan-dns-san-ceng-jiao-huan-ji/640-16748946212809.jpeg" class="" title="图片"><blockquote><p><strong>我们的IP分为两个部分：</strong>如上图分为<strong>网络部分</strong>和<strong>主机部分</strong>。网络部分好比就是你在XX省XX市XX镇，这个是国家固定下来了的。但是XX小区XX单元XX号是开发商自己定的。两个编号<strong>加起来</strong>就是你的ip了。不同的是在现实中两个编号的长度是固定的，在网络上A、B、C、D的ip地址却是变化的，这个在前天有详细讲到。</p></blockquote><h2 id="06-子网掩码"><a href="#06-子网掩码" class="headerlink" title="06 子网掩码"></a>06 子网掩码</h2><blockquote><p>子网掩码是为了区分网络位和主机位，上面我们说到过，一个ip地址是由<strong>网络部分</strong>和<strong>主机部分。</strong>正如一个人的名字由姓与名组成。</p><p>那么我们可以把IP地址比作一个人的名字，那么子网掩码就像是一份名单，可以快速的知道那些人同姓，那些人不同姓，把同姓的人分在一组，让他们之前可以互相交流。</p></blockquote><blockquote><p><strong>举个例子</strong></p><p><strong>有一个网段</strong>是192.168.1.0-192.1.254，这个网段就像一个村子一样，就称它为<strong>安防村</strong>，此这网段有个ip地址是192.168.1.1，我们就叫他安防一，另外一个人叫安防二，它的ip地址为192.168.1.2，我们一看他们，就知道他们是同村的。</p><p><strong>另外有一个网段，</strong>是192.168.0.0——192.168.255.254，我们叫它<strong>安村</strong>，村里有个同样有两个ip地址为92.168.1.1与192.168.1.2，也叫安防一，安防二，那么问题来了？这个时候，如何区分他们是属于那个村的？</p><p>这个时候就需要<strong>子网掩码</strong>了来判断他们是属于那个网段的，需要把安防一、安防二带到村里去认下，就知道他们是属于那个村了，<strong>安防村</strong>的网段是255.255.255.0，<strong>安村</strong>的网段是255.255.0.0。</p><p>网络中也会出现类似于“同名”“同姓”的ip地址，如何区分他们到底是属于那个网段，就需要依靠子网掩码了。</p></blockquote><ul><li>参考链接（<a href="javascript:void(0);">智能制造之家</a>）： <a href="https://mp.weixin.qq.com/s?__biz=MzIwMjMxODAzNA==&amp;mid=2247485460&amp;idx=1&amp;sn=03053f38fcf0ed609314f3674e8f069d&amp;chksm=96e1c1a9a19648bfbbec63293a5d965125bf54bfeb0dc9c215de0451138b7136edcc67e4e093&amp;scene=21#wechat_redirect">https://mp.weixin.qq.com/s?__biz=MzIwMjMxODAzNA==&amp;mid=2247485460&amp;idx=1&amp;sn=03053f38fcf0ed609314f3674e8f069d&amp;chksm=96e1c1a9a19648bfbbec63293a5d965125bf54bfeb0dc9c215de0451138b7136edcc67e4e093&amp;scene=21#wechat_redirect</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> network </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go-zero 框架的使用</title>
      <link href="/go/go-zeor.html"/>
      <url>/go/go-zeor.html</url>
      
        <content type="html"><![CDATA[<p>g</p>]]></content>
      
      
      <categories>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1. Go &amp; grpc的使用</title>
      <link href="/grpc/1.gogrpc.html"/>
      <url>/grpc/1.gogrpc.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>欢迎进入 gRPC 的开发文档，gRPC 一开始由 google 开发，是一款语言中立、平台中立、开源的远程过程调用(RPC)系统。</p></blockquote><h2 id="gRPC-是什么？"><a href="#gRPC-是什么？" class="headerlink" title="gRPC 是什么？"></a>gRPC 是什么？</h2><blockquote><p>在 gRPC 里_客户端_应用可以像调用本地对象一样直接调用另一台不同的机器上_服务端_应用的方法，使得您能够更容易地创建分布式应用和服务。与许多 RPC 系统类似，gRPC 也是基于以下理念：定义一个_服务_，指定其能够被远程调用的方法（包含参数和返回类型）。在服务端实现这个接口，并运行一个 gRPC 服务器来处理客户端调用。在客户端拥有一个_存根_能够像服务端一样的方法。</p></blockquote><img src="/grpc/1.gogrpc/image-20230106224441764.png" class="" title="image-20230106224441764"><blockquote><p>gRPC 客户端和服务端可以在多种环境中运行和交互 - 从 google 内部的服务器到你自己的笔记本，并且可以用任何 gRPC <a href="https://doc.oschina.net/grpc?t=58008#quickstart">支持的语言</a>来编写。所以，你可以很容易地用 Java 创建一个 gRPC 服务端，用 Go、Python、Ruby 来创建客户端。此外，Google 最新 API 将有 gRPC 版本的接口，使你很容易地将 Google 的功能集成到你的应用里。</p></blockquote><h3 id="protocol-buffers"><a href="#protocol-buffers" class="headerlink" title="protocol buffers"></a>protocol buffers</h3><blockquote><p>gRPC 默认使用 _protocol buffers_，这是 Google 开源的一套成熟的结构数据序列化机制（当然也可以使用其他数据格式如 JSON）。正如你将在下方例子里所看到的，你用 <em>proto files</em> 创建 gRPC 服务，用 protocol buffers 消息类型来定义方法参数和返回类型。你可以在 <a href="https://doc.oschina.net/https%EF%BC%9A//developers.google.com/protocol-buffers/docs/overview">Protocol Buffers 文档</a>找到更多关于 Protocol Buffers 的资料。</p><h4 id="Protocol-buffers-版本"><a href="#Protocol-buffers-版本" class="headerlink" title="Protocol buffers 版本"></a>Protocol buffers 版本</h4><p>尽管 protocol buffers 对于开源用户来说已经存在了一段时间，例子内使用的却一种名叫 proto3 的新风格的 protocol buffers，它拥有轻量简化的语法、一些有用的新功能，并且支持更多新语言。当前针对 Java 和 C++ 发布了 beta 版本，针对 JavaNano（即 Android Java）发布 alpha 版本，在<a href="https://doc.oschina.net/https%EF%BC%9A//github.com/google/protobuf/releases">protocol buffers Github 源码库里</a>有 Ruby 支持， 在<a href="https://doc.oschina.net/https%EF%BC%9A//github.com/golang/protobuf">golang/protobuf Github 源码库</a>里还有针对 Go 语言的生成器， 对更多语言的支持正在开发中。 你可以在 <a href="https://doc.oschina.net/https%EF%BC%9A//developers.google.com/protocol-buffers/docs/proto3">proto3 语言指南</a>里找到更多内容， 在与当前默认版本的<a href="https://doc.oschina.net/https%EF%BC%9A//github.com/google/protobuf/releases">发布说明</a>比较，看到两者的主要不同点。更多关于 proto3 的文档很快就会出现。虽然你_可以_使用 proto2 (当前默认的 protocol buffers 版本)， 我们通常建议你在 gRPC 里使用 proto3，因为这样你可以使用 gRPC 支持全部范围的的语言，并且能避免 proto2 客户端与 proto3 服务端交互时出现的兼容性问题，反之亦然。<br><a href="https://blog.csdn.net/qq_42641261/article/details/111226035">Protocol Buffer 官网文档整理</a></p></blockquote><h2 id="gRPC-使用"><a href="#gRPC-使用" class="headerlink" title="gRPC 使用"></a>gRPC 使用</h2><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><h4 id="1-protoc安装"><a href="#1-protoc安装" class="headerlink" title="1. protoc安装"></a>1. protoc安装</h4><blockquote><p>git下载地址：<a href="https://github.com/protocolbuffers/protobuf/releases">https://github.com/protocolbuffers/protobuf/releases</a></p><img src="/grpc/1.gogrpc/1672996045896-d1e3d57d-1b1a-4c0c-8777-c46214158916.png" class="" title="image.png"><p>安装完成后，使用protoc –version </p><img src="/grpc/1.gogrpc/1672996101315-9cbe838d-19e7-4433-8e3f-de63764c3369.png" class="" title="image.png"></blockquote><h4 id="2-Go插件"><a href="#2-Go插件" class="headerlink" title="2.Go插件"></a>2.Go插件</h4><blockquote><p>go install google.golang.org/protobuf/cmd/<a href="mailto:protoc-gen-go@v1.26">protoc-gen-go@v1.26</a><br>go install google.golang.org/grpc/cmd/<a href="mailto:protoc-gen-go-grpc@v1.1">protoc-gen-go-grpc@v1.1</a></p><p>go get google.golang.org/grpc</p></blockquote><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1. 准备工作"></a>1. 准备工作</h4><h5 id="编写proto文件"><a href="#编写proto文件" class="headerlink" title="编写proto文件"></a>编写proto文件</h5><pre class="line-numbers language-protobuf" data-language="protobuf"><code class="language-protobuf"><span class="token keyword">syntax</span> <span class="token operator">=</span> <span class="token string">"proto3"</span><span class="token punctuation">;</span><span class="token comment">// 服务端流模式</span><span class="token keyword">option</span> go_package <span class="token operator">=</span> <span class="token string">"./;streamprotodemo"</span><span class="token punctuation">;</span><span class="token keyword">service</span> <span class="token class-name">Greeter</span> <span class="token punctuation">{</span>  <span class="token keyword">rpc</span> <span class="token function">Single</span><span class="token punctuation">(</span><span class="token class-name">StreamReqData</span><span class="token punctuation">)</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token class-name">StreamResData</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//单向调用</span>  <span class="token keyword">rpc</span> <span class="token function">GetStream</span><span class="token punctuation">(</span><span class="token class-name">StreamReqData</span><span class="token punctuation">)</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token keyword">stream</span> <span class="token class-name">StreamResData</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 服务端流模式</span>  <span class="token keyword">rpc</span> <span class="token function">PutStream</span><span class="token punctuation">(</span><span class="token keyword">stream</span> <span class="token class-name">StreamReqData</span><span class="token punctuation">)</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token class-name">StreamResData</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 客户端流模式</span>  <span class="token keyword">rpc</span> <span class="token function">AllStream</span><span class="token punctuation">(</span><span class="token keyword">stream</span> <span class="token class-name">StreamReqData</span><span class="token punctuation">)</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token keyword">stream</span> <span class="token class-name">StreamResData</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 双向流模式</span><span class="token punctuation">}</span><span class="token keyword">message</span> <span class="token class-name">StreamReqData</span> <span class="token punctuation">{</span>  <span class="token builtin">string</span>  data <span class="token operator">=</span><span class="token number">1</span> <span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">message</span> <span class="token class-name">StreamResData</span> <span class="token punctuation">{</span>  <span class="token builtin">string</span> data <span class="token operator">=</span><span class="token number">1</span> <span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="生成grpc-go文件"><a href="#生成grpc-go文件" class="headerlink" title="生成grpc-go文件"></a>生成grpc-go文件</h5><blockquote><p> protoc -I . –go_out=. stream.proto –go-grpc_out=. stream.proto</p></blockquote><h4 id=""><a href="#" class="headerlink" title=""></a></h4><h4 id="2-单向调用"><a href="#2-单向调用" class="headerlink" title="2. 单向调用"></a>2. 单向调用</h4><h5 id="服务端代码："><a href="#服务端代码：" class="headerlink" title="服务端代码："></a>服务端代码：</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"context"</span><span class="token string">"fmt"</span><span class="token string">"log"</span><span class="token string">"net"</span><span class="token string">"google.golang.org/grpc"</span>pb <span class="token string">"grpc-study/demo2/proto"</span><span class="token punctuation">)</span><span class="token keyword">type</span> server <span class="token keyword">struct</span> <span class="token punctuation">{</span>pb<span class="token punctuation">.</span>UnimplementedGreeterServer<span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>server<span class="token punctuation">)</span> <span class="token function">Single</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> req <span class="token operator">*</span>pb<span class="token punctuation">.</span>StreamReqData<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>pb<span class="token punctuation">.</span>StreamResData<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"server Single 被调用"</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token operator">&amp;</span>pb<span class="token punctuation">.</span>StreamResData<span class="token punctuation">{</span>Data<span class="token punctuation">:</span> req<span class="token punctuation">.</span>Data <span class="token operator">+</span> <span class="token string">"from server"</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>listen<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Listen</span><span class="token punctuation">(</span><span class="token string">"tcp"</span><span class="token punctuation">,</span> <span class="token string">":9090"</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">}</span>s <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">NewServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pb<span class="token punctuation">.</span><span class="token function">RegisterGreeterServer</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token operator">&amp;</span>server<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">// 4、创建监听</span>err <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">Serve</span><span class="token punctuation">(</span>listen<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="客户端代码"><a href="#客户端代码" class="headerlink" title="客户端代码"></a>客户端代码</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"context"</span><span class="token string">"fmt"</span><span class="token string">"log"</span><span class="token string">"google.golang.org/grpc"</span><span class="token string">"google.golang.org/grpc/credentials/insecure"</span>pb <span class="token string">"grpc-study/demo2/proto"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// 1、创建一个链接</span>conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span><span class="token string">"localhost:9090"</span><span class="token punctuation">,</span> grpc<span class="token punctuation">.</span><span class="token function">WithTransportCredentials</span><span class="token punctuation">(</span>insecure<span class="token punctuation">.</span><span class="token function">NewCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">defer</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 2、创建一个客户端</span>client <span class="token operator">:=</span> pb<span class="token punctuation">.</span><span class="token function">NewGreeterClient</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span>StreamReqData <span class="token operator">:=</span> <span class="token operator">&amp;</span>pb<span class="token punctuation">.</span>StreamReqData<span class="token punctuation">{</span><span class="token punctuation">}</span>StreamReqData<span class="token punctuation">.</span>Data <span class="token operator">=</span> <span class="token string">"client single func "</span>res<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">Single</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> StreamReqData<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span><span class="token string">"single call fail "</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">}</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Single call res :"</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/grpc/1.gogrpc/image%20(6).png" class="" title="image (6)"><h4 id="3-客户端流模式"><a href="#3-客户端流模式" class="headerlink" title="3. 客户端流模式"></a>3. 客户端流模式</h4><h5 id="服务端代码：-1"><a href="#服务端代码：-1" class="headerlink" title="服务端代码："></a>服务端代码：</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"fmt"</span><span class="token string">"log"</span><span class="token string">"net"</span><span class="token string">"google.golang.org/grpc"</span>pb <span class="token string">"grpc-study/demo2/proto"</span><span class="token punctuation">)</span><span class="token keyword">type</span> server <span class="token keyword">struct</span> <span class="token punctuation">{</span>pb<span class="token punctuation">.</span>UnimplementedGreeterServer<span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>server<span class="token punctuation">)</span> <span class="token function">PutStream</span><span class="token punctuation">(</span>clientdata pb<span class="token punctuation">.</span>Greeter_PutStreamServer<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"server PutStream 被调用"</span><span class="token punctuation">)</span><span class="token keyword">for</span> <span class="token punctuation">{</span>a<span class="token punctuation">,</span> err <span class="token operator">:=</span> clientdata<span class="token punctuation">.</span><span class="token function">Recv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">}</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>listen<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Listen</span><span class="token punctuation">(</span><span class="token string">"tcp"</span><span class="token punctuation">,</span> <span class="token string">":9090"</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">}</span>s <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">NewServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pb<span class="token punctuation">.</span><span class="token function">RegisterGreeterServer</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token operator">&amp;</span>server<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">// 4、创建监听</span>err <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">Serve</span><span class="token punctuation">(</span>listen<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="客户端代码-1"><a href="#客户端代码-1" class="headerlink" title="客户端代码"></a>客户端代码</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"context"</span><span class="token string">"fmt"</span><span class="token string">"log"</span><span class="token string">"google.golang.org/grpc"</span><span class="token string">"google.golang.org/grpc/credentials/insecure"</span>pb <span class="token string">"grpc-study/demo2/proto"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// 1、创建一个链接</span>conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span><span class="token string">"localhost:9090"</span><span class="token punctuation">,</span> grpc<span class="token punctuation">.</span><span class="token function">WithTransportCredentials</span><span class="token punctuation">(</span>insecure<span class="token punctuation">.</span><span class="token function">NewCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">defer</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 2、创建一个客户端</span>client <span class="token operator">:=</span> pb<span class="token punctuation">.</span><span class="token function">NewGreeterClient</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span>StreamReqData <span class="token operator">:=</span> <span class="token operator">&amp;</span>pb<span class="token punctuation">.</span>StreamReqData<span class="token punctuation">{</span><span class="token punctuation">}</span>putres<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">PutStream</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>StreamReqData<span class="token punctuation">.</span>Data <span class="token operator">=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"NO：%d, 客户端流模式"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"向服务端发送"</span><span class="token punctuation">,</span> StreamReqData<span class="token punctuation">.</span>Data<span class="token punctuation">)</span>err <span class="token operator">:=</span> putres<span class="token punctuation">.</span><span class="token function">Send</span><span class="token punctuation">(</span>StreamReqData<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span><span class="token string">"向服务端发送数据失败"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/grpc/1.gogrpc/1672997703690-b9fab1c9-62af-4282-bed9-2a5bf489e6c6.png" class="" title="image.png"><h4 id="4-服务端流模式"><a href="#4-服务端流模式" class="headerlink" title="4. 服务端流模式"></a>4. 服务端流模式</h4><h5 id="服务端代码：-2"><a href="#服务端代码：-2" class="headerlink" title="服务端代码："></a>服务端代码：</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"fmt"</span><span class="token string">"log"</span><span class="token string">"net"</span><span class="token string">"time"</span><span class="token string">"google.golang.org/grpc"</span>pb <span class="token string">"grpc-study/demo2/proto"</span><span class="token punctuation">)</span><span class="token keyword">type</span> server <span class="token keyword">struct</span> <span class="token punctuation">{</span>pb<span class="token punctuation">.</span>UnimplementedGreeterServer<span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>server<span class="token punctuation">)</span> <span class="token function">GetStream</span><span class="token punctuation">(</span>req <span class="token operator">*</span>pb<span class="token punctuation">.</span>StreamReqData<span class="token punctuation">,</span> res pb<span class="token punctuation">.</span>Greeter_GetStreamServer<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"server GetStream 被调用"</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>err <span class="token operator">:=</span> res<span class="token punctuation">.</span><span class="token function">Send</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>pb<span class="token punctuation">.</span>StreamResData<span class="token punctuation">{</span>Data<span class="token punctuation">:</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"%v"</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Unix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span><span class="token string">"send err"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">}</span>time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>listen<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Listen</span><span class="token punctuation">(</span><span class="token string">"tcp"</span><span class="token punctuation">,</span> <span class="token string">":9090"</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">}</span>s <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">NewServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pb<span class="token punctuation">.</span><span class="token function">RegisterGreeterServer</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token operator">&amp;</span>server<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">// 4、创建监听</span>err <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">Serve</span><span class="token punctuation">(</span>listen<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="客户端代码-2"><a href="#客户端代码-2" class="headerlink" title="客户端代码"></a>客户端代码</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"context"</span><span class="token string">"fmt"</span><span class="token string">"io"</span><span class="token string">"log"</span><span class="token string">"google.golang.org/grpc"</span><span class="token string">"google.golang.org/grpc/credentials/insecure"</span>pb <span class="token string">"grpc-study/demo2/proto"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// 1、创建一个链接</span>conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span><span class="token string">"localhost:9090"</span><span class="token punctuation">,</span> grpc<span class="token punctuation">.</span><span class="token function">WithTransportCredentials</span><span class="token punctuation">(</span>insecure<span class="token punctuation">.</span><span class="token function">NewCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">defer</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 2、创建一个客户端</span>client <span class="token operator">:=</span> pb<span class="token punctuation">.</span><span class="token function">NewGreeterClient</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span>StreamReqData <span class="token operator">:=</span> <span class="token operator">&amp;</span>pb<span class="token punctuation">.</span>StreamReqData<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment">//服务端流模式</span>res<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">GetStream</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">TODO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> StreamReqData<span class="token punctuation">)</span><span class="token keyword">for</span> <span class="token punctuation">{</span>data<span class="token punctuation">,</span> err <span class="token operator">:=</span> res<span class="token punctuation">.</span><span class="token function">Recv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span><span class="token keyword">if</span> err <span class="token operator">==</span> io<span class="token punctuation">.</span>EOF <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"服务端传输结束"</span><span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">}</span>log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">}</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/grpc/1.gogrpc/1672997907192-3fe6504a-ed59-428d-94da-f3da58026c8c.png" class="" title="image.png"><h4 id="4-双向流模式"><a href="#4-双向流模式" class="headerlink" title="4. 双向流模式"></a>4. 双向流模式</h4><h5 id="服务端代码：-3"><a href="#服务端代码：-3" class="headerlink" title="服务端代码："></a>服务端代码：</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"fmt"</span><span class="token string">"log"</span><span class="token string">"net"</span><span class="token string">"sync"</span><span class="token string">"time"</span><span class="token string">"google.golang.org/grpc"</span>pb <span class="token string">"grpc-study/demo2/proto"</span><span class="token punctuation">)</span><span class="token keyword">type</span> server <span class="token keyword">struct</span> <span class="token punctuation">{</span>pb<span class="token punctuation">.</span>UnimplementedGreeterServer<span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>server<span class="token punctuation">)</span> <span class="token function">AllStream</span><span class="token punctuation">(</span>alldata pb<span class="token punctuation">.</span>Greeter_AllStreamServer<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"server AllStream 被调用"</span><span class="token punctuation">)</span>wg <span class="token operator">:=</span> sync<span class="token punctuation">.</span>WaitGroup<span class="token punctuation">{</span><span class="token punctuation">}</span>wg<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">defer</span> wg<span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">defer</span> wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>data<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> alldata<span class="token punctuation">.</span><span class="token function">Recv</span><span class="token punctuation">(</span><span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"AllStream收到客户端消息"</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">defer</span> wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span><span class="token boolean">_</span> <span class="token operator">=</span> alldata<span class="token punctuation">.</span><span class="token function">Send</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>pb<span class="token punctuation">.</span>StreamResData<span class="token punctuation">{</span>Data<span class="token punctuation">:</span> <span class="token string">"我是服务器"</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>listen<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Listen</span><span class="token punctuation">(</span><span class="token string">"tcp"</span><span class="token punctuation">,</span> <span class="token string">":9090"</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">}</span>s <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">NewServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>pb<span class="token punctuation">.</span><span class="token function">RegisterGreeterServer</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token operator">&amp;</span>server<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">// 4、创建监听</span>err <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">Serve</span><span class="token punctuation">(</span>listen<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="客户端代码-3"><a href="#客户端代码-3" class="headerlink" title="客户端代码"></a>客户端代码</h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"context"</span><span class="token string">"fmt"</span><span class="token string">"sync"</span><span class="token string">"time"</span><span class="token string">"google.golang.org/grpc"</span><span class="token string">"google.golang.org/grpc/credentials/insecure"</span>pb <span class="token string">"grpc-study/demo2/proto"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">AllStream</span><span class="token punctuation">(</span>client pb<span class="token punctuation">.</span>GreeterClient<span class="token punctuation">,</span> StreamReqData <span class="token operator">*</span>pb<span class="token punctuation">.</span>StreamReqData<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//双向流模式</span>allstream<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">AllStream</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>wg <span class="token operator">:=</span> sync<span class="token punctuation">.</span>WaitGroup<span class="token punctuation">{</span><span class="token punctuation">}</span>wg<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">defer</span> wg<span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">defer</span> wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>StreamResData<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> allstream<span class="token punctuation">.</span><span class="token function">Recv</span><span class="token punctuation">(</span><span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"AllStream收到服务端消息"</span><span class="token punctuation">,</span> StreamResData<span class="token punctuation">.</span>Data<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">defer</span> wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>StreamReqData<span class="token punctuation">.</span>Data <span class="token operator">=</span> <span class="token string">"AllStream：我是客户端"</span><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span><span class="token boolean">_</span> <span class="token operator">=</span> allstream<span class="token punctuation">.</span><span class="token function">Send</span><span class="token punctuation">(</span>StreamReqData<span class="token punctuation">)</span>time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>wg<span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// 1、创建一个链接</span>conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span><span class="token string">"localhost:9090"</span><span class="token punctuation">,</span> grpc<span class="token punctuation">.</span><span class="token function">WithTransportCredentials</span><span class="token punctuation">(</span>insecure<span class="token punctuation">.</span><span class="token function">NewCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">defer</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 2、创建一个客户端</span>client <span class="token operator">:=</span> pb<span class="token punctuation">.</span><span class="token function">NewGreeterClient</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span>StreamReqData <span class="token operator">:=</span> <span class="token operator">&amp;</span>pb<span class="token punctuation">.</span>StreamReqData<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token function">AllStream</span><span class="token punctuation">(</span>client<span class="token punctuation">,</span> StreamReqData<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/grpc/1.gogrpc/1672998135689-3142398e-1463-4830-a8af-edfca29db4ee.png" class="" title="image.png"><h4 id="5-grpc中的metadata"><a href="#5-grpc中的metadata" class="headerlink" title="5.grpc中的metadata"></a>5.grpc中的metadata</h4><blockquote><p>gRPC让我们可以像本地调用一样实现远程调用，对于每一次的RPC调用中，都可能会有一些有用的数据，而这些数据就可以通过metadata来传递。metadata是以key-value的形式存储数据的，其中key是string类型，而value是[]string，即一个字符串数组类型。metadata使得client和server能够为对方提供关于本次调用的一些信息，就像一次http请求的RequestHeader和ResponseHeader一样。http中header的生命周周期是一次http请求，那么metadata的生命周期就是一次RPC调用。</p></blockquote><h5 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a><strong>服务端</strong></h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token punctuation">(</span>h <span class="token operator">*</span>HelloServer<span class="token punctuation">)</span><span class="token function">SayHello</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span>req <span class="token operator">*</span>metadatademo<span class="token punctuation">.</span>HelloRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>metadatademo<span class="token punctuation">.</span>HelloReply<span class="token punctuation">,</span><span class="token builtin">error</span><span class="token punctuation">)</span><span class="token punctuation">{</span>md <span class="token punctuation">,</span> ok <span class="token operator">:=</span> metadata<span class="token punctuation">.</span><span class="token function">FromIncomingContext</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"获取md失败"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">if</span> name<span class="token punctuation">,</span>ok <span class="token operator">:=</span> md<span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>ok <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>name<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment">//for key,val := range md {</span><span class="token comment">//fmt.Println(key,val)</span><span class="token comment">//}</span><span class="token keyword">return</span> <span class="token operator">&amp;</span>metadatademo<span class="token punctuation">.</span>HelloReply<span class="token punctuation">{</span>Message<span class="token punctuation">:</span>  <span class="token string">"Hello "</span> <span class="token operator">+</span> req<span class="token punctuation">.</span>Name<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token boolean">nil</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a><strong>客户端</strong></h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//md := metadata.Pairs("timestamp",time.Now().Format(timeformat))</span>    lis <span class="token punctuation">,</span><span class="token boolean">_</span> <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:8081"</span><span class="token punctuation">,</span>grpc<span class="token punctuation">.</span><span class="token function">WithInsecure</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    client <span class="token operator">:=</span> metadatademo<span class="token punctuation">.</span><span class="token function">NewHelloServiceClient</span><span class="token punctuation">(</span>lis<span class="token punctuation">)</span>    req <span class="token operator">:=</span> metadatademo<span class="token punctuation">.</span>HelloRequest<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">"chenteng"</span><span class="token punctuation">}</span>    md <span class="token operator">:=</span> metadata<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span>        <span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"chenteng"</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    ctx <span class="token operator">:=</span> metadata<span class="token punctuation">.</span><span class="token function">NewOutgoingContext</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>md<span class="token punctuation">)</span>    res<span class="token punctuation">,</span><span class="token boolean">_</span> <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">SayHello</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span><span class="token operator">&amp;</span>req<span class="token punctuation">)</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="6-grpc中使用拦截器传递metadata"><a href="#6-grpc中使用拦截器传递metadata" class="headerlink" title="6. grpc中使用拦截器传递metadata"></a>6. grpc中使用<a href="https://so.csdn.net/so/search?q=%E6%8B%A6%E6%88%AA%E5%99%A8&amp;spm=1001.2101.3001.7020">拦截器</a>传递metadata</h4><blockquote><p>在Grpc中可使用拦截器来进行服务鉴权，在收到请求之前就对metadata中进行校验，斌不会侵入我们的业务代码</p></blockquote><h5 id="服务端-1"><a href="#服务端-1" class="headerlink" title="服务端"></a><strong>服务端</strong></h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"context"</span><span class="token string">"errors"</span><span class="token string">"fmt"</span><span class="token string">"google.golang.org/grpc"</span><span class="token string">"google.golang.org/grpc/metadata"</span><span class="token string">"log"</span><span class="token string">"mygrpc/protodemo"</span><span class="token string">"net"</span><span class="token string">"time"</span><span class="token punctuation">)</span><span class="token keyword">type</span> HelloServer <span class="token keyword">struct</span> <span class="token punctuation">{</span>protodemo<span class="token punctuation">.</span>UnimplementedHelloServiceServer<span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>h <span class="token operator">*</span>HelloServer<span class="token punctuation">)</span> <span class="token function">SayHello</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> req <span class="token operator">*</span>protodemo<span class="token punctuation">.</span>HelloRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>protodemo<span class="token punctuation">.</span>HelloReply<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token operator">&amp;</span>protodemo<span class="token punctuation">.</span>HelloReply<span class="token punctuation">{</span>Message<span class="token punctuation">:</span> <span class="token string">"Hello "</span> <span class="token operator">+</span> req<span class="token punctuation">.</span>Name<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>Interceptor <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> req <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> info <span class="token operator">*</span>grpc<span class="token punctuation">.</span>UnaryServerInfo<span class="token punctuation">,</span> handler grpc<span class="token punctuation">.</span>UnaryHandler<span class="token punctuation">)</span> <span class="token punctuation">(</span>resp <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> md<span class="token punctuation">,</span> ok <span class="token operator">:=</span> metadata<span class="token punctuation">.</span><span class="token function">FromIncomingContext</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"获取认证信息失败"</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"获取认证信息失败"</span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token keyword">if</span> value<span class="token punctuation">,</span> ok <span class="token operator">:=</span> md<span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"认证信息中未存放name相关信息"</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"认证信息中未存放name相关信息"</span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"客户端访问，name = "</span><span class="token punctuation">,</span> value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span>starttime <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>res<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">handler</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> req<span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"请求已完成，耗时："</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span><span class="token function">Since</span><span class="token punctuation">(</span>starttime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> res<span class="token punctuation">,</span> err<span class="token punctuation">}</span>md <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">UnaryInterceptor</span><span class="token punctuation">(</span>Interceptor<span class="token punctuation">)</span>server <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">NewServer</span><span class="token punctuation">(</span>md<span class="token punctuation">)</span>protodemo<span class="token punctuation">.</span><span class="token function">RegisterHelloServiceServer</span><span class="token punctuation">(</span>server<span class="token punctuation">,</span> <span class="token operator">&amp;</span>HelloServer<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>lis<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Listen</span><span class="token punctuation">(</span><span class="token string">"tcp"</span><span class="token punctuation">,</span> <span class="token string">":7789"</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">}</span><span class="token boolean">_</span> <span class="token operator">=</span> server<span class="token punctuation">.</span><span class="token function">Serve</span><span class="token punctuation">(</span>lis<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="客户端-1"><a href="#客户端-1" class="headerlink" title="客户端"></a><strong>客户端</strong></h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"context"</span><span class="token string">"fmt"</span><span class="token string">"google.golang.org/grpc"</span><span class="token string">"mygrpc/protodemo"</span><span class="token punctuation">)</span><span class="token keyword">type</span> customCredential <span class="token keyword">struct</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>customCredential<span class="token punctuation">)</span><span class="token function">GetRequestMetadata</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> uri <span class="token operator">...</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"chenteng"</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token boolean">nil</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>customCredential<span class="token punctuation">)</span><span class="token function">RequireTransportSecurity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">bool</span><span class="token punctuation">{</span><span class="token comment">//是否启用安全模式</span><span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//使用更简单的方式传递md</span>op <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">WithPerRPCCredentials</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>customCredential<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>conn<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:7789"</span><span class="token punctuation">,</span> grpc<span class="token punctuation">.</span><span class="token function">WithInsecure</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> op<span class="token punctuation">)</span>client <span class="token operator">:=</span> protodemo<span class="token punctuation">.</span><span class="token function">NewHelloServiceClient</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span>req <span class="token operator">:=</span> protodemo<span class="token punctuation">.</span>HelloRequest<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">"chenteng"</span><span class="token punctuation">}</span>res<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">SayHello</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>req<span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="7-GRPC返回报错状态码与内容"><a href="#7-GRPC返回报错状态码与内容" class="headerlink" title="7.GRPC返回报错状态码与内容"></a>7.GRPC返回报错状态码与内容</h4><blockquote><p>在开发过程中，我们可以使用grpc下面的status包来返回类似于http中的404,500之类的错误状态码，可以方便我们排查问题，光有状态码是不够的，需要携带一下报错信息，下面是client与server的具体实现</p></blockquote><h5 id="服务端-2"><a href="#服务端-2" class="headerlink" title="服务端"></a><strong>服务端</strong></h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"context"</span><span class="token string">"google.golang.org/grpc"</span><span class="token string">"google.golang.org/grpc/codes"</span><span class="token string">"google.golang.org/grpc/status"</span><span class="token string">"log"</span><span class="token string">"mygrpc/protodemo"</span><span class="token string">"net"</span><span class="token punctuation">)</span><span class="token keyword">type</span> HelloServer <span class="token keyword">struct</span> <span class="token punctuation">{</span>protodemo<span class="token punctuation">.</span>UnimplementedHelloServiceServer<span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>h <span class="token operator">*</span>HelloServer<span class="token punctuation">)</span> <span class="token function">SayHello</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> req <span class="token operator">*</span>protodemo<span class="token punctuation">.</span>HelloRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>protodemo<span class="token punctuation">.</span>HelloReply<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span>status<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>Internal<span class="token punctuation">,</span><span class="token string">"内部错误"</span><span class="token punctuation">)</span><span class="token comment">//return &amp;protodemo.HelloReply{</span><span class="token comment">//Message: "Hello " + req.Name,</span><span class="token comment">//}, nil</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>server <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">NewServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>protodemo<span class="token punctuation">.</span><span class="token function">RegisterHelloServiceServer</span><span class="token punctuation">(</span>server<span class="token punctuation">,</span> <span class="token operator">&amp;</span>HelloServer<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>lis<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Listen</span><span class="token punctuation">(</span><span class="token string">"tcp"</span><span class="token punctuation">,</span> <span class="token string">":7790"</span><span class="token punctuation">)</span><span class="token keyword">defer</span> lis<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">}</span><span class="token boolean">_</span> <span class="token operator">=</span> server<span class="token punctuation">.</span><span class="token function">Serve</span><span class="token punctuation">(</span>lis<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="客户端-2"><a href="#客户端-2" class="headerlink" title="客户端"></a><strong>客户端</strong></h5><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"context"</span><span class="token string">"fmt"</span><span class="token string">"google.golang.org/grpc"</span><span class="token string">"google.golang.org/grpc/status"</span><span class="token string">"mygrpc/protodemo"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>lis<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:7789"</span><span class="token punctuation">,</span> grpc<span class="token punctuation">.</span><span class="token function">WithInsecure</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>client <span class="token operator">:=</span> protodemo<span class="token punctuation">.</span><span class="token function">NewHelloServiceClient</span><span class="token punctuation">(</span>lis<span class="token punctuation">)</span>req <span class="token operator">:=</span> protodemo<span class="token punctuation">.</span>HelloRequest<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">"chenteng"</span><span class="token punctuation">}</span>res<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">SayHello</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>req<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span><span class="token keyword">if</span> statusinfo<span class="token punctuation">,</span>ok <span class="token operator">:=</span> status<span class="token punctuation">.</span><span class="token function">FromError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>ok <span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>statusinfo<span class="token punctuation">.</span><span class="token function">Code</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>statusinfo<span class="token punctuation">.</span><span class="token function">Message</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span>fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参考原文链接[陈小c]：<a href="https://blog.csdn.net/weixin_43143310/article/details/125064588">https://blog.csdn.net/weixin_43143310/article/details/125064588</a></p>]]></content>
      
      
      <categories>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> grpc </tag>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Gomock 进行单元测试</title>
      <link href="/go/shi-yong-gomock-jin-xing-dan-yuan-ce-shi.html"/>
      <url>/go/shi-yong-gomock-jin-xing-dan-yuan-ce-shi.html</url>
      
        <content type="html"><![CDATA[<p>在实际项目中，需要进行单元测试的时候。却往往发现有一大堆依赖项。这时候就是 <a href="https://github.com/golang/mock">Gomock</a> 大显身手的时候了<br>Gomock 是 Go 语言的一个 mock 框架，官方的那种 🤪</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ go get <span class="token parameter variable">-u</span> github.com/golang/mock/gomock$ go <span class="token function">install</span> github.com/golang/mock/mockgen<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol><li>第一步：我们将安装 gomock 第三方库和 mock 代码的生成工具 mockgen。而后者可以大大的节省我们的工作量。只需要了解其使用方式就可以</li><li>第二步：输入 mockgen 验证代码生成工具是否安装正确。若无法正常响应，请检查 bin 目录下是否包含该二进制文件</li></ol><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><p>在 mockgen 命令中，支持两种生成模式：</p><ul><li>source：从源文件生成 mock 接口（通过 -source 启用）<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mockgen <span class="token parameter variable">-source</span><span class="token operator">=</span>foo.go <span class="token punctuation">[</span>other options<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="写测试用例"><a href="#写测试用例" class="headerlink" title="写测试用例"></a>写测试用例</h2><p>在本文将模拟一个简单 Demo 来编写测试用例，熟悉整体的测试流程</p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol><li>想清楚整体逻辑</li><li>定义想要（模拟）依赖项的 interface（接口）</li><li>使用 mockgen 命令对所需 mock 的 interface 生成 mock 文件</li><li>编写单元测试的逻辑，在测试中使用 mock</li><li>进行单元测试的验证</li></ol><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">├── mock├── person│   └── male.go└── user    ├── user.go    └── user_test.go<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="编写"><a href="#编写" class="headerlink" title="编写"></a>编写</h3><h4 id="interface-方法"><a href="#interface-方法" class="headerlink" title="interface 方法"></a>interface 方法</h4><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> person<span class="token keyword">type</span> Male <span class="token keyword">interface</span> <span class="token punctuation">{</span>    <span class="token function">Get</span><span class="token punctuation">(</span>id <span class="token builtin">int64</span><span class="token punctuation">)</span> <span class="token builtin">error</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="调用方法"><a href="#调用方法" class="headerlink" title="调用方法"></a>调用方法</h4><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> user<span class="token keyword">import</span> <span class="token string">"github.com/EDDYCJY/mockd/person"</span><span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>    Person person<span class="token punctuation">.</span>Male<span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token function">NewUser</span><span class="token punctuation">(</span>p person<span class="token punctuation">.</span>Male<span class="token punctuation">)</span> <span class="token operator">*</span>User <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>User<span class="token punctuation">{</span>Person<span class="token punctuation">:</span> p<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">func</span> <span class="token punctuation">(</span>u <span class="token operator">*</span>User<span class="token punctuation">)</span> <span class="token function">GetUserInfo</span><span class="token punctuation">(</span>id <span class="token builtin">int64</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> u<span class="token punctuation">.</span>Person<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="生成-mock-文件"><a href="#生成-mock-文件" class="headerlink" title="生成 mock 文件"></a>生成 mock 文件</h4><p>回到 mockd/ 的根目录下，执行以下命令</p><pre class="line-numbers language-go" data-language="go"><code class="language-go">$ mockgen <span class="token operator">-</span>source<span class="token operator">=</span><span class="token punctuation">.</span><span class="token operator">/</span>person<span class="token operator">/</span>male<span class="token punctuation">.</span><span class="token keyword">go</span> <span class="token operator">-</span>destination<span class="token operator">=</span><span class="token punctuation">.</span><span class="token operator">/</span>mock<span class="token operator">/</span>male_mock<span class="token punctuation">.</span><span class="token keyword">go</span> <span class="token operator">-</span><span class="token keyword">package</span><span class="token operator">=</span>mock<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在执行完毕后，可以发现 mock/ 目录下多出了 male_mock.go 文件，这就是 mock 文件。那么命令中的指令又分别有什么用呢？如下：</p><ul><li>-source：设置需要模拟（mock）的接口文件</li><li>-destination：设置 mock 文件输出的地方，若不设置则打印到标准输出中</li><li>-package：设置 mock 文件的包名，若不设置则为 mock_ 前缀加上文件名（如本文的包名会为 mock_person）</li></ul><p>想了解更多的指令符，可参见 <a href="https://github.com/golang/mock#running-mockgen">官方文档</a></p><h4 id="测试用例"><a href="#测试用例" class="headerlink" title="测试用例"></a>测试用例</h4><p>打开 user/user_test.go 文件，写入以下内容：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> user<span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"testing"</span>    <span class="token string">"github.com/EDDYCJY/mockd/mock"</span>    <span class="token string">"github.com/golang/mock/gomock"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">TestUser_GetUserInfo</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>    ctl <span class="token operator">:=</span> gomock<span class="token punctuation">.</span><span class="token function">NewController</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>    <span class="token keyword">defer</span> ctl<span class="token punctuation">.</span><span class="token function">Finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> id <span class="token builtin">int64</span> <span class="token operator">=</span> <span class="token number">1</span>    mockMale <span class="token operator">:=</span> mock<span class="token punctuation">.</span><span class="token function">NewMockMale</span><span class="token punctuation">(</span>ctl<span class="token punctuation">)</span>    gomock<span class="token punctuation">.</span><span class="token function">InOrder</span><span class="token punctuation">(</span>        mockMale<span class="token punctuation">.</span><span class="token function">EXPECT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Return</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span>    user <span class="token operator">:=</span> <span class="token function">NewUser</span><span class="token punctuation">(</span>mockMale<span class="token punctuation">)</span>    err <span class="token operator">:=</span> user<span class="token punctuation">.</span><span class="token function">GetUserInfo</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>        t<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"user.GetUserInfo err: %v"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>gomock.NewController：返回 gomock.Controller，它代表 mock 生态系统中的顶级控件。定义了 mock 对象的范围、生命周期和期待值。另外它在多个 goroutine 中是安全的</li><li>mock.NewMockMale：创建一个新的 mock 实例</li><li>gomock.InOrder：声明给定的调用应按顺序进行（是对 gomock.After 的二次封装）</li><li>mockMale.EXPECT().Get(id).Return(nil)：这里有三个步骤，EXPECT()返回一个允许调用者设置<strong>期望</strong>和<strong>返回值</strong>的对象。Get(id) 是设置入参并调用 mock 实例中的方法。Return(nil) 是设置先前调用的方法出参。简单来说，就是设置入参并调用，最后设置返回值</li><li>NewUser(mockMale)：创建 User 实例，值得注意的是，在这里<strong>注入了 mock 对象</strong>，因此实际在随后的 user.GetUserInfo(id) 调用（入参：id 为 1）中。它调用的是我们事先模拟好的 mock 方法</li><li>ctl.Finish()：进行 mock 用例的期望值断言，一般会使用 defer 延迟执行，以防止我们忘记这一操作</li></ol><h2 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h2><h3 id="一、常用-mock-方法"><a href="#一、常用-mock-方法" class="headerlink" title="一、常用 mock 方法"></a>一、常用 mock 方法</h3><h4 id="调用方法-1"><a href="#调用方法-1" class="headerlink" title="调用方法"></a>调用方法</h4><ul><li>Call.Do()：声明在匹配时要运行的操作</li><li>Call.DoAndReturn()：声明在匹配调用时要运行的操作，并且模拟返回该函数的返回值</li><li>Call.MaxTimes()：设置最大的调用次数为 n 次</li><li>Call.MinTimes()：设置最小的调用次数为 n 次</li><li>Call.AnyTimes()：允许调用次数为 0 次或更多次</li><li>Call.Times()：设置调用次数为 n 次</li></ul><h4 id="参数匹配"><a href="#参数匹配" class="headerlink" title="参数匹配"></a>参数匹配</h4><ul><li>gomock.Any()：匹配任意值</li><li>gomock.Eq()：通过反射匹配到指定的类型值，而不需要手动设置</li><li>gomock.Nil()：返回 nil</li></ul><p>建议更多的方法可参见 <a href="https://godoc.org/github.com/golang/mock/gomock#pkg-index">官方文档</a></p><h3 id="二、生成多个-mock-文件"><a href="#二、生成多个-mock-文件" class="headerlink" title="二、生成多个 mock 文件"></a>二、生成多个 mock 文件</h3><p>你可能会想一条条命令生成 mock 文件，岂不得崩溃？<br>当然，官方提供了更方便的方式，我们可以利用 go:generate 来完成批量处理的功能</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">go</span> generate <span class="token punctuation">[</span><span class="token operator">-</span>run regexp<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span>n<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span>v<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span>x<span class="token punctuation">]</span> <span class="token punctuation">[</span>build flags<span class="token punctuation">]</span> <span class="token punctuation">[</span>file<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token operator">...</span> <span class="token operator">|</span> packages<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> person<span class="token comment">//go:generate mockgen -destination=../mock/male_mock.go -package=mock github.com/EDDYCJY/mockd/person Male</span><span class="token keyword">type</span> Male <span class="token keyword">interface</span> <span class="token punctuation">{</span>    <span class="token function">Get</span><span class="token punctuation">(</span>id <span class="token builtin">int64</span><span class="token punctuation">)</span> <span class="token builtin">error</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们关注到 go:generate 这条语句，可分为以下部分：</p><blockquote><p>1.声明 //go:generate （注意不要留空格）<br>2.使用 mockgen 命令<br>3.定义 -destination<br>4.定义 -package<br>5.定义 source，此处为 person 的包路径<br>6.定义 interfaces，此处为 Male</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pipeline流水线构建</title>
      <link href="/devops/pipeline-liu-shui-xian-gou-jian.html"/>
      <url>/devops/pipeline-liu-shui-xian-gou-jian.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-流水线创建"><a href="#1-流水线创建" class="headerlink" title="1.流水线创建"></a>1.流水线创建</h2><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1638871282715-4a1c8bbc-9f30-44c6-884b-e498d8d1f785.png#clientId=u9eca6b11-0ad6-4&amp;from=paste&amp;height=882&amp;id=u3bd4b01d&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=882&amp;originWidth=1477&amp;originalType=binary&amp;ratio=1&amp;size=85365&amp;status=done&amp;style=none&amp;taskId=uaf734b5d-dd31-4d97-ac07-82ac5735de0&amp;width=1477" alt="image.png"></p><h2 id="2-创建秘钥"><a href="#2-创建秘钥" class="headerlink" title="2.创建秘钥"></a>2.创建秘钥</h2><h4 id="2-1通过http账号密码方式"><a href="#2-1通过http账号密码方式" class="headerlink" title="2.1通过http账号密码方式"></a>2.1通过http账号密码方式</h4><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1638871373088-c0c502c6-4cdd-4d1a-b7cc-a6bcca6bcdcc.png#clientId=u9eca6b11-0ad6-4&amp;from=paste&amp;height=574&amp;id=u89e928f6&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=574&amp;originWidth=1847&amp;originalType=binary&amp;ratio=1&amp;size=45631&amp;status=done&amp;style=none&amp;taskId=u74315913-662c-4566-9b6f-84ffda22345&amp;width=1847" alt="image.png"></p><h4 id="2-2通过ssh方式"><a href="#2-2通过ssh方式" class="headerlink" title="2.2通过ssh方式"></a>2.2通过ssh方式</h4><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1638871410993-6a1076ff-c438-4385-bb2b-cb84254985ac.png#clientId=u9eca6b11-0ad6-4&amp;from=paste&amp;height=754&amp;id=uf81e8d62&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=754&amp;originWidth=1669&amp;originalType=binary&amp;ratio=1&amp;size=48259&amp;status=done&amp;style=none&amp;taskId=u0c922898-0857-40da-9c30-6ecc53d990c&amp;width=1669" alt="image.png"></p><h3 id="3-根据脚本构建应用"><a href="#3-根据脚本构建应用" class="headerlink" title="3.根据脚本构建应用"></a>3.根据脚本构建应用</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">def label = "jenkins<span class="token punctuation">-</span>slave"<span class="token key atrule">podTemplate(label</span><span class="token punctuation">:</span> label<span class="token punctuation">,</span> <span class="token key atrule">cloud</span><span class="token punctuation">:</span> <span class="token string">'kubernetes'</span><span class="token punctuation">,</span>)<span class="token punctuation">{</span>node(label) <span class="token punctuation">{</span>        stage('pull code') <span class="token punctuation">{</span>            checkout(<span class="token punctuation">[</span><span class="token key atrule">$class</span><span class="token punctuation">:</span> <span class="token string">'GitSCM'</span><span class="token punctuation">,</span> <span class="token key atrule">branches</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">'*/master'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token key atrule">doGenerateSubmoduleConfigurations</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token punctuation">,</span> <span class="token key atrule">extensions</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token key atrule">submoduleCfg</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token key atrule">userRemoteConfigs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token key atrule">credentialsId</span><span class="token punctuation">:</span> <span class="token string">'6dabf361-4478-47c3-aba9-dc6e3d15795f'</span><span class="token punctuation">,</span> <span class="token key atrule">url</span><span class="token punctuation">:</span> <span class="token string">'https://codeup.aliyun.com/61233c140fc7bf0dbe1e642d/docker-demo.git'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>)        <span class="token punctuation">}</span>        stage('build') <span class="token punctuation">{</span>            echo "开始进行代码编译并推送到镜像仓库"             sh '''              echo $<span class="token punctuation">{</span>IMAGE_VERSION<span class="token punctuation">}</span><span class="token punctuation">-</span>$BUILD_NUMBER<span class="token punctuation">-</span>`git log <span class="token punctuation">-</span>n1 <span class="token punctuation">-</span><span class="token punctuation">-</span>format=format<span class="token punctuation">:</span>%h` <span class="token punctuation">&gt;</span> image_version.txt              cat image_version.txt              echo "测试 Kubernetes 动态生成 jenkins slave"                docker login <span class="token punctuation">-</span>u admin <span class="token punctuation">-</span>p harbor 192.168.56.11<span class="token punctuation">:</span><span class="token number">8084</span>                 mvn clean package <span class="token punctuation">-</span>Dmaven.test.skip=true                    cp /home/jenkins/agent/workspace/pipelineDemo/target/demo.jar ./                                  docker build <span class="token punctuation">-</span>t 192.168.56.11<span class="token punctuation">:</span>8084/demo/$<span class="token punctuation">{</span>IMAGE_NAME<span class="token punctuation">}</span><span class="token punctuation">:</span>`cat image_version.txt`  .                 docker push 192.168.56.11<span class="token punctuation">:</span>8084/demo/$<span class="token punctuation">{</span>IMAGE_NAME<span class="token punctuation">}</span><span class="token punctuation">:</span>`cat image_version.txt`              '''              echo "镜像编译结束"        <span class="token punctuation">}</span>        stage('packageChart') <span class="token punctuation">{</span>            echo "准备开始打chart包，并上传"            sh '''                        helm repo add <span class="token punctuation">-</span><span class="token punctuation">-</span>ca<span class="token punctuation">-</span>file /etc/docker/certs.d/ca.crt <span class="token punctuation">-</span><span class="token punctuation">-</span>username admin <span class="token punctuation">-</span><span class="token punctuation">-</span>password harbor myrepo https<span class="token punctuation">:</span>//192.168.56.11/chartrepo/demo            cp image_version.txt k8s/helm/            cd k8s/helm            sed <span class="token punctuation">-</span>i "s/<span class="token punctuation">{</span><span class="token punctuation">{</span>IMAGE_NAME<span class="token punctuation">}</span><span class="token punctuation">}</span>/$<span class="token punctuation">{</span>IMAGE_NAME<span class="token punctuation">}</span>/g" values.yaml            sed <span class="token punctuation">-</span>i "s/<span class="token punctuation">{</span><span class="token punctuation">{</span>IMAGE_VERSION<span class="token punctuation">}</span><span class="token punctuation">}</span>/`cat image_version.txt`/g" values.yaml            cat values.yaml            sed <span class="token punctuation">-</span>i "s/<span class="token punctuation">{</span><span class="token punctuation">{</span>JENKINS_NUM<span class="token punctuation">}</span><span class="token punctuation">}</span>/$BUILD_NUMBER/g" Chart.yaml            sed <span class="token punctuation">-</span>i "s/<span class="token punctuation">{</span><span class="token punctuation">{</span>CHART_NAME<span class="token punctuation">}</span><span class="token punctuation">}</span>/$<span class="token punctuation">{</span>CHART_NAME<span class="token punctuation">}</span>/g" Chart.yaml            sed <span class="token punctuation">-</span>i "s/<span class="token punctuation">{</span><span class="token punctuation">{</span>CHART_VERSION<span class="token punctuation">}</span><span class="token punctuation">}</span>/$<span class="token punctuation">{</span>CHART_VERSION<span class="token punctuation">}</span>/g" Chart.yaml                        cat Chart.yaml            helm package .            echo $<span class="token punctuation">{</span>CHART_NAME<span class="token punctuation">}</span><span class="token punctuation">-</span>$<span class="token punctuation">{</span>CHART_VERSION<span class="token punctuation">}</span>.$BUILD_NUMBER.tgz <span class="token punctuation">&gt;</span> tgz.txt            cat tgz.txt            curl <span class="token punctuation">-</span><span class="token punctuation">-</span>request POST      <span class="token punctuation">-</span><span class="token punctuation">-</span>form chart=@`cat tgz.txt`      <span class="token punctuation">-</span><span class="token punctuation">-</span>user admin<span class="token punctuation">:</span>harbor      https<span class="token punctuation">:</span>//192.168.56.11/api/chartrepo/demo/charts  <span class="token punctuation">-</span><span class="token punctuation">-</span>cacert /etc/docker/certs.d/ca.crt            '''            echo "打包结束"        <span class="token punctuation">}</span>        stage('deploy') <span class="token punctuation">{</span>            echo "准备开始部署"             sh '''                helm repo add <span class="token punctuation">-</span><span class="token punctuation">-</span>ca<span class="token punctuation">-</span>file /etc/docker/certs.d/ca.crt <span class="token punctuation">-</span><span class="token punctuation">-</span>username admin <span class="token punctuation">-</span><span class="token punctuation">-</span>password harbor myrepo https<span class="token punctuation">:</span>//192.168.56.11/chartrepo/demo                helm repo update                 cd k8s/helmValue                helm upgrade myapp  myrepo/$<span class="token punctuation">{</span>CHART_NAME<span class="token punctuation">}</span> <span class="token punctuation">-</span>n default <span class="token punctuation">-</span><span class="token punctuation">-</span>version $<span class="token punctuation">{</span>CHART_VERSION<span class="token punctuation">}</span>.$BUILD_NUMBER <span class="token punctuation">-</span>f dev.yaml              '''          <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-1代码拉取介绍"><a href="#3-1代码拉取介绍" class="headerlink" title="3.1代码拉取介绍"></a>3.1代码拉取介绍</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">checkout(<span class="token punctuation">[</span><span class="token key atrule">$class</span><span class="token punctuation">:</span> <span class="token string">'GitSCM'</span><span class="token punctuation">,</span> <span class="token key atrule">branches</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">'*/master'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token key atrule">doGenerateSubmoduleConfigurations</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token punctuation">,</span> <span class="token key atrule">extensions</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token key atrule">submoduleCfg</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token key atrule">userRemoteConfigs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token key atrule">credentialsId</span><span class="token punctuation">:</span> <span class="token string">'6dabf361-4478-47c3-aba9-dc6e3d15795f'</span><span class="token punctuation">,</span> <span class="token key atrule">url</span><span class="token punctuation">:</span> <span class="token string">'https://codeup.aliyun.com/61233c140fc7bf0dbe1e642d/docker-demo.git'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>)<span class="token comment"># 1.credentialsId为jenkins配置的秘钥</span><span class="token comment"># 2.url为请求url地址</span><span class="token comment"># 3.若是url使用ssh方式 那么配置的credentialsId也应该为ssh，反之同理</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-2自定义参数使用"><a href="#3-2自定义参数使用" class="headerlink" title="3.2自定义参数使用"></a>3.2自定义参数使用</h4><blockquote><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1638873996476-8aa48375-3dc0-4093-b6e6-752df89ac399.png#clientId=u9eca6b11-0ad6-4&amp;from=paste&amp;height=444&amp;id=uc0c90adc&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=444&amp;originWidth=1392&amp;originalType=binary&amp;ratio=1&amp;size=30996&amp;status=done&amp;style=none&amp;taskId=ub4f54f23-45cb-4c78-a670-6ad3f4f4817&amp;width=1392" alt="image.png"><br>使用方法为 ${CHART_NAME}</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> devops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> devops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建harbor私有镜像仓库</title>
      <link href="/devops/da-jian-harbor-si-you-jing-xiang-cang-ku.html"/>
      <url>/devops/da-jian-harbor-si-you-jing-xiang-cang-ku.html</url>
      
        <content type="html"><![CDATA[<h2 id="通过docker-compost来构建"><a href="#通过docker-compost来构建" class="headerlink" title="通过docker-compost来构建"></a>通过docker-compost来构建</h2><blockquote><p>1.参考地址：<a href="https://blog.csdn.net/submarineas/article/details/112788040">https://blog.csdn.net/submarineas/article/details/112788040</a> 开启https、设置证书位置<br>2.生成证书：<br>openssl genrsa -out ca.key 4096</p></blockquote><blockquote><p>openssl req -x509 -new -nodes -sha512 -days 3650 <br>    -subj “/C=CN/ST=Beijing/L=Beijing/O=chinatelecom/OU=ecloudcaas/CN=192.168.56.11” <br>    -key ca.key <br>    -out ca.crt</p><p>openssl genrsa -out 192.168.56.11.key 4096</p><p>openssl req -sha512 -new <br>    -subj “/C=CN/ST=Beijing/L=Beijing/O=chinatelecom/OU=ecloudcaas/CN=192.168.56.11” <br>    -key 192.168.56.11.key <br>    -out 192.168.56.11.csr </p><p>openssl x509 -req -sha512 -days 3650 <br>    -extfile v3.ext <br>    -CA ca.crt -CAkey ca.key -CAcreateserial <br>    -in 192.168.56.11.csr <br>    -out 192.168.56.11.crt</p><p>openssl x509 -inform PEM -in 192.168.56.11.crt -out 192.168.56.11.cert</p><p>cp 192.168.56.11.cert /etc/docker/cert/192.168.56.11/<br>cp 192.168.56.11.key /etc/docker/cert/192.168.56.11/<br>cp ca.crt /etc/docker/certs.d/   # 后续helm访问都需要使用改证书 </p><p>3.启动服务加上后缀<br>./prepare<br>./install.sh –with-notary –with-clair –with-chartmuseum </p></blockquote>]]></content>
      
      
      <categories>
          
          <category> devops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> devops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建k8s的jenkins集群</title>
      <link href="/devops/da-jian-k8s-de-jenkins-ji-qun.html"/>
      <url>/devops/da-jian-k8s-de-jenkins-ji-qun.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-机器参考"><a href="#1-机器参考" class="headerlink" title="1.机器参考"></a>1.机器参考</h3><table><thead><tr><th>ip</th><th>角色</th></tr></thead><tbody><tr><td>192.168.56.12</td><td>k8s-master</td></tr><tr><td>192.168.56.11</td><td>k8s-node1,harbor,nfs</td></tr><tr><td>192.168.56.10</td><td>k8s-node2</td></tr></tbody></table><h3 id="2-配置pvc"><a href="#2-配置pvc" class="headerlink" title="2.配置pvc"></a>2.配置pvc</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment">#需要提前配置要storageClass，否则需要配置声明pv和pvc指定</span><span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>master jenkins<span class="token punctuation">]</span><span class="token comment"># cat jenkins-pvc.yaml  </span><span class="token key atrule">kind</span><span class="token punctuation">:</span> PersistentVolumeClaim<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkins<span class="token punctuation">-</span>pvc  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> jenkins<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">accessModes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> ReadWriteMany  <span class="token key atrule">resources</span><span class="token punctuation">:</span>    <span class="token key atrule">requests</span><span class="token punctuation">:</span>      <span class="token key atrule">storage</span><span class="token punctuation">:</span> 10Gi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-配置rbac"><a href="#3-配置rbac" class="headerlink" title="3.配置rbac"></a>3.配置rbac</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>master jenkins<span class="token punctuation">]</span><span class="token comment"># cat jenkins-pvc.yaml </span><span class="token key atrule">kind</span><span class="token punctuation">:</span> PersistentVolumeClaim<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkins<span class="token punctuation">-</span>pvc  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> jenkins<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">accessModes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> ReadWriteMany  <span class="token key atrule">resources</span><span class="token punctuation">:</span>    <span class="token key atrule">requests</span><span class="token punctuation">:</span>      <span class="token key atrule">storage</span><span class="token punctuation">:</span> 10Gi<span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>master jenkins<span class="token punctuation">]</span><span class="token comment"># kubectl get sc</span>NAME                            PROVISIONER       RECLAIMPOLICY   VOLUMEBINDINGMODE   ALLOWVOLUMEEXPANSION   AGEmanaged<span class="token punctuation">-</span>nfs<span class="token punctuation">-</span>storage (default)   qgg<span class="token punctuation">-</span>nfs<span class="token punctuation">-</span>storage   Delete          Immediate           false                  16d<span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>master jenkins<span class="token punctuation">]</span><span class="token comment"># ls</span>jenkins_deployment.yaml  jenkins<span class="token punctuation">-</span>pvc.yaml  jenkins_rbac.yaml  jenkins_svc.yaml<span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>master jenkins<span class="token punctuation">]</span><span class="token comment"># cat jenkins_rbac.yaml </span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkins  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> jenkins<span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkins<span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"extensions"</span><span class="token punctuation">,</span> <span class="token string">"apps"</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"deployments"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"create"</span><span class="token punctuation">,</span> <span class="token string">"delete"</span><span class="token punctuation">,</span> <span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"list"</span><span class="token punctuation">,</span> <span class="token string">"watch"</span><span class="token punctuation">,</span> <span class="token string">"patch"</span><span class="token punctuation">,</span> <span class="token string">"update"</span><span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"services"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"create"</span><span class="token punctuation">,</span> <span class="token string">"delete"</span><span class="token punctuation">,</span> <span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"list"</span><span class="token punctuation">,</span> <span class="token string">"watch"</span><span class="token punctuation">,</span> <span class="token string">"patch"</span><span class="token punctuation">,</span> <span class="token string">"update"</span><span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"pods"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"create"</span><span class="token punctuation">,</span><span class="token string">"delete"</span><span class="token punctuation">,</span><span class="token string">"get"</span><span class="token punctuation">,</span><span class="token string">"list"</span><span class="token punctuation">,</span><span class="token string">"patch"</span><span class="token punctuation">,</span><span class="token string">"update"</span><span class="token punctuation">,</span><span class="token string">"watch"</span><span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"pods/exec"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"create"</span><span class="token punctuation">,</span><span class="token string">"delete"</span><span class="token punctuation">,</span><span class="token string">"get"</span><span class="token punctuation">,</span><span class="token string">"list"</span><span class="token punctuation">,</span><span class="token string">"patch"</span><span class="token punctuation">,</span><span class="token string">"update"</span><span class="token punctuation">,</span><span class="token string">"watch"</span><span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"pods/log"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"get"</span><span class="token punctuation">,</span><span class="token string">"list"</span><span class="token punctuation">,</span><span class="token string">"watch"</span><span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"secrets"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"create"</span><span class="token punctuation">,</span><span class="token string">"delete"</span><span class="token punctuation">,</span><span class="token string">"get"</span><span class="token punctuation">,</span><span class="token string">"list"</span><span class="token punctuation">,</span><span class="token string">"patch"</span><span class="token punctuation">,</span><span class="token string">"update"</span><span class="token punctuation">,</span><span class="token string">"watch"</span><span class="token punctuation">]</span><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRoleBinding<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkins  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> jenkins<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io  <span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole  <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkins<span class="token key atrule">subjects</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount    <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkins    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> jenkins<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-配置deploy"><a href="#4-配置deploy" class="headerlink" title="4.配置deploy"></a>4.配置deploy</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkins  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> jenkins<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> jenkins  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> jenkins    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">terminationGracePeriodSeconds</span><span class="token punctuation">:</span> <span class="token number">10</span>      <span class="token key atrule">serviceAccount</span><span class="token punctuation">:</span> jenkins      <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkins        <span class="token key atrule">image</span><span class="token punctuation">:</span> jenkins/jenkins<span class="token punctuation">:</span>lts<span class="token punctuation">-</span>centos7<span class="token punctuation">-</span>jdk8     <span class="token comment">#参考镜像</span>        <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent        <span class="token key atrule">ports</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">8080</span>                <span class="token comment">#外部访问端口</span>          <span class="token key atrule">name</span><span class="token punctuation">:</span> web          <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP        <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">50000</span>              <span class="token comment">#jenkins save发现端口</span>          <span class="token key atrule">name</span><span class="token punctuation">:</span> agent          <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP        <span class="token key atrule">resources</span><span class="token punctuation">:</span>          <span class="token key atrule">limits</span><span class="token punctuation">:</span>            <span class="token key atrule">cpu</span><span class="token punctuation">:</span> 1000m            <span class="token key atrule">memory</span><span class="token punctuation">:</span> 1Gi          <span class="token key atrule">requests</span><span class="token punctuation">:</span>            <span class="token key atrule">cpu</span><span class="token punctuation">:</span> 500m            <span class="token key atrule">memory</span><span class="token punctuation">:</span> 512Mi        <span class="token key atrule">livenessProbe</span><span class="token punctuation">:</span>          <span class="token key atrule">httpGet</span><span class="token punctuation">:</span>            <span class="token key atrule">path</span><span class="token punctuation">:</span> /login            <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span>          <span class="token key atrule">initialDelaySeconds</span><span class="token punctuation">:</span> <span class="token number">60</span>          <span class="token comment">#容器初始化完成后，等待60秒进行探针检查</span>          <span class="token key atrule">timeoutSeconds</span><span class="token punctuation">:</span> <span class="token number">5</span>          <span class="token key atrule">failureThreshold</span><span class="token punctuation">:</span> <span class="token number">12</span>          <span class="token comment">#当Pod成功启动且检查失败时，Kubernetes将在放弃之前尝试failureThreshold次。放弃生存检查意味着重新启动Pod。而放弃就绪检查，Pod将被标记为未就绪。默认为3.最小值为1</span>        <span class="token key atrule">readinessProbe</span><span class="token punctuation">:</span>          <span class="token key atrule">httpGet</span><span class="token punctuation">:</span>            <span class="token key atrule">path</span><span class="token punctuation">:</span> /login            <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span>          <span class="token key atrule">initialDelaySeconds</span><span class="token punctuation">:</span> <span class="token number">60</span>          <span class="token key atrule">timeoutSeconds</span><span class="token punctuation">:</span> <span class="token number">5</span>          <span class="token key atrule">failureThreshold</span><span class="token punctuation">:</span> <span class="token number">12</span>        <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>                       <span class="token comment">#需要将jenkins_home目录挂载出来</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkinshome          <span class="token key atrule">subPath</span><span class="token punctuation">:</span> jenkins          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /var/jenkins_home        <span class="token key atrule">env</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> LIMITS_MEMORY          <span class="token key atrule">valueFrom</span><span class="token punctuation">:</span>            <span class="token key atrule">resourceFieldRef</span><span class="token punctuation">:</span>              <span class="token key atrule">resource</span><span class="token punctuation">:</span> limits.memory              <span class="token key atrule">divisor</span><span class="token punctuation">:</span> 1Mi        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> JAVA_OPTS          <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>Xmx$(LIMITS_MEMORY)m <span class="token punctuation">-</span>XshowSettings<span class="token punctuation">:</span>vm <span class="token punctuation">-</span>Dhudson.slaves.NodeProvisioner.initialDelay=0 <span class="token punctuation">-</span>Dhudson.slaves.NodeProvisioner.MARGIN=50 <span class="token punctuation">-</span>Dhudson.slaves.NodeProvisioner.MARGIN0=0.85 <span class="token punctuation">-</span>Duser.timezone=Asia/Shanghai      <span class="token key atrule">securityContext</span><span class="token punctuation">:</span>        <span class="token key atrule">fsGroup</span><span class="token punctuation">:</span> <span class="token number">1000</span>      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkinshome        <span class="token key atrule">persistentVolumeClaim</span><span class="token punctuation">:</span>          <span class="token key atrule">claimName</span><span class="token punctuation">:</span> jenkins<span class="token punctuation">-</span>pvc     <span class="token comment">#挂载pvc名称</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-svc"><a href="#5-svc" class="headerlink" title="5.svc"></a>5.svc</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>master jenkins<span class="token punctuation">]</span><span class="token comment"># cat jenkins_svc.yaml </span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> jenkins  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> jenkins  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> jenkins<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> jenkins  <span class="token key atrule">type</span><span class="token punctuation">:</span> NodePort  <span class="token key atrule">ports</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> web    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span>    <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> web    <span class="token key atrule">nodePort</span><span class="token punctuation">:</span> <span class="token number">30002</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> agent    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">50000</span>    <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> agent<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-输入访问地址：http-192-168-56-12-30002"><a href="#6-输入访问地址：http-192-168-56-12-30002" class="headerlink" title="6.输入访问地址：http://192.168.56.12:30002/"></a>6.输入访问地址：<a href="http://192.168.56.12:30002/">http://192.168.56.12:30002/</a></h3><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1638495977925-8544d989-7461-4eb7-af55-881067cee0be.png" class="" title="image.png"><h3 id="7-插件"><a href="#7-插件" class="headerlink" title="7.插件"></a>7.插件</h3><h4 id="7-1安装默认推荐插件"><a href="#7-1安装默认推荐插件" class="headerlink" title="7.1安装默认推荐插件"></a>7.1安装默认推荐插件</h4><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1638868702728-3d9b5694-4b0b-4244-a926-5ad502a43a71.png" class="" title="image.png"><h4 id="7-2安装k8s相关插件"><a href="#7-2安装k8s相关插件" class="headerlink" title="7.2安装k8s相关插件"></a>7.2安装k8s相关插件</h4><blockquote><p>参考安装一下插件<br>1.kubernetes<br>2.blue Ocean<br>3.groovy postBuild</p></blockquote><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1638868773627-87fe872c-5e16-4a9c-84ed-14b8133f7db5.png" class="" title="image.png"><h3 id="8-配置jenkins的k8s集群信息"><a href="#8-配置jenkins的k8s集群信息" class="headerlink" title="8.配置jenkins的k8s集群信息"></a>8.配置jenkins的k8s集群信息</h3><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1638870309364-cd8418ea-9c11-47ce-bee4-189afe3d91ca.png" class="" title="image.png"><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1638870324493-5281f4a3-6c23-4228-af1f-1104783f976b.png" class="" title="image.png"><h4 id="8-1访问地址"><a href="#8-1访问地址" class="headerlink" title="8.1访问地址"></a>8.1访问地址</h4><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1638870458304-33ffe50d-8d6b-4c6b-bebb-5fc9000d6213.png" class="" title="image.png"><h4 id="8-2jenkins集群地址"><a href="#8-2jenkins集群地址" class="headerlink" title="8.2jenkins集群地址"></a>8.2jenkins集群地址</h4><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1638870812385-74002971-98c2-4303-8a78-bcd077c149fe.png" class="" title="image.png"><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1638870830421-b927b435-b5b9-4fda-bf40-9a57b29c3d32.png" class="" title="image.png"><h4 id="8-3pod配置"><a href="#8-3pod配置" class="headerlink" title="8.3pod配置"></a>8.3pod配置</h4><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1638870863266-928911a0-1202-46de-a510-5f859505c54c.png" class="" title="image.png"><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1638870873827-30859444-0e65-4eca-9821-92f4361fbbe5.png" class="" title="image.png"><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1638870884468-7ec622ed-9c32-4fe3-9865-c816fe86619d.png" class="" title="image.png"><h4 id="8-4pod挂载信息（包含-kubectl，docker，maven，maven-reposity-helm-harbor-证书）"><a href="#8-4pod挂载信息（包含-kubectl，docker，maven，maven-reposity-helm-harbor-证书）" class="headerlink" title="8.4pod挂载信息（包含 kubectl，docker，maven，maven reposity,helm,harbor 证书）"></a>8.4pod挂载信息（包含 kubectl，docker，maven，maven reposity,helm,harbor 证书）</h4><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1638870933982-328e5d39-ffea-4ce0-917a-7a65caff2f4d.png" class="" title="image.png"><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1638870990450-ffc51303-67d1-427d-b626-299f32532df2.png" class="" title="image.png"><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1638871045632-6f46bfd3-05aa-4e99-b987-8be393732a73.png" class="" title="image.png"><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1639642193185-fee040b6-47d4-4578-8587-07858da4fa8d.png" class="" title="image.png"><h4 id="8-5参考yaml文件"><a href="#8-5参考yaml文件" class="headerlink" title="8.5参考yaml文件"></a>8.5参考yaml文件</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> <span class="token string">"v1"</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> <span class="token string">"Pod"</span><span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">jenkins</span><span class="token punctuation">:</span> <span class="token string">"jenkins-slave"</span>    <span class="token key atrule">jenkins/label-digest</span><span class="token punctuation">:</span> <span class="token string">"03ddc3eddf95d5470d5c7fb6d2937abaeca3b79e"</span>    <span class="token key atrule">jenkins/label</span><span class="token punctuation">:</span> <span class="token string">"jenkins-slave"</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"jenkins-slave-c0dm0"</span><span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">containers</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">env</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"JENKINS_SECRET"</span>      <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">"********"</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"JENKINS_TUNNEL"</span>      <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">"jenkins.jenkins.svc.cluster.local:50000"</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"JENKINS_AGENT_NAME"</span>      <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">"jenkins-slave-c0dm0"</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"JENKINS_NAME"</span>      <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">"jenkins-slave-c0dm0"</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"JENKINS_AGENT_WORKDIR"</span>      <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">"/home/jenkins/agent"</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"JENKINS_URL"</span>      <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">"http://jenkins.jenkins.svc.cluster.local:8080/"</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> <span class="token string">"zhongyuanzhao000/jenkins-slave:jnlp"</span>    <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> <span class="token string">"IfNotPresent"</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"jnlp"</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token key atrule">limits</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>      <span class="token key atrule">requests</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token key atrule">tty</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> <span class="token string">"/etc/docker/certs.d/ca.crt"</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"volume-4"</span>      <span class="token key atrule">readOnly</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> <span class="token string">"/usr/local/bin/helm"</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"volume-3"</span>      <span class="token key atrule">readOnly</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> <span class="token string">"/var/run/docker.sock"</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"volume-1"</span>      <span class="token key atrule">readOnly</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> <span class="token string">"/root/.kube"</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"volume-0"</span>      <span class="token key atrule">readOnly</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> <span class="token string">"/root/.m2/repository"</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"volume-2"</span>      <span class="token key atrule">readOnly</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> <span class="token string">"/home/jenkins/agent"</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"workspace-volume"</span>      <span class="token key atrule">readOnly</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token key atrule">workingDir</span><span class="token punctuation">:</span> <span class="token string">"/home/jenkins/agent"</span>  <span class="token key atrule">hostNetwork</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">nodeSelector</span><span class="token punctuation">:</span>    <span class="token key atrule">kubernetes.io/os</span><span class="token punctuation">:</span> <span class="token string">"linux"</span>  <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> <span class="token string">"Never"</span>  <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> <span class="token string">"jenkins"</span>  <span class="token key atrule">volumes</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">hostPath</span><span class="token punctuation">:</span>      <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">"/root/.kube"</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"volume-0"</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"volume-2"</span>    <span class="token key atrule">persistentVolumeClaim</span><span class="token punctuation">:</span>      <span class="token key atrule">claimName</span><span class="token punctuation">:</span> <span class="token string">"jenkins-maven-pvc"</span>      <span class="token key atrule">readOnly</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token punctuation">-</span> <span class="token key atrule">hostPath</span><span class="token punctuation">:</span>      <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">"/var/run/docker.sock"</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"volume-1"</span>  <span class="token punctuation">-</span> <span class="token key atrule">emptyDir</span><span class="token punctuation">:</span>      <span class="token key atrule">medium</span><span class="token punctuation">:</span> <span class="token string">""</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"workspace-volume"</span>  <span class="token punctuation">-</span> <span class="token key atrule">hostPath</span><span class="token punctuation">:</span>      <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">"/etc/docker/certs.d/ca.crt"</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"volume-4"</span>  <span class="token punctuation">-</span> <span class="token key atrule">hostPath</span><span class="token punctuation">:</span>      <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">"/usr/local/bin/helm"</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"volume-3"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="8-6-查看kubectl版本（版本过低会导致报错）"><a href="#8-6-查看kubectl版本（版本过低会导致报错）" class="headerlink" title="8.6 查看kubectl版本（版本过低会导致报错）"></a>8.6 查看kubectl版本（版本过低会导致报错）</h4><blockquote><h4 id="SchemaError-io-k8s-api-admissionregistration-v1-MutatingWebhook-invalid-object-doesn’t-have-additional-properties"><a href="#SchemaError-io-k8s-api-admissionregistration-v1-MutatingWebhook-invalid-object-doesn’t-have-additional-properties" class="headerlink" title="SchemaError(io.k8s.api.admissionregistration.v1.MutatingWebhook): invalid object doesn’t have additional properties"></a>SchemaError(io.k8s.api.admissionregistration.v1.MutatingWebhook): invalid object doesn’t have additional properties</h4><img src="/devops/da-jian-k8s-de-jenkins-ji-qun/1639711950499-f9428458-8c60-4059-aa9b-f5ca0bca8aa8.png" class="" title="image.png"></blockquote>]]></content>
      
      
      <categories>
          
          <category> devops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
            <tag> devops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/kubernetes/k8s-hpa-dan-xing-shen-suo.html"/>
      <url>/kubernetes/k8s-hpa-dan-xing-shen-suo.html</url>
      
        <content type="html"><![CDATA[<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>HPA在k8s中也由一个controller控制，controller会间隔循环HPA，检查每个HPA中监控的指标是否触发伸缩条件，默认的间隔时间为<strong>15s</strong>。一旦触发伸缩条件，controller会向k8s发送请求，修改伸缩对象<strong>（statefulSet、replicaController、replicaSet）</strong>子对象<strong>scale</strong>中控制<strong>pod</strong>数量的字段。<strong>k8s</strong>响应请求，修改<strong>scale</strong>结构体，然后会刷新一次伸缩对象的<strong>pod</strong>数量。伸缩对象被修改后，自然会通过<strong>list/watch</strong>机制<strong>增加或减少pod</strong>数量，达到动态伸缩的目的</p><h3 id="预先安装metrics-server"><a href="#预先安装metrics-server" class="headerlink" title="预先安装metrics-server"></a>预先安装metrics-server</h3><blockquote><p>查看hpa配置<br>2.kubect get hpa<br>查看node配置<br>kubectl top node</p></blockquote><h3 id="二、进行压力测试"><a href="#二、进行压力测试" class="headerlink" title="二、进行压力测试"></a>二、进行压力测试</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl run <span class="token parameter variable">-i</span> <span class="token parameter variable">--tty</span> load-generator <span class="token parameter variable">--image</span><span class="token operator">=</span>busybox /bin/sh<span class="token keyword">while</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token function">wget</span> <span class="token parameter variable">-q</span> -O- http://10.105.5.65<span class="token punctuation">;</span> <span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="三、自定义HPA"><a href="#三、自定义HPA" class="headerlink" title="三、自定义HPA"></a>三、自定义HPA</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> autoscaling/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> HorizontalPodAutoscaler<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">autoscaling.alpha.kubernetes.io/conditions</span><span class="token punctuation">:</span> '<span class="token punctuation">[</span><span class="token punctuation">{</span>"type"<span class="token punctuation">:</span><span class="token string">"AbleToScale"</span><span class="token punctuation">,</span>"status"<span class="token punctuation">:</span><span class="token string">"True"</span><span class="token punctuation">,</span>"lastTransitionTime"<span class="token punctuation">:</span><span class="token string">"2021-11-12T10:24:12Z"</span><span class="token punctuation">,</span>"reason"<span class="token punctuation">:</span><span class="token string">"ReadyForNewScale"</span><span class="token punctuation">,</span>"message"<span class="token punctuation">:</span>"recommended      size matches current size"<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>"type"<span class="token punctuation">:</span><span class="token string">"ScalingActive"</span><span class="token punctuation">,</span>"status"<span class="token punctuation">:</span><span class="token string">"True"</span><span class="token punctuation">,</span>"lastTransitionTime"<span class="token punctuation">:</span><span class="token string">"2021-11-13T04:52:54Z"</span><span class="token punctuation">,</span>"reason"<span class="token punctuation">:</span><span class="token string">"ValidMetricFound"</span><span class="token punctuation">,</span>"message"<span class="token punctuation">:</span>"the      HPA was able to successfully calculate a replica count from cpu resource utilization      (percentage of request)"<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>"type"<span class="token punctuation">:</span><span class="token string">"ScalingLimited"</span><span class="token punctuation">,</span>"status"<span class="token punctuation">:</span><span class="token string">"True"</span><span class="token punctuation">,</span>"lastTransitionTime"<span class="token punctuation">:</span><span class="token string">"2021-11-13T05:52:31Z"</span><span class="token punctuation">,</span>"reason"<span class="token punctuation">:</span><span class="token string">"TooFewReplicas"</span><span class="token punctuation">,</span>"message"<span class="token punctuation">:</span>"the      desired replica count is less than the minimum replica count"<span class="token punctuation">}</span><span class="token punctuation">]</span>'    <span class="token key atrule">autoscaling.alpha.kubernetes.io/current-metrics</span><span class="token punctuation">:</span> <span class="token string">'[{"type":"Resource","resource":{"name":"cpu","currentAverageUtilization":0,"currentAverageValue":"1m"}}]'</span>  <span class="token key atrule">creationTimestamp</span><span class="token punctuation">:</span> <span class="token string">"2021-11-12T10:23:56Z"</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> php<span class="token punctuation">-</span>apache  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default  <span class="token key atrule">resourceVersion</span><span class="token punctuation">:</span> <span class="token string">"57579"</span>  <span class="token key atrule">uid</span><span class="token punctuation">:</span> 5bdf76cb<span class="token punctuation">-</span>fcfd<span class="token punctuation">-</span>4761<span class="token punctuation">-</span>91a4<span class="token punctuation">-</span>24e08cf88e23<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">maxReplicas</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">minReplicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">scaleTargetRef</span><span class="token punctuation">:</span>    <span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1    <span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment    <span class="token key atrule">name</span><span class="token punctuation">:</span> php<span class="token punctuation">-</span>apache  <span class="token key atrule">targetCPUUtilizationPercentage</span><span class="token punctuation">:</span> <span class="token number">50</span>  <span class="token comment">## 增加其他配置限制</span><span class="token key atrule">status</span><span class="token punctuation">:</span>  <span class="token key atrule">currentCPUUtilizationPercentage</span><span class="token punctuation">:</span> <span class="token number">0</span>  <span class="token key atrule">currentReplicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">desiredReplicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">lastScaleTime</span><span class="token punctuation">:</span> <span class="token string">"2021-11-13T05:50:00Z"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四HPA-最佳实践"><a href="#四HPA-最佳实践" class="headerlink" title="四HPA 最佳实践"></a>四HPA 最佳实践</h3><ul><li>为容器配置 CPU Requests</li><li>HPA 目标设置恰当，如设置 70% 给容器和应用预留 30% 的余量</li><li>保持 Pods 和 Nodes 健康（避免 Pod 频繁重建）</li><li>保证用户请求的负载均衡</li><li>使用 kubectl top node 和 kubectl top pod 查看资源使用情况</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>压测工具Sysbench、Stress、iperf或iperf3</title>
      <link href="/ya-ce/ya-ce-gong-ju-sysbench-stress-iperf-huo-iperf3.html"/>
      <url>/ya-ce/ya-ce-gong-ju-sysbench-stress-iperf-huo-iperf3.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>sysbench是一款开源的、模块化的、跨平台的多线程性能测试工具，可用于CPU、内存、磁盘I/O、线程、数据库的性能测试。sysbench目前支持的数据库压测有PG和MySQL。（若想学习数据库压测，可以私聊麦老师哟，MySQL和PG均有相关课程）<br>工具的官网说明：<a href="https://launchpad.net/sysbench">https://launchpad.net/sysbench</a><br>sysbench支持以下几种测试模式：<br>1、CPU运算性能<br>2、磁盘IO性能<br>3、调度程序性能<br>4、内存分配及传输速度<br>5、POSIX线程性能–互斥基准测试<br>6、数据库性能(OLTP基准测试)</p></blockquote><h1 id="Sysbench"><a href="#Sysbench" class="headerlink" title="Sysbench"></a>Sysbench</h1><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h2><blockquote><p>curl -s <a href="https://packagecloud.io/install/repositories/akopytov/sysbench/script.rpm.sh">https://packagecloud.io/install/repositories/akopytov/sysbench/script.rpm.sh</a> | sudo bash<br>sudo yum -y install sysbench<br>sysbench –version</p></blockquote><h2 id="2-使用"><a href="#2-使用" class="headerlink" title="2. 使用"></a>2. 使用</h2><h3 id="sysbench通用参数选项如下"><a href="#sysbench通用参数选项如下" class="headerlink" title="sysbench通用参数选项如下"></a>sysbench通用参数选项如下</h3><blockquote><p>–threads: 线程数，若设置为2，则sysbench会启动2个线程，同时分别进行素数的计算，默认值为1。<br>–time: 运行时长，单位秒。若设置为5，则sysbench会在5秒内循环进行素数计算，每完成一轮就是一个event，默认值为10。<br>–events: event上限次数，若设置为100，则表示当完成100次event后，即使时间富余也停止运行。默认值为0，则表示不限event次数。<br>–forced-shutdown=STRING：超时强制中断，默认为off。     –thread-stack-size=SIZE：线程栈大小，默认64K<br>–thread-init-timeout=N：线程初始化等待时间，默认为30秒<br>–rate=N：平均事务率，0表示不限制，默认为0。<br>–report-interval=N：测试进度报告输出的时间间隔，0表示关闭，默认为0。<br>–report-checkpoints=[LIST,…]：转储完全统计信息并在指定时间点复位所有计数器，参数是逗号分隔值的列表，表示从必须执行报告检查点的测试开始所经过的时间（以秒为单位）。 默认情况下，报告检查点处于关闭状态[off]。<br>–debug[=on|off]：打印调试信息，默认为off<br>–validate[=on|off]：尽可能执行验证检查，默认为off。<br>–help[=on|off]：打印help信息并退出，默认为off<br>–version[=on|off]：打印版本信息并退出，默认为off<br>–config-file=FILENAME：命令行选项文件<br>–luajit-cmd=STRING：执行LuaJIT控制命令</p></blockquote><h3 id="1-cpu压测"><a href="#1-cpu压测" class="headerlink" title="1. cpu压测"></a>1. cpu压测</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sysbench <span class="token parameter variable">--test</span><span class="token operator">=</span>cpu <span class="token builtin class-name">help</span>sysbench cpu --cpu-max-prime<span class="token operator">=</span><span class="token number">20000</span> <span class="token parameter variable">--threads</span><span class="token operator">=</span><span class="token number">8</span> <span class="token parameter variable">--time</span><span class="token operator">=</span><span class="token number">30</span> run下面的命令表示10个线程执行800次请求，每个请求执行质数相加到80000000，下面开始压测：sysbench <span class="token parameter variable">--threads</span><span class="token operator">=</span><span class="token number">10</span> <span class="token parameter variable">--events</span><span class="token operator">=</span><span class="token number">800</span>  cpu --cpu-max-prime<span class="token operator">=</span><span class="token number">80000000</span> run指标解释：Prime numbers limit: <span class="token number">20000</span>，每个线程产生的素数上限均为2000events per second: <span class="token number">650.7</span>，所有线程每秒完成了650.74次eventtotal time: <span class="token number">10</span>.0017s，共耗时10秒total number of events: <span class="token number">6510</span>，10秒内所有线程一共完成了6510次eventmin: <span class="token number">3.03</span>，完成1次event的最少耗时3.03秒avg: <span class="token number">3.07</span>，所有event的平均耗时3.07毫秒max: <span class="token number">3.27</span>，完成1次event的最多耗时3.27毫秒95th percentile: <span class="token number">3.13</span>， <span class="token number">95</span>%次event在3.13秒毫秒内完成sum: <span class="token number">19999.91</span>，每个线程耗时10秒，2个线程叠加耗时就是20秒events <span class="token punctuation">(</span>avg/stddev<span class="token punctuation">)</span>: <span class="token number">3255.0000</span>/44.00 // 平均每个线程完成3255次event，标准差为44execution <span class="token function">time</span> <span class="token punctuation">(</span>avg/stddev<span class="token punctuation">)</span>: <span class="token number">10.0000</span>/0.00 // 每个线程平均耗时10秒，标准差为0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-内存压测"><a href="#2-内存压测" class="headerlink" title="2. 内存压测"></a>2. 内存压测</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sysbench  <span class="token parameter variable">--test</span><span class="token operator">=</span>memory <span class="token builtin class-name">help</span>--memory-block-size<span class="token operator">=</span>SIZE：测试内存块的大小，默认为1K。--memory-total-size<span class="token operator">=</span>SIZE：数据传输的总大小，默认为100G。--memory-scope<span class="token operator">=</span>STRING：内存访问的范围，包括全局和本地范围，默认为global。--memory-hugetlb<span class="token operator">=</span><span class="token punctuation">[</span>on<span class="token operator">|</span>off<span class="token punctuation">]</span>：是否从HugeTLB池分配内存的开关，默认为off。--memory-oper<span class="token operator">=</span>STRING：内存操作的类型，包括read, write, none，默认为write--memory-access-mode<span class="token operator">=</span>STRING：内存访问模式，包括seq,rnd两种模式，默认为seq。开启12个线程，内存块大小为8K，顺序读写:sysbench memory <span class="token parameter variable">--threads</span><span class="token operator">=</span><span class="token number">12</span> --memory-block-size<span class="token operator">=</span>8K --memory-total-size<span class="token operator">=</span>100G --memory-access-mode<span class="token operator">=</span>seq runsysbench memory <span class="token parameter variable">--threads</span><span class="token operator">=</span><span class="token number">12</span> --memory-block-size<span class="token operator">=</span>8K --memory-total-size<span class="token operator">=</span>100G --memory-access-mode<span class="token operator">=</span>rnd run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-磁盘IO性能"><a href="#3-磁盘IO性能" class="headerlink" title="3. 磁盘IO性能"></a>3. 磁盘IO性能</h3><blockquote><p>sysbench –test=fileio help<br> –file-num=N：生成测试文件的数量，默认为128。<br>–file-block-size=N：测试时所使用文件块的大小，如果想磁盘针对innodb存储引擎进行测试，可以将其设置为16384（innodb存储引擎页的大小），默认为16384。<br>–file-total-size=SIZE：创建测试文件的总大小，默认为2G大小。<br>–file-test-mode=STRING：文件测试模式，seqwr(顺序写)、seqrewr(顺序读写)、seqrd(顺序读)、rndrd(随机读)、rndwr(随机写)、rndrw(随机读写)。<br>–file-io-mode=STRING：文件操作模式，sync（同步）、async（异步）、fastmmap（快速mmap）、slowmmap（慢速mmap），默认为sync。<br>–file-async-backlog=N：对应每个线程队列的异步操作数，默认为128。<br>–file-extra-flags=STRING：打开文件时的选项，与API相关的参数。<br>–file-fsync-freq=N：执行fsync函数的频率。fsync主要是同步磁盘文件，0代表不使用fsync函数，默认值为100。<br>–file-fsync-all=[on|off]：每执行完一次写操作，就执行一次fsync。默认为off。<br>–file-fsync-end=[on|off]：测试结束时执行fsync函数，默认为on。<br>–file-fsync-mode=STRING：文件同步函数选择，和API相关的参数，由于多个操作系统对于fdatasync支持不同，因此不建议使用fdatasync，默认为fsync。<br>–file-merged-requests=N：大多情况下，合并可能的IO的请求数，默认为0。<br>–file-rw-ratio=N：测试时的读写比例，默认时为1.5，即可3：2。</p><h3 id="数据准备："><a href="#数据准备：" class="headerlink" title="数据准备："></a><strong>数据准备：</strong></h3><p>sysbench fileio –file-num=16 –file-total-size=2G prepare</p><h3 id="执行测试："><a href="#执行测试：" class="headerlink" title="执行测试："></a><strong>执行测试：</strong></h3><p>sysbench fileio –file-total-size=2G –file-test-mode=rndrd –time=180  –threads=16  –file-num=16 –file-extra-flags=direct –file-fsync-freq=0 –file-block-size=16384 run</p><h3 id="清理数据："><a href="#清理数据：" class="headerlink" title="清理数据："></a><strong>清理数据：</strong></h3><p>sysbench fileio –file-num=16 –file-total-size=2G cleanup</p></blockquote><h1 id="Stress"><a href="#Stress" class="headerlink" title="Stress"></a>Stress</h1><h2 id="1-安装-1"><a href="#1-安装-1" class="headerlink" title="1. 安装"></a>1. 安装</h2><blockquote><ol><li>[# wget <a href="https://download-ib01.fedoraproject.org/pub/epel/7/x86_64/Packages/s/stress-1.0.4-16.el7.x86_64.rpm">https://download-ib01.fedoraproject.org/pub/epel/7/x86_64/Packages/s/stress-1.0.4-16.el7.x86_64.rpm</a></li><li>[]# rpm -ivh stress-1.0.4-16.el7.x86_64.rpm</li></ol></blockquote><h2 id="2-使用-1"><a href="#2-使用-1" class="headerlink" title="2. 使用"></a>2. 使用</h2><h3 id="1-cpu"><a href="#1-cpu" class="headerlink" title="1. cpu"></a>1. cpu</h3><blockquote><p>创建8个stress进程，持续时间600秒，模拟CPU在用户态使用率达到100%的场景。<br>stress –cpu 8 –timeout 600</p></blockquote><h3 id="2-内存"><a href="#2-内存" class="headerlink" title="2. 内存"></a>2. 内存</h3><blockquote><p>创建100个io进程，持续时间600秒，模拟CPU在内核态使用率达到100%的场景。<br> stress  –io 100 –timeout 600<br>stress –vm 5 –vm-bytes 1G –vm-hang 100 –timeout 100s </p></blockquote><h3 id="3-IO"><a href="#3-IO" class="headerlink" title="3.IO"></a>3.IO</h3><blockquote><p>创建8个stress进程和100个io进程，持续时间600秒，模拟CPU在用户态和内核态总使用率达到100%的场景。<br> stress -c 8 -i 100 –verbose –timeout 600</p></blockquote><h1 id="IfTOP"><a href="#IfTOP" class="headerlink" title="IfTOP"></a>IfTOP</h1><blockquote><p>yum install flex byacc  libpcap ncurses ncurses-devel<br>yum install gcc gcc-c++ autoconf automake<br>wget <a href="ftp://fr2.rpmfind.net/linux/dag/redhat/el5/en/i386/dag/RPMS/iftop-0.17-1.el5.rf.i386.rpm">ftp://fr2.rpmfind.net/linux/dag/redhat/el5/en/i386/dag/RPMS/iftop-0.17-1.el5.rf.i386.rpm</a><br>rpm -ivh iftop-0.17-1.el5.rf.i386.rpm</p><p>wget <a href="http://www.ex-parrot.com/~pdw/iftop/download/iftop-0.17.tar.gz">http://www.ex-parrot.com/~pdw/iftop/download/iftop-0.17.tar.gz</a><br> tar -xvzf iftop-0.17.tar.gz<br>./configure &amp;&amp; make &amp;&amp; make install  </p><p>TX：发送流量<br>RX：接收流量<br>TOTAL：总流量<br>Cumm：运行iftop到目前时间的总流量<br>peak：流量峰值<br>rates：分别表示过去 2s 10s 40s 的平均流量</p></blockquote><h1 id="iperf或iperf3"><a href="#iperf或iperf3" class="headerlink" title="iperf或iperf3"></a>iperf或iperf3</h1><blockquote><h3 id="服务端运行："><a href="#服务端运行：" class="headerlink" title="服务端运行："></a>服务端运行：</h3><p>iperf -u -s</p><h4 id="u表示以udp模式运行（不加该参数，默认是以tcp模式运行），-s表示作为服务端"><a href="#u表示以udp模式运行（不加该参数，默认是以tcp模式运行），-s表示作为服务端" class="headerlink" title="-u表示以udp模式运行（不加该参数，默认是以tcp模式运行），-s表示作为服务端"></a>-u表示以udp模式运行（不加该参数，默认是以tcp模式运行），-s表示作为服务端</h4><h3 id="客户端运行："><a href="#客户端运行：" class="headerlink" title="客户端运行："></a>客户端运行：</h3><p>iperf -u -c 192.168.30.115 -b 100M -t 60 -i 2</p><h4 id="解释：在udp模式下，以100Mbps为数据发送速率，客户端到服务器192-168-30-115上传带宽测试，测试时间为60秒"><a href="#解释：在udp模式下，以100Mbps为数据发送速率，客户端到服务器192-168-30-115上传带宽测试，测试时间为60秒" class="headerlink" title="解释：在udp模式下，以100Mbps为数据发送速率，客户端到服务器192.168.30.115上传带宽测试，测试时间为60秒"></a>解释：在udp模式下，以100Mbps为数据发送速率，客户端到服务器192.168.30.115上传带宽测试，测试时间为60秒</h4><p>iperf -c 192.168.30.115 -u -i 1 -t 10 -b 2M -P 2</p><h4 id="解释：客户端同时向服务器端发起2个连接线程，每个连接线程以2Mbps为数据发送速率，测试时间为10秒"><a href="#解释：客户端同时向服务器端发起2个连接线程，每个连接线程以2Mbps为数据发送速率，测试时间为10秒" class="headerlink" title="解释：客户端同时向服务器端发起2个连接线程，每个连接线程以2Mbps为数据发送速率，测试时间为10秒"></a>解释：客户端同时向服务器端发起2个连接线程，每个连接线程以2Mbps为数据发送速率，测试时间为10秒</h4><p>iperf -u -c 192.168.30.115 -b 1000M -d -t 60 -i 1</p><h4 id="解释：以1000M为数据发送速率，进行上下行带宽测试，测试时间60秒，每秒显示一次结果"><a href="#解释：以1000M为数据发送速率，进行上下行带宽测试，测试时间60秒，每秒显示一次结果" class="headerlink" title="解释：以1000M为数据发送速率，进行上下行带宽测试，测试时间60秒，每秒显示一次结果"></a>解释：以1000M为数据发送速率，进行上下行带宽测试，测试时间60秒，每秒显示一次结果</h4></blockquote>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 压测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【gRPC SSL】自签CA、服务端和客户端双向认证</title>
      <link href="/grpc/grpc-ssl-zi-qian-ca-fu-wu-duan-he-ke-hu-duan-shuang-xiang-ren-zheng.html"/>
      <url>/grpc/grpc-ssl-zi-qian-ca-fu-wu-duan-he-ke-hu-duan-shuang-xiang-ren-zheng.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文主要介绍了自签CA、服务端和客户端双向认证,主要包括自签CA、GolangGrpc服务端和客户端双向认证的相关内容,需要的朋友可以参考下</p></blockquote><h3 id="参考地址：https-blog-csdn-net-dl962454-article-details-124350199"><a href="#参考地址：https-blog-csdn-net-dl962454-article-details-124350199" class="headerlink" title="参考地址：https://blog.csdn.net/dl962454/article/details/124350199"></a>参考地址：<a href="https://blog.csdn.net/dl962454/article/details/124350199">https://blog.csdn.net/dl962454/article/details/124350199</a></h3><h2 id="一、双向认证"><a href="#一、双向认证" class="headerlink" title="一、双向认证"></a>一、双向认证</h2><h3 id="1-1-CA根证书生成"><a href="#1-1-CA根证书生成" class="headerlink" title="1.1 CA根证书生成"></a>1.1 CA根证书生成</h3><p>在openssl的bin目录下新建一个配置文件<strong>ca.conf</strong>，文件内容如下：</p><pre class="line-numbers language-toml" data-language="toml"><code class="language-toml"><span class="token punctuation">[</span> <span class="token table class-name">req</span> <span class="token punctuation">]</span><span class="token key property">default_bits</span>       <span class="token punctuation">=</span> <span class="token number">2048</span><span class="token key property">distinguished_name</span> <span class="token punctuation">=</span> req_distinguished_name<span class="token punctuation">[</span> <span class="token table class-name">req_distinguished_name</span> <span class="token punctuation">]</span><span class="token key property">countryName</span>                 <span class="token punctuation">=</span> Country Name (<span class="token number">2</span> letter code)<span class="token key property">countryName_default</span>         <span class="token punctuation">=</span> CN<span class="token key property">stateOrProvinceName</span>         <span class="token punctuation">=</span> State or Province Name (full name)<span class="token key property">stateOrProvinceName_default</span> <span class="token punctuation">=</span> SiChuan<span class="token key property">localityName</span>                <span class="token punctuation">=</span> Locality Name (eg<span class="token punctuation">,</span> city)<span class="token key property">localityName_default</span>        <span class="token punctuation">=</span> Chengdu<span class="token key property">organizationName</span>            <span class="token punctuation">=</span> Organization Name (eg<span class="token punctuation">,</span> company)<span class="token key property">organizationName_default</span>    <span class="token punctuation">=</span> Step<span class="token key property">commonName</span>                  <span class="token punctuation">=</span> CommonName (e<span class="token punctuation">.</span>g<span class="token punctuation">.</span> server FQDN or YOUR name)<span class="token key property">commonName_max</span>              <span class="token punctuation">=</span> <span class="token number">64</span><span class="token key property">commonName_default</span>          <span class="token punctuation">=</span> tonghua<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>依次执行下面的命令，执行过程中遇到的填写国家之类的直接Enter跳过，选择配置文件中默认的，从而生成**CA私钥(ca.key)<strong>、*<br>*签名请求(ca.csr)</strong> 和 <strong>签名证书（ca.crt）</strong>：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">openssl genrsa <span class="token parameter variable">-out</span> ca.key <span class="token number">2048</span>openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-sha256</span> <span class="token parameter variable">-out</span> ca.csr <span class="token parameter variable">-key</span> ca.key <span class="token parameter variable">-config</span> ca.confopenssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-days</span> <span class="token number">3650</span> <span class="token parameter variable">-in</span> ca.csr signkey ca.key out ca.crt //这地方的输出可以改写成ca.pem,改写后后面命令中也要同步<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="1-2-签发服务端证书"><a href="#1-2-签发服务端证书" class="headerlink" title="1.2 签发服务端证书"></a>1.2 签发服务端证书</h3><p>接下来创建服务端配置文件server.conf，文件内容如下:</p><pre class="line-numbers language-toml" data-language="toml"><code class="language-toml"><span class="token punctuation">[</span> <span class="token table class-name">req</span> <span class="token punctuation">]</span><span class="token key property">default_bits</span>       <span class="token punctuation">=</span> <span class="token number">2048</span><span class="token key property">distinguished_name</span> <span class="token punctuation">=</span> req_distinguished_name<span class="token punctuation">[</span> <span class="token table class-name">req_distinguished_name</span> <span class="token punctuation">]</span><span class="token key property">countryName</span>                 <span class="token punctuation">=</span> Country Name (<span class="token number">2</span> letter code)<span class="token key property">countryName_default</span>         <span class="token punctuation">=</span> CN<span class="token key property">stateOrProvinceName</span>         <span class="token punctuation">=</span> State or Province Name (full name)<span class="token key property">stateOrProvinceName_default</span> <span class="token punctuation">=</span> SiChuan<span class="token key property">localityName</span>                <span class="token punctuation">=</span> Locality Name (eg<span class="token punctuation">,</span> city)<span class="token key property">localityName_default</span>        <span class="token punctuation">=</span> Chengdu<span class="token key property">organizationName</span>            <span class="token punctuation">=</span> Organization Name (eg<span class="token punctuation">,</span> company)<span class="token key property">organizationName_default</span>    <span class="token punctuation">=</span> Step<span class="token key property">commonName</span>                  <span class="token punctuation">=</span> CommonName (e<span class="token punctuation">.</span>g<span class="token punctuation">.</span> server FQDN or YOUR name)<span class="token key property">commonName_max</span>              <span class="token punctuation">=</span> <span class="token number">64</span><span class="token key property">commonName_default</span>          <span class="token punctuation">=</span> tonghua<span class="token punctuation">[</span> <span class="token table class-name">req_ext</span> <span class="token punctuation">]</span><span class="token comment"># 添加subjectAltName </span><span class="token key property">subjectAltName</span> <span class="token punctuation">=</span> @alt_names<span class="token comment"># 文件末尾添加. www.p-pp.cn代表允许的ServerName,自己随便写</span><span class="token punctuation">[</span><span class="token table class-name">alt_names</span><span class="token punctuation">]</span><span class="token key property">DNS.1</span>   <span class="token punctuation">=</span> www<span class="token punctuation">.</span>p-pp<span class="token punctuation">.</span>cn<span class="token key property">IP</span>      <span class="token punctuation">=</span> <span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同样，使用上面得到的CA根证书（ca.crt）签发服务端证书，依次执行下面命令生成服务端的密钥、签名请求和签名证书：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">// 服务端私钥openssl genrsa <span class="token parameter variable">-out</span> server.key <span class="token number">2048</span>//服务端签名请求openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-sha256</span> <span class="token parameter variable">-out</span> server.csr <span class="token parameter variable">-key</span> server.key <span class="token parameter variable">-config</span> server.conf//用根证书签发服务端证书server.pemopenssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-days</span> <span class="token number">3650</span> <span class="token parameter variable">-CA</span> ca.crt <span class="token parameter variable">-CAkey</span> ca.key <span class="token parameter variable">-CAcreateserial</span> <span class="token parameter variable">-in</span> server.csr <span class="token parameter variable">-out</span> server.pem <span class="token parameter variable">-extensions</span> req_ext <span class="token parameter variable">-extfile</span> server.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-3-签发客户端证书"><a href="#1-3-签发客户端证书" class="headerlink" title="1.3 签发客户端证书"></a>1.3 签发客户端证书</h3><p>建立配置文件client.conf：</p><pre class="line-numbers language-toml" data-language="toml"><code class="language-toml"><span class="token punctuation">[</span> <span class="token table class-name">req</span> <span class="token punctuation">]</span><span class="token key property">default_bits</span>       <span class="token punctuation">=</span> <span class="token number">2048</span><span class="token key property">distinguished_name</span> <span class="token punctuation">=</span> req_distinguished_name<span class="token punctuation">[</span> <span class="token table class-name">req_distinguished_name</span> <span class="token punctuation">]</span><span class="token key property">countryName</span>                 <span class="token punctuation">=</span> Country Name (<span class="token number">2</span> letter code)<span class="token key property">countryName_default</span>         <span class="token punctuation">=</span> CN<span class="token key property">stateOrProvinceName</span>         <span class="token punctuation">=</span> State or Province Name (full name)<span class="token key property">stateOrProvinceName_default</span> <span class="token punctuation">=</span> SiChuan<span class="token key property">localityName</span>                <span class="token punctuation">=</span> Locality Name (eg<span class="token punctuation">,</span> city)<span class="token key property">localityName_default</span>        <span class="token punctuation">=</span> Chengdu<span class="token key property">organizationName</span>            <span class="token punctuation">=</span> Organization Name (eg<span class="token punctuation">,</span> company)<span class="token key property">organizationName_default</span>    <span class="token punctuation">=</span> Step<span class="token key property">commonName</span>                  <span class="token punctuation">=</span> CommonName (e<span class="token punctuation">.</span>g<span class="token punctuation">.</span> server FQDN or YOUR name)<span class="token key property">commonName_max</span>              <span class="token punctuation">=</span> <span class="token number">64</span><span class="token key property">commonName_default</span>          <span class="token punctuation">=</span> tonghua<span class="token punctuation">[</span> <span class="token table class-name">req_ext</span> <span class="token punctuation">]</span><span class="token key property">subjectAltName</span> <span class="token punctuation">=</span> @alt_names<span class="token punctuation">[</span><span class="token table class-name">alt_names</span><span class="token punctuation">]</span><span class="token key property">DNS.1</span>   <span class="token punctuation">=</span> www<span class="token punctuation">.</span>p-pp<span class="token punctuation">.</span>cn<span class="token key property">IP</span>      <span class="token punctuation">=</span> <span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行下面命令生成客户端密钥、证书等：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">openssl ecparam <span class="token parameter variable">-genkey</span> <span class="token parameter variable">-name</span> secp384r1 <span class="token parameter variable">-out</span> client.keyopenssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-sha256</span> <span class="token parameter variable">-out</span> client.csr <span class="token parameter variable">-key</span> client.key <span class="token parameter variable">-config</span> client.confopenssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-days</span> <span class="token number">3650</span> <span class="token parameter variable">-CA</span> ca.crt <span class="token parameter variable">-CAkey</span> ca.key <span class="token parameter variable">-CAcreateserial</span> <span class="token parameter variable">-in</span> client.csr <span class="token parameter variable">-out</span> client.pem <span class="token parameter variable">-extensions</span> req_ext <span class="token parameter variable">-extfile</span> client.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="1-4-服务端代码改写"><a href="#1-4-服务端代码改写" class="headerlink" title="1.4 服务端代码改写"></a>1.4 服务端代码改写</h3><p>服务端改写，首先拷贝ca.pem、server.key和server.pem到服务端项目中，改写代码：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"crypto/tls"</span><span class="token string">"crypto/x509"</span><span class="token string">"google.golang.org/grpc"</span><span class="token string">"google.golang.org/grpc/credentials"</span><span class="token string">"grpcpro/services"</span><span class="token string">"io/ioutil"</span><span class="token string">"log"</span><span class="token string">"net"</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token punctuation">(</span><span class="token comment">// Address gRPC服务地址</span>Address <span class="token operator">=</span> <span class="token string">"127.0.0.1:8888"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// TLS认证</span><span class="token comment">//从证书相关文件中读取和解析信息，得到证书公钥、密钥对</span>cert<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> tls<span class="token punctuation">.</span><span class="token function">LoadX509KeyPair</span><span class="token punctuation">(</span><span class="token string">"keys/server.pem"</span><span class="token punctuation">,</span> <span class="token string">"keys/server.key"</span><span class="token punctuation">)</span>certPool <span class="token operator">:=</span> x509<span class="token punctuation">.</span><span class="token function">NewCertPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//初始化一个CertPool</span>ca<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span><span class="token string">"keys/ca.pem"</span><span class="token punctuation">)</span>certPool<span class="token punctuation">.</span><span class="token function">AppendCertsFromPEM</span><span class="token punctuation">(</span>ca<span class="token punctuation">)</span> <span class="token comment">//解析传入的证书，解析成功会将其加到池子中</span>creds <span class="token operator">:=</span> credentials<span class="token punctuation">.</span><span class="token function">NewTLS</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>tls<span class="token punctuation">.</span>Config<span class="token punctuation">{</span> <span class="token comment">//构建基于TLS的TransportCredentials选项</span>Certificates<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>tls<span class="token punctuation">.</span>Certificate<span class="token punctuation">{</span>cert<span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token comment">//服务端证书链，可以有多个</span>ClientAuth<span class="token punctuation">:</span>   tls<span class="token punctuation">.</span>RequireAndVerifyClientCert<span class="token punctuation">,</span> <span class="token comment">//要求必须验证客户端证书</span>ClientCAs<span class="token punctuation">:</span>    certPool<span class="token punctuation">,</span>                       <span class="token comment">//设置根证书的集合，校验方式使用 ClientAuth 中设定的模式</span><span class="token punctuation">}</span><span class="token punctuation">)</span>rpcServer <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">NewServer</span><span class="token punctuation">(</span>grpc<span class="token punctuation">.</span><span class="token function">Creds</span><span class="token punctuation">(</span>creds<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//实例化grpc Server</span><span class="token comment">//创建带ca证书验证的服务端</span>services<span class="token punctuation">.</span><span class="token function">RegisterProdServiceServer</span><span class="token punctuation">(</span>rpcServer<span class="token punctuation">,</span> <span class="token function">new</span><span class="token punctuation">(</span>services<span class="token punctuation">.</span>ProdService<span class="token punctuation">)</span><span class="token punctuation">)</span>listen<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Listen</span><span class="token punctuation">(</span><span class="token string">"tcp"</span><span class="token punctuation">,</span> Address<span class="token punctuation">)</span> <span class="token comment">//设置传输协议和监听地址</span>log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Listen on "</span> <span class="token operator">+</span> Address <span class="token operator">+</span> <span class="token string">" with TLS"</span><span class="token punctuation">)</span>rpcServer<span class="token punctuation">.</span><span class="token function">Serve</span><span class="token punctuation">(</span>listen<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-5-客户端代码改写"><a href="#1-5-客户端代码改写" class="headerlink" title="1.5 客户端代码改写"></a>1.5 客户端代码改写</h3><p>客户端改写：同样要拷贝ca.pem、client.key和client.pem到客户端项目中，改写代码：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token punctuation">(</span><span class="token string">"context"</span><span class="token string">"crypto/tls"</span><span class="token string">"crypto/x509"</span><span class="token string">"fmt"</span><span class="token string">"google.golang.org/grpc"</span><span class="token string">"google.golang.org/grpc/credentials"</span><span class="token string">"grpcClient/services"</span><span class="token string">"io/ioutil"</span><span class="token string">"log"</span><span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token punctuation">(</span><span class="token comment">// Address gRPC服务地址</span>Address <span class="token operator">=</span> <span class="token string">"127.0.0.1:8888"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// TLS连接</span><span class="token comment">//从证书相关文件中读取和解析信息，得到证书公钥、密钥对</span>cert<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> tls<span class="token punctuation">.</span><span class="token function">LoadX509KeyPair</span><span class="token punctuation">(</span><span class="token string">"keys/client.pem"</span><span class="token punctuation">,</span> <span class="token string">"keys/client.key"</span><span class="token punctuation">)</span>certPool <span class="token operator">:=</span> x509<span class="token punctuation">.</span><span class="token function">NewCertPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span>ca<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span><span class="token string">"keys/ca.pem"</span><span class="token punctuation">)</span>certPool<span class="token punctuation">.</span><span class="token function">AppendCertsFromPEM</span><span class="token punctuation">(</span>ca<span class="token punctuation">)</span>creds <span class="token operator">:=</span> credentials<span class="token punctuation">.</span><span class="token function">NewTLS</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>tls<span class="token punctuation">.</span>Config<span class="token punctuation">{</span>Certificates<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>tls<span class="token punctuation">.</span>Certificate<span class="token punctuation">{</span>cert<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">//客户端证书</span>ServerName<span class="token punctuation">:</span>   <span class="token string">"www.p-pp.cn"</span><span class="token punctuation">,</span>           <span class="token comment">//注意这里的参数为配置文件中所允许的ServerName，也就是其中配置的DNS...</span>RootCAs<span class="token punctuation">:</span>      certPool<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span>conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span>Address<span class="token punctuation">,</span> grpc<span class="token punctuation">.</span><span class="token function">WithTransportCredentials</span><span class="token punctuation">(</span>creds<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//连接服务端</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">defer</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>prodClient <span class="token operator">:=</span> services<span class="token punctuation">.</span><span class="token function">NewProdServiceClient</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span>                                                <span class="token comment">//初始化客户端</span>prodRes<span class="token punctuation">,</span> err <span class="token operator">:=</span> prodClient<span class="token punctuation">.</span><span class="token function">GetProdStock</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>services<span class="token punctuation">.</span>ProdRequest<span class="token punctuation">{</span>ProdId<span class="token punctuation">:</span> <span class="token number">12</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">//调用方法</span><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">}</span>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"grpcClient getProdStock is %d\n"</span><span class="token punctuation">,</span> prodRes<span class="token punctuation">.</span>ProdStock<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-6-双向认证成功"><a href="#1-6-双向认证成功" class="headerlink" title="1.6 双向认证成功"></a>1.6 双向认证成功</h3><p>启动两个服务之后客户端就能使用服务端的服务了。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/12993007/1672903044229-edd8c492-2f47-42eb-81d4-453d29b8a0ec.png#averageHue=%23262d33&amp;clientId=ue9231923-8cb9-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;id=u53feb24a&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=109&amp;originWidth=673&amp;originalType=url&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=80996&amp;status=done&amp;style=none&amp;taskId=u9b6ce115-37b0-49e1-a7d2-8fd047eb139&amp;title=" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> grpc </tag>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>helm 使用</title>
      <link href="/kubernetes/helm.html"/>
      <url>/kubernetes/helm.html</url>
      
        <content type="html"><![CDATA[<h1 id="Helm是什么"><a href="#Helm是什么" class="headerlink" title="Helm是什么"></a>Helm是什么</h1><p>没有使用Helm之前，在Kubernetes部署应用，我们要依次部署deployment、service等，步骤比较繁琐。况且随着很多项目微服务化，复杂的应用在容器中部署以及管理显得较为复杂。<br>helm通过打包的方式，支持发布的版本管理和控制，很大程度上简化了Kubernetes应用的部署和管理。<br>Helm本质就是让k8s的应用管理（Deployment、Service等）可配置，能动态生成。通过动态生成K8S资源清单文件（deployment.yaml、service.yaml）。然后kubectl自动调用K8S资源部署。<br>Helm是官方提供类似于YUM的包管理，是部署环境的流程封装，Helm有三个重要的概念：chart、release和Repository</p><ul><li><strong>chart</strong>是创建一个应用的信息集合，包括各种Kubernetes对象的配置模板、参数定义、依赖关系、文档说明等。可以将chart想象成apt、yum中的软件安装包。</li><li><strong>release</strong>是chart的运行实例，代表一个正在运行的应用。当chart被安装到Kubernetes集群，就生成一个release。chart能多次安装到同一个集群，每次安装都是一个release【根据chart赋值不同，完全可以部署出多个release出来】。</li><li><strong>Repository</strong>用于发布和存储 Chart 的存储库。</li></ul><p>Helm包含两个组件：Helm客户端和Tiller服务端，如下图所示：</p><p> <img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1637200168556-6019a371-dafa-4b6a-a3a9-bfbf682b4088.png#clientId=u3c4056cd-8a23-4&amp;from=paste&amp;id=u4c4d8ae3&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=309&amp;originWidth=845&amp;originalType=url&amp;ratio=1&amp;size=71824&amp;status=done&amp;style=none&amp;taskId=u1f2ea02d-ed2f-4a34-b45a-dcc30028052" alt="image.png"></p><h1 id="Helm安装"><a href="#Helm安装" class="headerlink" title="Helm安装"></a>Helm安装</h1><h3 id="1-用二进制版本安装"><a href="#1-用二进制版本安装" class="headerlink" title="1.用二进制版本安装"></a>1.用二进制版本安装</h3><p>每个Helm <a href="https://github.com/helm/helm/releases">版本</a>都提供了各种操作系统的二进制版本，这些版本可以手动下载和安装。</p><ol><li>下载 <a href="https://github.com/helm/helm/releases">需要的版本</a></li><li>解压(tar -zxvf helm-v3.0.0-linux-amd64.tar.gz)</li><li>在解压目中找到helm程序，移动到需要的目录中(mv linux-amd64/helm /usr/local/bin/helm)</li></ol><p>然后就可以执行客户端程序并 <a href="https://helm.sh/zh/docs/intro/quickstart/#%e5%88%9d%e5%a7%8b%e5%8c%96">添加稳定仓库</a>: helm help.</p><h3 id="2-使用脚本安装"><a href="#2-使用脚本安装" class="headerlink" title="2.使用脚本安装"></a>2.使用脚本安装</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> <span class="token parameter variable">-o</span> get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3<span class="token function">chmod</span> <span class="token number">700</span> get_helm.sh./get_helm.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="3-启动服务并开启chart支持"><a href="#3-启动服务并开启chart支持" class="headerlink" title="3.启动服务并开启chart支持"></a>3.启动服务并开启chart支持</h3><blockquote><p>1.参考地址：<a href="https://blog.csdn.net/submarineas/article/details/112788040">https://blog.csdn.net/submarineas/article/details/112788040</a> 开启https、设置证书位置<br>2.生成证书：<br>openssl genrsa -out ca.key 4096</p></blockquote><blockquote><p>openssl req -x509 -new -nodes -sha512 -days 3650 <br>    -subj “/C=CN/ST=Beijing/L=Beijing/O=chinatelecom/OU=ecloudcaas/CN=192.168.56.11” <br>    -key ca.key <br>    -out ca.crt</p><p>openssl genrsa -out 192.168.56.11.key 4096</p><p>openssl req -sha512 -new <br>    -subj “/C=CN/ST=Beijing/L=Beijing/O=chinatelecom/OU=ecloudcaas/CN=192.168.56.11” <br>    -key 192.168.56.11.key <br>    -out 192.168.56.11.csr </p><p>openssl x509 -req -sha512 -days 3650 <br>    -extfile v3.ext <br>    -CA ca.crt -CAkey ca.key -CAcreateserial <br>    -in 192.168.56.11.csr <br>    -out 192.168.56.11.crt</p><p>openssl x509 -inform PEM -in 192.168.56.11.crt -out 192.168.56.11.cert</p><p>cp 192.168.56.11.cert /etc/docker/cert/192.168.56.11/<br>cp 192.168.56.11.key /etc/docker/cert/192.168.56.11/<br>cp ca.crt /etc/docker/cert/192.168.56.11/</p><p>3.启动服务加上后缀<br>./install.sh –with-notary –with-clair –with-chartmuseum<br>4.添加repo<br>helm repo add –ca-file /etc/docker/certs.d/ca.crt –username admin –password harbor myrepo <a href="https://192.168.56.11/chartrepo/demo">https://192.168.56.11/chartrepo/demo</a></p></blockquote><h1 id="Helm使用"><a href="#Helm使用" class="headerlink" title="Helm使用"></a>Helm使用</h1><h2 id="1-常用命令"><a href="#1-常用命令" class="headerlink" title="1.常用命令"></a>1.常用命令</h2><h3 id="char-管理"><a href="#char-管理" class="headerlink" title="char 管理"></a>char 管理</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span> create：根据给定的name创建一个新chart<span class="token number">2</span> fetch：从仓库下载chart，并<span class="token punctuation">(</span>可选项<span class="token punctuation">)</span>将其解压缩到本地目录中<span class="token number">3</span> inspect：chart详情<span class="token number">4</span> helm package <span class="token punctuation">[</span>CHART_PATH<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">..</span>.<span class="token punctuation">]</span> <span class="token punctuation">[</span>flags<span class="token punctuation">]</span>  ：打包chart目录到一个chart归档<span class="token number">5</span> lint：语法检测<span class="token number">6</span> verify：验证位于给定路径的chart已被签名且有效<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="release-管理"><a href="#release-管理" class="headerlink" title="release 管理"></a>release 管理</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span> get：下载一个release<span class="token number">2</span> delete：根据给定的release name，从Kubernetes中删除指定的release<span class="token number">3</span> install：安装一个chart<span class="token number">4</span> list：显示release列表  <span class="token number">5</span> upgrade：升级release  helm upgrade mytest-app01 <span class="token builtin class-name">.</span><span class="token number">6</span> rollback：回滚release到之前的一个版本  helm rollback <span class="token operator">&lt;</span>RELEASE<span class="token operator">&gt;</span> <span class="token punctuation">[</span>REVISION<span class="token punctuation">]</span> <span class="token punctuation">[</span>flags<span class="token punctuation">]</span><span class="token number">7</span> status：显示release状态信息<span class="token number">8</span> history：Fetch release历史信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="helm常见操作"><a href="#helm常见操作" class="headerlink" title="helm常见操作"></a>helm常见操作</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 添加仓库</span>helm repo <span class="token function">add</span> elastic https://helm.elastic.co<span class="token comment">#查看helm仓库列表</span>helm repo list<span class="token comment"># 创建chart【可供参考，一般都是自己手动创建chart】</span>helm create CHART_PATH<span class="token comment"># 根据指定chart部署一个release</span>helm <span class="token function">install</span> <span class="token parameter variable">--name</span> RELEASE_NAME CHART_PATH<span class="token comment"># 根据指定chart模拟安装一个release，并打印处debug信息</span>helm <span class="token function">install</span> --dry-run <span class="token parameter variable">--debug</span> <span class="token parameter variable">--name</span> RELEASE_NAME CHART_PATH<span class="token comment"># 列出已经部署的release</span>helm list<span class="token comment"># 列出所有的release</span>helm list <span class="token parameter variable">--all</span><span class="token comment"># 查询指定release的状态</span>helm status Release_NAME<span class="token comment"># 回滚到指定版本的release，这里指定的helm release版本</span>helm rollback Release_NAME REVISION_NUM<span class="token comment"># 查看指定release的历史信息</span>helm <span class="token function">history</span> Release_NAME<span class="token comment"># 对指定chart打包</span>helm package CHART_PATH    如：helm package my-test-app/<span class="token comment"># 对指定chart进行语法检测</span>helm lint CHART_PATH<span class="token comment"># 查看指定chart详情</span>helm inspect CHART_PATH<span class="token comment"># 从Kubernetes中删除指定release相关的资源【helm list --all 中仍然可见release记录信息】</span>helm delete RELEASE_NAME<span class="token comment"># 从Kubernetes中删除指定release相关的资源，并删除release记录</span>helm delete <span class="token parameter variable">--purge</span> RELEASE_NAME<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master my-test-app<span class="token punctuation">]</span><span class="token comment"># tree</span><span class="token builtin class-name">.</span>├── Chart.yaml├── my-app-chart-0.1.0.tgz├── templates│   ├── deployment.yaml│   └── service.yaml└── values.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Chart-yaml"><a href="#Chart-yaml" class="headerlink" title="Chart.yaml"></a>Chart.yaml</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>master my<span class="token punctuation">-</span>test<span class="token punctuation">-</span>app<span class="token punctuation">]</span><span class="token comment"># cat Chart.yaml </span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">appVersion</span><span class="token punctuation">:</span> v2.2<span class="token key atrule">version</span><span class="token punctuation">:</span> 0.1.0<span class="token key atrule">name</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>app<span class="token punctuation">-</span>chart<span class="token key atrule">description</span><span class="token punctuation">:</span> my test app<span class="token key atrule">keywords</span><span class="token punctuation">:</span><span class="token punctuation">-</span> myapp<span class="token key atrule">maintainers</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">email</span><span class="token punctuation">:</span> zhang@test.com  <span class="token key atrule">name</span><span class="token punctuation">:</span> zhang<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="values-yaml"><a href="#values-yaml" class="headerlink" title="values.yaml"></a>values.yaml</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>master my<span class="token punctuation">-</span>test<span class="token punctuation">-</span>app<span class="token punctuation">]</span><span class="token comment"># cat values.yaml </span><span class="token key atrule">deployname</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>test<span class="token punctuation">-</span>app02<span class="token key atrule">replicaCount</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token key atrule">images</span><span class="token punctuation">:</span>  <span class="token key atrule">repository</span><span class="token punctuation">:</span> registry.cn<span class="token punctuation">-</span>beijing.aliyuncs.com/google_registry/myapp  <span class="token key atrule">tag</span><span class="token punctuation">:</span> v3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="templates"><a href="#templates" class="headerlink" title="templates"></a>templates</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>master templates<span class="token punctuation">]</span><span class="token comment"># cat deployment.yaml </span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> .Values.deployname <span class="token punctuation">}</span><span class="token punctuation">}</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> mytestapp<span class="token punctuation">-</span>deploy<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> .Values.replicaCount <span class="token punctuation">}</span><span class="token punctuation">}</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> mytestapp      <span class="token key atrule">env</span><span class="token punctuation">:</span> test  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> mytestapp        <span class="token key atrule">env</span><span class="token punctuation">:</span> test        <span class="token key atrule">description</span><span class="token punctuation">:</span> mytest    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> myapp<span class="token punctuation">-</span>pod        <span class="token key atrule">image</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> .Values.images.repository <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token punctuation">{</span> .Values.images.tag <span class="token punctuation">}</span><span class="token punctuation">}</span>        <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent        <span class="token key atrule">ports</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>test<span class="token punctuation">-</span>app  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> NodePort  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> mytestapp    <span class="token key atrule">env</span><span class="token punctuation">:</span> test  <span class="token key atrule">ports</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> http    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span>    <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">80</span>    <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="上传chart包"><a href="#上传chart包" class="headerlink" title="上传chart包"></a>上传chart包</h3><blockquote><p>curl –request POST      –form chart=@<code>cat tgz.txt</code>      –user admin:harbor      <a href="https://192.168.56.11/api/chartrepo/demo/charts">https://192.168.56.11/api/chartrepo/demo/charts</a>  –cacert /etc/docker/certs.d/ca.crt</p></blockquote><h3 id="下载chart包，并进行部署"><a href="#下载chart包，并进行部署" class="headerlink" title="下载chart包，并进行部署"></a>下载chart包，并进行部署</h3><blockquote><p>安装<br>helm install myapp  myrepo/${CHART_NAME} –version ${CHART_VERSION}.$BUILD_NUMBER -f ../helmValue/dev.yaml</p><p>更新<br>helm upgrade myapp  myrepo/${CHART_NAME} –version ${CHART_VERSION}.$BUILD_NUMBER -f ../helmValue/dev.yaml</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ingress 使用</title>
      <link href="/kubernetes/ingress-wang-guan.html"/>
      <url>/kubernetes/ingress-wang-guan.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1636942313976-1d7d8c2d-1572-4d77-8c72-cf922f22632a.png#clientId=u668757c7-66ce-4&amp;from=paste&amp;height=702&amp;id=u7c561c92&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=702&amp;originWidth=835&amp;originalType=binary&amp;ratio=1&amp;size=213649&amp;status=done&amp;style=none&amp;taskId=uf62a847f-7f95-4d73-b15c-845e0c50dd1&amp;width=835" alt="image.png"></p><h2 id="官方文档地址："><a href="#官方文档地址：" class="headerlink" title="官方文档地址："></a>官方文档地址：</h2><p><a href="https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class">https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzI0MDQ4MTM5NQ==&amp;mid=2247512338&amp;idx=3&amp;sn=21ea67d53e7ae9409606df0933aeb917&amp;chksm=e918d40ede6f5d1894c00c2d7a1de2933e66ffc8b4337f06f375d5ff4059d921a13417862ea7&amp;scene=178&amp;cur_album_id=1790241575034290179#rd">https://mp.weixin.qq.com/s?__biz=MzI0MDQ4MTM5NQ==&amp;mid=2247512338&amp;idx=3&amp;sn=21ea67d53e7ae9409606df0933aeb917&amp;chksm=e918d40ede6f5d1894c00c2d7a1de2933e66ffc8b4337f06f375d5ff4059d921a13417862ea7&amp;scene=178&amp;cur_album_id=1790241575034290179#rd</a></p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>必须先具有<a href="https://kubernetes.io/zh/docs/concepts/services-networking/ingress-controllers">Ingress 控制器</a>才可以使用，参考配置 </p><h4 id="1-参考配置-1-22版本"><a href="#1-参考配置-1-22版本" class="headerlink" title="1.参考配置(1.22版本)"></a>1.参考配置(1.22版本)</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Namespace<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx <span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/controller-serviceaccount.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> controller  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token key atrule">automountServiceAccountToken</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/controller-configmap.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> controller  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>controller  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token key atrule">data</span><span class="token punctuation">:</span><span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/clusterrole.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">''</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> configmaps      <span class="token punctuation">-</span> endpoints      <span class="token punctuation">-</span> nodes      <span class="token punctuation">-</span> pods      <span class="token punctuation">-</span> secrets    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> list      <span class="token punctuation">-</span> watch  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">''</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> nodes    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> get  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">''</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> services    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> get      <span class="token punctuation">-</span> list      <span class="token punctuation">-</span> watch  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> networking.k8s.io    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ingresses    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> get      <span class="token punctuation">-</span> list      <span class="token punctuation">-</span> watch  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">''</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> events    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> create      <span class="token punctuation">-</span> patch  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> networking.k8s.io    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ingresses/status    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> update  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> networking.k8s.io    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ingressclasses    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> get      <span class="token punctuation">-</span> list      <span class="token punctuation">-</span> watch<span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/clusterrolebinding.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRoleBinding<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io  <span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token key atrule">subjects</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount    <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/controller-role.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Role<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> controller  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">''</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> namespaces    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> get  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">''</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> configmaps      <span class="token punctuation">-</span> pods      <span class="token punctuation">-</span> secrets      <span class="token punctuation">-</span> endpoints    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> get      <span class="token punctuation">-</span> list      <span class="token punctuation">-</span> watch  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">''</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> services    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> get      <span class="token punctuation">-</span> list      <span class="token punctuation">-</span> watch  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> networking.k8s.io    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ingresses    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> get      <span class="token punctuation">-</span> list      <span class="token punctuation">-</span> watch  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> networking.k8s.io    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ingresses/status    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> update  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> networking.k8s.io    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ingressclasses    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> get      <span class="token punctuation">-</span> list      <span class="token punctuation">-</span> watch  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">''</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> configmaps    <span class="token key atrule">resourceNames</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ingress<span class="token punctuation">-</span>controller<span class="token punctuation">-</span>leader    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> get      <span class="token punctuation">-</span> update  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">''</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> configmaps    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> create  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">''</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> events    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> create      <span class="token punctuation">-</span> patch<span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/controller-rolebinding.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> RoleBinding<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> controller  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io  <span class="token key atrule">kind</span><span class="token punctuation">:</span> Role  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token key atrule">subjects</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount    <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/controller-service-webhook.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> controller  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>controller<span class="token punctuation">-</span>admission  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> ClusterIP  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> https<span class="token punctuation">-</span>webhook      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">443</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> webhook      <span class="token key atrule">appProtocol</span><span class="token punctuation">:</span> https  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> controller<span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/controller-deployment.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> DaemonSet<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> controller  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>controller  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx      <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx      <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> controller  <span class="token key atrule">revisionHistoryLimit</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">minReadySeconds</span><span class="token punctuation">:</span> <span class="token number">0</span>  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx        <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx        <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> controller    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">hostNetwork</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>      <span class="token key atrule">dnsPolicy</span><span class="token punctuation">:</span> ClusterFirst      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> controller          <span class="token key atrule">image</span><span class="token punctuation">:</span> registry.cn<span class="token punctuation">-</span>beijing.aliyuncs.com/kole_chang/controller<span class="token punctuation">:</span>v1.0.0          <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent          <span class="token key atrule">lifecycle</span><span class="token punctuation">:</span>            <span class="token key atrule">preStop</span><span class="token punctuation">:</span>              <span class="token key atrule">exec</span><span class="token punctuation">:</span>                <span class="token key atrule">command</span><span class="token punctuation">:</span>                  <span class="token punctuation">-</span> /wait<span class="token punctuation">-</span>shutdown          <span class="token key atrule">args</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> /nginx<span class="token punctuation">-</span>ingress<span class="token punctuation">-</span>controller            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>election<span class="token punctuation">-</span>id=ingress<span class="token punctuation">-</span>controller<span class="token punctuation">-</span>leader            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>controller<span class="token punctuation">-</span>class=k8s.io/ingress<span class="token punctuation">-</span>nginx            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>configmap=$(POD_NAMESPACE)/ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>controller            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>validating<span class="token punctuation">-</span>webhook=<span class="token punctuation">:</span><span class="token number">8443</span>            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>validating<span class="token punctuation">-</span>webhook<span class="token punctuation">-</span>certificate=/usr/local/certificates/cert            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>validating<span class="token punctuation">-</span>webhook<span class="token punctuation">-</span>key=/usr/local/certificates/key            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>watch<span class="token punctuation">-</span>ingress<span class="token punctuation">-</span>without<span class="token punctuation">-</span>class=true          <span class="token key atrule">securityContext</span><span class="token punctuation">:</span>            <span class="token key atrule">capabilities</span><span class="token punctuation">:</span>              <span class="token key atrule">drop</span><span class="token punctuation">:</span>                <span class="token punctuation">-</span> ALL              <span class="token key atrule">add</span><span class="token punctuation">:</span>                <span class="token punctuation">-</span> NET_BIND_SERVICE            <span class="token key atrule">runAsUser</span><span class="token punctuation">:</span> <span class="token number">101</span>            <span class="token key atrule">allowPrivilegeEscalation</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>          <span class="token key atrule">env</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> POD_NAME              <span class="token key atrule">valueFrom</span><span class="token punctuation">:</span>                <span class="token key atrule">fieldRef</span><span class="token punctuation">:</span>                  <span class="token key atrule">fieldPath</span><span class="token punctuation">:</span> metadata.name            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> POD_NAMESPACE              <span class="token key atrule">valueFrom</span><span class="token punctuation">:</span>                <span class="token key atrule">fieldRef</span><span class="token punctuation">:</span>                  <span class="token key atrule">fieldPath</span><span class="token punctuation">:</span> metadata.namespace            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> LD_PRELOAD              <span class="token key atrule">value</span><span class="token punctuation">:</span> /usr/local/lib/libmimalloc.so          <span class="token key atrule">livenessProbe</span><span class="token punctuation">:</span>            <span class="token key atrule">failureThreshold</span><span class="token punctuation">:</span> <span class="token number">5</span>            <span class="token key atrule">httpGet</span><span class="token punctuation">:</span>              <span class="token key atrule">path</span><span class="token punctuation">:</span> /healthz              <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">10254</span>              <span class="token key atrule">scheme</span><span class="token punctuation">:</span> HTTP            <span class="token key atrule">initialDelaySeconds</span><span class="token punctuation">:</span> <span class="token number">10</span>            <span class="token key atrule">periodSeconds</span><span class="token punctuation">:</span> <span class="token number">10</span>            <span class="token key atrule">successThreshold</span><span class="token punctuation">:</span> <span class="token number">1</span>            <span class="token key atrule">timeoutSeconds</span><span class="token punctuation">:</span> <span class="token number">1</span>          <span class="token key atrule">readinessProbe</span><span class="token punctuation">:</span>            <span class="token key atrule">failureThreshold</span><span class="token punctuation">:</span> <span class="token number">3</span>            <span class="token key atrule">httpGet</span><span class="token punctuation">:</span>              <span class="token key atrule">path</span><span class="token punctuation">:</span> /healthz              <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">10254</span>              <span class="token key atrule">scheme</span><span class="token punctuation">:</span> HTTP            <span class="token key atrule">initialDelaySeconds</span><span class="token punctuation">:</span> <span class="token number">10</span>            <span class="token key atrule">periodSeconds</span><span class="token punctuation">:</span> <span class="token number">10</span>            <span class="token key atrule">successThreshold</span><span class="token punctuation">:</span> <span class="token number">1</span>            <span class="token key atrule">timeoutSeconds</span><span class="token punctuation">:</span> <span class="token number">1</span>          <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> http              <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> https              <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">443</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> webhook              <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">8443</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP          <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> webhook<span class="token punctuation">-</span>cert              <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /usr/local/certificates/              <span class="token key atrule">readOnly</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>          <span class="token key atrule">resources</span><span class="token punctuation">:</span>            <span class="token key atrule">requests</span><span class="token punctuation">:</span>              <span class="token key atrule">cpu</span><span class="token punctuation">:</span> 100m              <span class="token key atrule">memory</span><span class="token punctuation">:</span> 90Mi      <span class="token key atrule">nodeSelector</span><span class="token punctuation">:</span>        <span class="token key atrule">kubernetes.io/os</span><span class="token punctuation">:</span> linux      <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx      <span class="token key atrule">terminationGracePeriodSeconds</span><span class="token punctuation">:</span> <span class="token number">300</span>      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> webhook<span class="token punctuation">-</span>cert          <span class="token key atrule">secret</span><span class="token punctuation">:</span>            <span class="token key atrule">secretName</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission<span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/controller-ingressclass.yaml</span><span class="token comment"># We don't support namespaced ingressClass yet</span><span class="token comment"># So a ClusterRole and a ClusterRoleBinding is required</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> IngressClass<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> controller  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">controller</span><span class="token punctuation">:</span> k8s.io/ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/admission-webhooks/validating-webhook.yaml</span><span class="token comment"># before changing this value, check the required kubernetes version</span><span class="token comment"># https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#prerequisites</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> admissionregistration.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ValidatingWebhookConfiguration<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> admission<span class="token punctuation">-</span>webhook  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission<span class="token key atrule">webhooks</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> validate.nginx.ingress.kubernetes.io    <span class="token key atrule">matchPolicy</span><span class="token punctuation">:</span> Equivalent    <span class="token key atrule">rules</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> networking.k8s.io        <span class="token key atrule">apiVersions</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> v1        <span class="token key atrule">operations</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> CREATE          <span class="token punctuation">-</span> UPDATE        <span class="token key atrule">resources</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> ingresses    <span class="token key atrule">failurePolicy</span><span class="token punctuation">:</span> Fail    <span class="token key atrule">sideEffects</span><span class="token punctuation">:</span> None    <span class="token key atrule">admissionReviewVersions</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> v1    <span class="token key atrule">clientConfig</span><span class="token punctuation">:</span>      <span class="token key atrule">service</span><span class="token punctuation">:</span>        <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx        <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>controller<span class="token punctuation">-</span>admission        <span class="token key atrule">path</span><span class="token punctuation">:</span> /networking/v1/ingresses<span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/admission-webhooks/job-patch/serviceaccount.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/hook</span><span class="token punctuation">:</span> pre<span class="token punctuation">-</span>install<span class="token punctuation">,</span>pre<span class="token punctuation">-</span>upgrade<span class="token punctuation">,</span>post<span class="token punctuation">-</span>install<span class="token punctuation">,</span>post<span class="token punctuation">-</span>upgrade    <span class="token key atrule">helm.sh/hook-delete-policy</span><span class="token punctuation">:</span> before<span class="token punctuation">-</span>hook<span class="token punctuation">-</span>creation<span class="token punctuation">,</span>hook<span class="token punctuation">-</span>succeeded  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> admission<span class="token punctuation">-</span>webhook<span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/admission-webhooks/job-patch/clusterrole.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/hook</span><span class="token punctuation">:</span> pre<span class="token punctuation">-</span>install<span class="token punctuation">,</span>pre<span class="token punctuation">-</span>upgrade<span class="token punctuation">,</span>post<span class="token punctuation">-</span>install<span class="token punctuation">,</span>post<span class="token punctuation">-</span>upgrade    <span class="token key atrule">helm.sh/hook-delete-policy</span><span class="token punctuation">:</span> before<span class="token punctuation">-</span>hook<span class="token punctuation">-</span>creation<span class="token punctuation">,</span>hook<span class="token punctuation">-</span>succeeded  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> admission<span class="token punctuation">-</span>webhook<span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> admissionregistration.k8s.io    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> validatingwebhookconfigurations    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> get      <span class="token punctuation">-</span> update<span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/admission-webhooks/job-patch/clusterrolebinding.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRoleBinding<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/hook</span><span class="token punctuation">:</span> pre<span class="token punctuation">-</span>install<span class="token punctuation">,</span>pre<span class="token punctuation">-</span>upgrade<span class="token punctuation">,</span>post<span class="token punctuation">-</span>install<span class="token punctuation">,</span>post<span class="token punctuation">-</span>upgrade    <span class="token key atrule">helm.sh/hook-delete-policy</span><span class="token punctuation">:</span> before<span class="token punctuation">-</span>hook<span class="token punctuation">-</span>creation<span class="token punctuation">,</span>hook<span class="token punctuation">-</span>succeeded  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> admission<span class="token punctuation">-</span>webhook<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io  <span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission<span class="token key atrule">subjects</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount    <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/admission-webhooks/job-patch/role.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Role<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/hook</span><span class="token punctuation">:</span> pre<span class="token punctuation">-</span>install<span class="token punctuation">,</span>pre<span class="token punctuation">-</span>upgrade<span class="token punctuation">,</span>post<span class="token punctuation">-</span>install<span class="token punctuation">,</span>post<span class="token punctuation">-</span>upgrade    <span class="token key atrule">helm.sh/hook-delete-policy</span><span class="token punctuation">:</span> before<span class="token punctuation">-</span>hook<span class="token punctuation">-</span>creation<span class="token punctuation">,</span>hook<span class="token punctuation">-</span>succeeded  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> admission<span class="token punctuation">-</span>webhook<span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">''</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> secrets    <span class="token key atrule">verbs</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> get      <span class="token punctuation">-</span> create<span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/admission-webhooks/job-patch/rolebinding.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> RoleBinding<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/hook</span><span class="token punctuation">:</span> pre<span class="token punctuation">-</span>install<span class="token punctuation">,</span>pre<span class="token punctuation">-</span>upgrade<span class="token punctuation">,</span>post<span class="token punctuation">-</span>install<span class="token punctuation">,</span>post<span class="token punctuation">-</span>upgrade    <span class="token key atrule">helm.sh/hook-delete-policy</span><span class="token punctuation">:</span> before<span class="token punctuation">-</span>hook<span class="token punctuation">-</span>creation<span class="token punctuation">,</span>hook<span class="token punctuation">-</span>succeeded  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> admission<span class="token punctuation">-</span>webhook<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io  <span class="token key atrule">kind</span><span class="token punctuation">:</span> Role  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission<span class="token key atrule">subjects</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount    <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/admission-webhooks/job-patch/job-createSecret.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> batch/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Job<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission<span class="token punctuation">-</span>create  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/hook</span><span class="token punctuation">:</span> pre<span class="token punctuation">-</span>install<span class="token punctuation">,</span>pre<span class="token punctuation">-</span>upgrade    <span class="token key atrule">helm.sh/hook-delete-policy</span><span class="token punctuation">:</span> before<span class="token punctuation">-</span>hook<span class="token punctuation">-</span>creation<span class="token punctuation">,</span>hook<span class="token punctuation">-</span>succeeded  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> admission<span class="token punctuation">-</span>webhook<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission<span class="token punctuation">-</span>create      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1        <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx        <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx        <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0        <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm        <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> admission<span class="token punctuation">-</span>webhook    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> create          <span class="token key atrule">image</span><span class="token punctuation">:</span> registry.cn<span class="token punctuation">-</span>beijing.aliyuncs.com/kole_chang/kube<span class="token punctuation">-</span>webhook<span class="token punctuation">-</span>certgen<span class="token punctuation">:</span>v1.0          <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent          <span class="token key atrule">args</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> create            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>host=ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>controller<span class="token punctuation">-</span>admission<span class="token punctuation">,</span>ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>controller<span class="token punctuation">-</span>admission.$(POD_NAMESPACE).svc            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>namespace=$(POD_NAMESPACE)            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>secret<span class="token punctuation">-</span>name=ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission          <span class="token key atrule">env</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> POD_NAMESPACE              <span class="token key atrule">valueFrom</span><span class="token punctuation">:</span>                <span class="token key atrule">fieldRef</span><span class="token punctuation">:</span>                  <span class="token key atrule">fieldPath</span><span class="token punctuation">:</span> metadata.namespace      <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> OnFailure      <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission      <span class="token key atrule">nodeSelector</span><span class="token punctuation">:</span>        <span class="token key atrule">kubernetes.io/os</span><span class="token punctuation">:</span> linux      <span class="token key atrule">securityContext</span><span class="token punctuation">:</span>        <span class="token key atrule">runAsNonRoot</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>        <span class="token key atrule">runAsUser</span><span class="token punctuation">:</span> <span class="token number">2000</span><span class="token punctuation">---</span><span class="token comment"># Source: ingress-nginx/templates/admission-webhooks/job-patch/job-patchWebhook.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> batch/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Job<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission<span class="token punctuation">-</span>patch  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/hook</span><span class="token punctuation">:</span> post<span class="token punctuation">-</span>install<span class="token punctuation">,</span>post<span class="token punctuation">-</span>upgrade    <span class="token key atrule">helm.sh/hook-delete-policy</span><span class="token punctuation">:</span> before<span class="token punctuation">-</span>hook<span class="token punctuation">-</span>creation<span class="token punctuation">,</span>hook<span class="token punctuation">-</span>succeeded  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx    <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0    <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm    <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> admission<span class="token punctuation">-</span>webhook<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission<span class="token punctuation">-</span>patch      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">helm.sh/chart</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>4.0.1        <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx        <span class="token key atrule">app.kubernetes.io/instance</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx        <span class="token key atrule">app.kubernetes.io/version</span><span class="token punctuation">:</span> 1.0.0        <span class="token key atrule">app.kubernetes.io/managed-by</span><span class="token punctuation">:</span> Helm        <span class="token key atrule">app.kubernetes.io/component</span><span class="token punctuation">:</span> admission<span class="token punctuation">-</span>webhook    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> patch          <span class="token key atrule">image</span><span class="token punctuation">:</span> registry.cn<span class="token punctuation">-</span>beijing.aliyuncs.com/kole_chang/kube<span class="token punctuation">-</span>webhook<span class="token punctuation">-</span>certgen<span class="token punctuation">:</span>v1.0          <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent          <span class="token key atrule">args</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> patch            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>webhook<span class="token punctuation">-</span>name=ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>namespace=$(POD_NAMESPACE)            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>patch<span class="token punctuation">-</span>mutating=false            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>secret<span class="token punctuation">-</span>name=ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>patch<span class="token punctuation">-</span>failure<span class="token punctuation">-</span>policy=Fail          <span class="token key atrule">env</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> POD_NAMESPACE              <span class="token key atrule">valueFrom</span><span class="token punctuation">:</span>                <span class="token key atrule">fieldRef</span><span class="token punctuation">:</span>                  <span class="token key atrule">fieldPath</span><span class="token punctuation">:</span> metadata.namespace      <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> OnFailure      <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>admission      <span class="token key atrule">nodeSelector</span><span class="token punctuation">:</span>        <span class="token key atrule">kubernetes.io/os</span><span class="token punctuation">:</span> linux      <span class="token key atrule">securityContext</span><span class="token punctuation">:</span>        <span class="token key atrule">runAsNonRoot</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>        <span class="token key atrule">runAsUser</span><span class="token punctuation">:</span> <span class="token number">2000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-暴露ingress服务端口"><a href="#2-暴露ingress服务端口" class="headerlink" title="2.暴露ingress服务端口"></a>2.暴露ingress服务端口</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> NodePort  <span class="token key atrule">ports</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> http    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span>    <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">80</span>    <span class="token key atrule">nodePort</span><span class="token punctuation">:</span> <span class="token number">30080</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> https    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">443</span>    <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">443</span>    <span class="token key atrule">nodePort</span><span class="token punctuation">:</span> <span class="token number">30443</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Ingress转发基本配置"><a href="#Ingress转发基本配置" class="headerlink" title="Ingress转发基本配置"></a>Ingress转发基本配置</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment">#1.22版本只能使用networking.k8s.io/v1,1.19到1.21可以使用v1beta1、v1</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.k8s.io/v1 <span class="token key atrule">kind</span><span class="token punctuation">:</span> Ingress<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">kubernetes.io/ingress.class</span><span class="token punctuation">:</span> nginx<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> nginx.text.cn     <span class="token key atrule">http</span><span class="token punctuation">:</span>      <span class="token key atrule">paths</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">pathType</span><span class="token punctuation">:</span> Prefix <span class="token comment"># 类型为前缀 三种类型：Prefix Exact ImplementationSpecific 参考Path types</span>        <span class="token key atrule">path</span><span class="token punctuation">:</span> /foo        <span class="token key atrule">backend</span><span class="token punctuation">:</span>          <span class="token key atrule">service</span><span class="token punctuation">:</span>            <span class="token key atrule">name</span><span class="token punctuation">:</span> foo            <span class="token key atrule">port</span><span class="token punctuation">:</span>              <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token number">80</span>      <span class="token punctuation">-</span> <span class="token key atrule">pathType</span><span class="token punctuation">:</span> Prefix        <span class="token key atrule">path</span><span class="token punctuation">:</span> /bar        <span class="token key atrule">backend</span><span class="token punctuation">:</span>          <span class="token key atrule">service</span><span class="token punctuation">:</span>            <span class="token key atrule">name</span><span class="token punctuation">:</span> bar            <span class="token key atrule">port</span><span class="token punctuation">:</span>              <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token number">80</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Ingress-HTTP-访问"><a href="#Ingress-HTTP-访问" class="headerlink" title="Ingress HTTP 访问"></a>Ingress HTTP 访问</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 访问地址：http://foo.bar.com:30080/php</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Ingress<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ing<span class="token punctuation">-</span>php  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">kubernetes.io/ingress.class</span><span class="token punctuation">:</span> <span class="token string">"nginx"</span> <span class="token comment">##指定Ingress Controller的类型</span>    <span class="token key atrule">nginx.ingress.kubernetes.io/rewrite-target</span><span class="token punctuation">:</span>  /<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> foo.bar.com    <span class="token key atrule">http</span><span class="token punctuation">:</span>      <span class="token key atrule">paths</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">path</span><span class="token punctuation">:</span> /php        <span class="token key atrule">pathType</span><span class="token punctuation">:</span> Prefix        <span class="token key atrule">backend</span><span class="token punctuation">:</span>          <span class="token key atrule">service</span><span class="token punctuation">:</span>            <span class="token key atrule">name</span><span class="token punctuation">:</span> php<span class="token punctuation">-</span>apache            <span class="token key atrule">port</span><span class="token punctuation">:</span>              <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token number">80</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>[</p><p>](<a href="http://foo.bar.com:30080/php">http://foo.bar.com:30080/php</a>)</p><h2 id="升级https访问"><a href="#升级https访问" class="headerlink" title="升级https访问"></a>升级https访问</h2><h4 id="1-制作证书"><a href="#1-制作证书" class="headerlink" title="1.制作证书"></a>1.制作证书</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">openssl genrsa <span class="token parameter variable">-out</span> xiejiayi.key <span class="token number">2048</span>openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-x509</span> <span class="token parameter variable">-key</span> xiejiayi.key <span class="token parameter variable">-out</span> xiejiayi.crt <span class="token parameter variable">-subj</span> /C<span class="token operator">=</span>CN/ST<span class="token operator">=</span>Shanghai/L<span class="token operator">=</span>Shanghai/O<span class="token operator">=</span>DevOps/CN<span class="token operator">=</span>www.xiejiayi.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="2-创建secret资源"><a href="#2-创建secret资源" class="headerlink" title="2.创建secret资源"></a>2.创建secret资源</h4><p>方法1：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Secret<span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">tls.crt</span><span class="token punctuation">:</span> base64 encoded cert  <span class="token key atrule">tls.key</span><span class="token punctuation">:</span> base64 encoded key<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> xiejiayi<span class="token punctuation">-</span>secret  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">type</span><span class="token punctuation">:</span> Opaque<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>方法2：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl create secret tls xiejiayi-secret <span class="token parameter variable">--cert</span><span class="token operator">=</span>xiejiayi.crt <span class="token parameter variable">--key</span><span class="token operator">=</span>xiejiayi.keykubectl describe secret xiejiayi-secret<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-调整配置启用https证书"><a href="#3-调整配置启用https证书" class="headerlink" title="3.调整配置启用https证书"></a>3.调整配置启用https证书</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 访问地址 https://foo.bar.com:30443/php 需要找到对应的nodeport对应的https映射端口访问</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> networking.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Ingress<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ing<span class="token punctuation">-</span>php  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>     <span class="token key atrule">kubernetes.io/ingress.class</span><span class="token punctuation">:</span> <span class="token string">"nginx"</span> <span class="token comment">##指定Ingress Controller的类型</span>    <span class="token key atrule">nginx.ingress.kubernetes.io/rewrite-target</span><span class="token punctuation">:</span>  /    <span class="token key atrule">nginx.ingress.kubernetes.io/ssl-redirect</span><span class="token punctuation">:</span> <span class="token string">'true'</span><span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">tls</span><span class="token punctuation">:</span> <span class="token comment"># 增加证书</span>  <span class="token punctuation">-</span> <span class="token key atrule">hosts</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> foo.bar.com    <span class="token key atrule">secretName</span><span class="token punctuation">:</span> xiejiayi<span class="token punctuation">-</span>secret  <span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> foo.bar.com    <span class="token key atrule">http</span><span class="token punctuation">:</span>      <span class="token key atrule">paths</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">path</span><span class="token punctuation">:</span> /php        <span class="token key atrule">pathType</span><span class="token punctuation">:</span> Prefix        <span class="token key atrule">backend</span><span class="token punctuation">:</span>          <span class="token key atrule">service</span><span class="token punctuation">:</span>            <span class="token key atrule">name</span><span class="token punctuation">:</span> php<span class="token punctuation">-</span>apache            <span class="token key atrule">port</span><span class="token punctuation">:</span>              <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token number">80</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="采用外部访问方式"><a href="#采用外部访问方式" class="headerlink" title="采用外部访问方式"></a>采用外部访问方式</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>external<span class="token punctuation">-</span>nginx  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app.kubernetes.io/name</span><span class="token punctuation">:</span> ingress<span class="token punctuation">-</span>nginx  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> http      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">80</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> https      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">443</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">443</span>  <span class="token key atrule">externalIPs</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> 192.168.56.12<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="规则重写"><a href="#规则重写" class="headerlink" title="规则重写"></a>规则重写</h2><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1637139090316-0480565b-19d0-4fab-b1d2-ffabed983f3e.png#clientId=u07e45915-c495-4&amp;from=paste&amp;height=338&amp;id=u2f1917ce&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=338&amp;originWidth=736&amp;originalType=binary&amp;ratio=1&amp;size=73598&amp;status=done&amp;style=none&amp;taskId=ub95a8020-5032-438e-8ed3-ec23d0fd349&amp;width=736" alt="image.png"></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Ingress<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>test  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">nginx.ingress.kubernetes.io/rewrite-target</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//web3.escape.com<span class="token punctuation">:</span>31802/hostname.html<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">rules</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> web4.escape.com      <span class="token key atrule">http</span><span class="token punctuation">:</span>        <span class="token key atrule">paths</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">path</span><span class="token punctuation">:</span> /            <span class="token key atrule">backend</span><span class="token punctuation">:</span>              <span class="token key atrule">serviceName</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>svc              <span class="token key atrule">servicePort</span><span class="token punctuation">:</span> <span class="token number">80</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="keepalived-VIP"><a href="#keepalived-VIP" class="headerlink" title="keepalived-VIP"></a>keepalived-VIP</h2><h3 id="rbac"><a href="#rbac" class="headerlink" title="rbac"></a>rbac</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>master keepalived<span class="token punctuation">]</span><span class="token comment"># cat rbac.yaml </span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>keepalived<span class="token punctuation">-</span>vip<span class="token key atrule">rules</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>  <span class="token key atrule">resources</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> pods  <span class="token punctuation">-</span> nodes  <span class="token punctuation">-</span> endpoints  <span class="token punctuation">-</span> services  <span class="token punctuation">-</span> configmaps  <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"list"</span><span class="token punctuation">,</span> <span class="token string">"watch"</span><span class="token punctuation">]</span><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>keepalived<span class="token punctuation">-</span>vip   <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default <span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRoleBinding<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>keepalived<span class="token punctuation">-</span>vip<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io  <span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole  <span class="token key atrule">name</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>keepalived<span class="token punctuation">-</span>vip<span class="token key atrule">subjects</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount  <span class="token key atrule">name</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>keepalived<span class="token punctuation">-</span>vip  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="configMap"><a href="#configMap" class="headerlink" title="configMap"></a>configMap</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>master keepalived<span class="token punctuation">]</span><span class="token comment"># cat configmap.yaml </span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> vip<span class="token punctuation">-</span>configmap<span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">192.168.56.15</span><span class="token punctuation">:</span> default/nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="daemonSet"><a href="#daemonSet" class="headerlink" title="daemonSet"></a>daemonSet</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>master keepalived<span class="token punctuation">]</span><span class="token comment"># cat vip-daemonset.yaml </span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> DaemonSet<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>keepalived<span class="token punctuation">-</span>vip<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>keepalived<span class="token punctuation">-</span>vip  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">name</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>keepalived<span class="token punctuation">-</span>vip    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">hostNetwork</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>      <span class="token key atrule">serviceAccount</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>keepalived<span class="token punctuation">-</span>vip      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">image</span><span class="token punctuation">:</span> aledbf/kube<span class="token punctuation">-</span>keepalived<span class="token punctuation">-</span>vip<span class="token punctuation">:</span><span class="token number">0.35</span>          <span class="token key atrule">name</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>keepalived<span class="token punctuation">-</span>vip          <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent          <span class="token key atrule">livenessProbe</span><span class="token punctuation">:</span>            <span class="token key atrule">httpGet</span><span class="token punctuation">:</span>              <span class="token key atrule">path</span><span class="token punctuation">:</span> /health              <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span>            <span class="token key atrule">initialDelaySeconds</span><span class="token punctuation">:</span> <span class="token number">15</span>            <span class="token key atrule">timeoutSeconds</span><span class="token punctuation">:</span> <span class="token number">3</span>          <span class="token key atrule">securityContext</span><span class="token punctuation">:</span>            <span class="token key atrule">privileged</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>          <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /lib/modules              <span class="token key atrule">name</span><span class="token punctuation">:</span> modules              <span class="token key atrule">readOnly</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>            <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /dev              <span class="token key atrule">name</span><span class="token punctuation">:</span> dev          <span class="token comment"># use downward API</span>          <span class="token key atrule">env</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> POD_NAME              <span class="token key atrule">valueFrom</span><span class="token punctuation">:</span>                <span class="token key atrule">fieldRef</span><span class="token punctuation">:</span>                  <span class="token key atrule">fieldPath</span><span class="token punctuation">:</span> metadata.name            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> POD_NAMESPACE              <span class="token key atrule">valueFrom</span><span class="token punctuation">:</span>                <span class="token key atrule">fieldRef</span><span class="token punctuation">:</span>                  <span class="token key atrule">fieldPath</span><span class="token punctuation">:</span> metadata.namespace          <span class="token comment"># to use unicast</span>          <span class="token key atrule">args</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>services<span class="token punctuation">-</span>configmap=default/vip<span class="token punctuation">-</span>configmap            <span class="token comment"># unicast uses the ip of the nodes instead of multicast</span>            <span class="token comment"># this is useful if running in cloud providers (like AWS)</span>            <span class="token comment">#- --use-unicast=true</span>      <span class="token key atrule">nodeSelector</span><span class="token punctuation">:</span>        <span class="token key atrule">kubernetes.io/os</span><span class="token punctuation">:</span> linux      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> modules          <span class="token key atrule">hostPath</span><span class="token punctuation">:</span>            <span class="token key atrule">path</span><span class="token punctuation">:</span> /lib/modules        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> dev          <span class="token key atrule">hostPath</span><span class="token punctuation">:</span>            <span class="token key atrule">path</span><span class="token punctuation">:</span> /dev      <span class="token comment">#nodeSelector:</span>      <span class="token comment">#  type: worker</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ServiceAccount 使用</title>
      <link href="/kubernetes/serviceaccount.html"/>
      <url>/kubernetes/serviceaccount.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、创建-Service-Account"><a href="#一、创建-Service-Account" class="headerlink" title="一、创建 Service Account"></a>一、创建 Service Account</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 创建sa账号</span>root@k8s-master pv<span class="token punctuation">]</span><span class="token comment"># kubectl create serviceaccount xjy</span>serviceaccount/xjy created<span class="token punctuation">[</span>root@k8s-master pv<span class="token punctuation">]</span><span class="token comment"># kubectl get sa xjy -o yaml</span>apiVersion: v1kind: ServiceAccountmetadata:  creationTimestamp: <span class="token string">"2021-11-16T02:17:24Z"</span>  name: xjy  namespace: default  resourceVersion: <span class="token string">"236090"</span>  uid: a43c6d88-1633-4cc2-ac03-059f6767a197secrets:- name: xjy-token-l4cnc<span class="token comment"># 自动创建secret</span><span class="token punctuation">[</span>root@k8s-master pv<span class="token punctuation">]</span><span class="token comment"># kubectl get secrets xjy-token-l4cnc -o yaml</span>apiVersion: v1data:  ca.crt: <span class="token punctuation">(</span>BASE64<span class="token punctuation">)</span>  token: <span class="token punctuation">(</span>BASE64<span class="token punctuation">)</span>kind: Secretmetadata:  annotations:    kubernetes.io/service-account.name: xjy    kubernetes.io/service-account.uid: a43c6d88-1633-4cc2-ac03-059f6767a197  creationTimestamp: <span class="token string">"2021-11-16T02:17:24Z"</span>  name: xjy-token-l4cnc  namespace: default  resourceVersion: <span class="token string">"236089"</span>  uid: ff3f307e-0d3c-4380-bbd5-2e7a42e197actype: kubernetes.io/service-account-token<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、添加-ImagePullSecrets"><a href="#二、添加-ImagePullSecrets" class="headerlink" title="二、添加 ImagePullSecrets"></a>二、添加 ImagePullSecrets</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">imagePullSecrets</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> xiejiayi<span class="token punctuation">-</span>secret<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">creationTimestamp</span><span class="token punctuation">:</span> <span class="token string">"2021-11-16T02:17:24Z"</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> xjy  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default  <span class="token key atrule">resourceVersion</span><span class="token punctuation">:</span> <span class="token string">"236738"</span>  <span class="token key atrule">uid</span><span class="token punctuation">:</span> a43c6d88<span class="token punctuation">-</span>1633<span class="token punctuation">-</span>4cc2<span class="token punctuation">-</span>ac03<span class="token punctuation">-</span>059f6767a197<span class="token key atrule">secrets</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> xjy<span class="token punctuation">-</span>token<span class="token punctuation">-</span>l4c<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>弹性伸缩 使用</title>
      <link href="/kubernetes/k8s-wen-ti-ji-lu.html"/>
      <url>/kubernetes/k8s-wen-ti-ji-lu.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-calico-x2F-node-is-not-ready-BIRD-is-not-ready-BGP-not-established-with-192-168-56-12-192-168-56-10"><a href="#1-calico-x2F-node-is-not-ready-BIRD-is-not-ready-BGP-not-established-with-192-168-56-12-192-168-56-10" class="headerlink" title="1.calico/node is not ready: BIRD is not ready: BGP not established with 192.168.56.12,192.168.56.10"></a>1.calico/node is not ready: BIRD is not ready: BGP not established with 192.168.56.12,192.168.56.10</h3><blockquote><p><strong>interface=INTERFACE-REGEX</strong>配置可以指定calico使用匹配的网卡上的第一个IP地址。列出网卡和IP地址的顺序取决于系统。匹配支持goalong的正则语法。例如：</p><h1 id="Valid-IP-address-on-interface-eth0-eth1-eth2-etc"><a href="#Valid-IP-address-on-interface-eth0-eth1-eth2-etc" class="headerlink" title="Valid IP address on interface eth0, eth1, eth2 etc.*"></a>Valid IP address on interface eth0, eth1, eth2 etc.*</h1><p> IP_AUTODETECTION_METHOD=interface=eth.*<br>IP6_AUTODETECTION_METHOD=interface=eth.*<br><strong>解决方案：</strong></p></blockquote><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 修改calico。yaml文件</span><span class="token comment"># Specify interface</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> IP_AUTODETECTION_METHOD              <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">"interface=enp.*"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1637809959372-a4b604a7-643d-4fba-8039-e594f8ec3d9d.png#clientId=u671c4818-d2a8-4&amp;from=paste&amp;height=380&amp;id=u8b8180f0&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=380&amp;originWidth=638&amp;originalType=binary&amp;ratio=1&amp;size=27126&amp;status=done&amp;style=none&amp;taskId=u1fe11ff9-9375-4a8f-b2f2-4f94cc175d6&amp;width=638" alt="image.png"></p></blockquote><h3 id="2-打开-prometheus-的监控界面，在菜单的-status-gt-Targets-中，看到-cadvisor-与-nodes-的状态都是-DOWN-而其他-api-servers-和-endpoints-是-UP-状态。DOWN-状态下的错误消息显示-server-returned-HTTP-status-403-Forbidden"><a href="#2-打开-prometheus-的监控界面，在菜单的-status-gt-Targets-中，看到-cadvisor-与-nodes-的状态都是-DOWN-而其他-api-servers-和-endpoints-是-UP-状态。DOWN-状态下的错误消息显示-server-returned-HTTP-status-403-Forbidden" class="headerlink" title="2.打开 prometheus 的监控界面，在菜单的 status -> Targets 中，看到 cadvisor 与 nodes 的状态都是 DOWN. 而其他 api-servers 和 endpoints 是 UP 状态。DOWN 状态下的错误消息显示 server returned HTTP status 403 Forbidden"></a>2.打开 prometheus 的监控界面，在菜单的 status -&gt; Targets 中，看到 cadvisor 与 nodes 的状态都是 DOWN. 而其他 api-servers 和 endpoints 是 UP 状态。DOWN 状态下的错误消息显示 server returned HTTP status 403 Forbidden</h3><blockquote><p><a href="https://www.cnblogs.com/qkhh/p/14517861.html">https://www.cnblogs.com/qkhh/p/14517861.html</a><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1637822222465-20e6bc52-36ff-4a41-af07-89511439df67.png#clientId=u671c4818-d2a8-4&amp;from=paste&amp;height=411&amp;id=ue5955bee&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=411&amp;originWidth=899&amp;originalType=binary&amp;ratio=1&amp;size=30130&amp;status=done&amp;style=none&amp;taskId=u43ae94d4-266f-4037-ab4d-230a1ac17a6&amp;width=899" alt="image.png"><br>问题就出现标红的那一行。由于 cadvisor 对应的 api 是，/api/v1/nodes/${1}/proxy/metrics/cadvisor   （这里的 ${1} 会替换成具体的节点名称）。所属的 api 资源 nodes/proxy 没有被授权。如果加上授权：<br><strong>resources: [“nodes”, “nodes/proxy”, “nodes/metrics”, “services”, “endpoints”, “pods”]</strong><br>再重启 prometheus，cadvisor 和 nodes 的状态都变成 UP 了。</p></blockquote><h3 id="3-harbor上传镜像提示-http-server-gave-HTTP-response-to-HTTPS-client解决方案"><a href="#3-harbor上传镜像提示-http-server-gave-HTTP-response-to-HTTPS-client解决方案" class="headerlink" title="3.harbor上传镜像提示 http: server gave HTTP response to HTTPS client解决方案"></a>3.harbor上传镜像提示 <a href="https://www.cnblogs.com/xlizi/p/13553048.html">http: server gave HTTP response to HTTPS client解决方案</a></h3><blockquote><p><strong>在路径/etc/docker/daemon.json填写harbor配置信息</strong><br>“insecure-registries”:[“192.168.56.11:8084”],<br>重启docker<br>sudo systemctl daemon-reload<br>sudo service docker restart </p></blockquote><h3 id="4-kubelet、docker的状态正常但是提示The-connection-to-the-server-192-168-10-10-6443-was-refused-did-you-specify-the-right-host-or-port"><a href="#4-kubelet、docker的状态正常但是提示The-connection-to-the-server-192-168-10-10-6443-was-refused-did-you-specify-the-right-host-or-port" class="headerlink" title="4.kubelet、docker的状态正常但是提示The connection to the server 192.168.10.10:6443 was refused - did you specify the right host or port?"></a>4.kubelet、docker的状态正常但是提示The connection to the server 192.168.10.10:6443 was refused - did you specify the right host or port?</h3><blockquote><p><strong>参考地址：</strong><a href="https://blog.csdn.net/qq_35566365/article/details/116455177"><strong>https://blog.csdn.net/qq_35566365/article/details/116455177</strong></a><br>原因为etcd服务挂了，排查<br>docker ps 发现apiservice和etcd没有启动<br>通过docker logs 查看日志apiservice<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1638757760912-08bc9231-e5ce-4fd8-81a7-c98527536f6e.png#clientId=u3c9dd494-5d32-4&amp;from=paste&amp;height=125&amp;id=u4454e9cc&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=125&amp;originWidth=1094&amp;originalType=binary&amp;ratio=1&amp;size=19554&amp;status=done&amp;style=none&amp;taskId=ubba0b847-61f7-4b94-a503-826e9cbc7e6&amp;width=1094" alt="image.png"><br>发现apiservice无法访问 127.0.0.1:2379，<br>cat /etc/kubernetes/manifests/kube-apiserver.yaml 发现 对应的2379为etcd的端口<br>在访问查看etcd的日志<br>panic: freepages: failed to get all reachable pages (page 8463496752509895293: out of bounds: 6010)<br><strong>处理方案：会导致所有的数据丢失</strong><br>root@lax-01:/var/lib/etcd# cp xxx/etcd/** /var/lib/etcd<br>root@lax-01:/var/lib/etcd# rm -rf /var/lib/etcd/**</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>StatefulSet有状态应用 使用</title>
      <link href="/kubernetes/statefulset-you-zhuang-tai-fu-wu.html"/>
      <url>/kubernetes/statefulset-you-zhuang-tai-fu-wu.html</url>
      
        <content type="html"><![CDATA[<h4 id="参考地址：https-www-jianshu-com-p-693fe35a9156"><a href="#参考地址：https-www-jianshu-com-p-693fe35a9156" class="headerlink" title="参考地址：https://www.jianshu.com/p/693fe35a9156"></a>参考地址：<a href="https://www.jianshu.com/p/693fe35a9156">https://www.jianshu.com/p/693fe35a9156</a></h4><h2 id="一、StatefulSet组成部分"><a href="#一、StatefulSet组成部分" class="headerlink" title="一、StatefulSet组成部分"></a>一、StatefulSet组成部分</h2><ul><li><strong>Headless Service</strong>：用来定义Pod网络标识( DNS domain)。</li><li><strong>volumeClaimTemplates <strong>：存储卷申请模板，创建PVC，指定pvc名称大小，将</strong>自动创建pvc</strong>，且pvc必须由存储类供应。</li><li>**StatefulSet **：定义具体应用，名为Nginx，有三个Pod副本，并为每个Pod定义了一个域名部署statefulset。<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">为什么需要volumeClaimTemplate？对于有状态的副本集都会用到持久存储，对于分布式系统来讲，<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>red</span><span class="token punctuation">&gt;</span></span>它的最大特点是数据是不一样的<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>red</span><span class="token punctuation">&gt;</span></span>，所以各个节点不能使用同一存储卷，每个节点有自已的专用存储，但是如果在Deployment中的Pod template里定义的存储卷，是所有副本集共用一个存储卷，数据是相同的，因为是基于模板来的 ，而statefulset中每个Pod都要自已的专有存储卷，所以statefulset的存储卷就不能再用Pod模板来创建了，于是statefulSet使用volumeClaimTemplate，称为卷申请模板，它会为每个Pod生成不同的pvc，并绑定pv，从而实现各pod有专用存储。这就是为什么要用volumeClaimTemplate的原因。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h2 id="二、创建MYSQL一主多从环境"><a href="#二、创建MYSQL一主多从环境" class="headerlink" title="二、创建MYSQL一主多从环境"></a>二、创建MYSQL一主多从环境</h2><h3 id="1-定义configMap"><a href="#1-定义configMap" class="headerlink" title="1.定义configMap"></a>1.定义configMap</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> mysql  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> mysql<span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">master.cnf</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">    # Apply this config only on the master.    [mysqld]    log-bin    log_bin_trust_function_creators=1    lower_case_table_names=1</span>  <span class="token key atrule">slave.cnf</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">    # Apply this config only on slaves.    [mysqld]    super-read-only    log_bin_trust_function_creators=1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-定义service"><a href="#2-定义service" class="headerlink" title="2.定义service"></a>2.定义service</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> mysql  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> mysql<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">ports</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> mysql    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">3306</span>  <span class="token key atrule">clusterIP</span><span class="token punctuation">:</span> None  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> mysql<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> mysql<span class="token punctuation">-</span>read  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> mysql<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">ports</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> mysql    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">3306</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> mysql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-定义mysql的statefulSet文件"><a href="#3-定义mysql的statefulSet文件" class="headerlink" title="3.定义mysql的statefulSet文件"></a>3.定义mysql的statefulSet文件</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> StatefulSet<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> mysql<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> mysql  <span class="token key atrule">serviceName</span><span class="token punctuation">:</span> mysql  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">2</span>  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> mysql    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">initContainers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> init<span class="token punctuation">-</span>mysql        <span class="token key atrule">image</span><span class="token punctuation">:</span> mysql<span class="token punctuation">:</span>5.7.30         <span class="token key atrule">command</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> bash        <span class="token punctuation">-</span> <span class="token string">"-c"</span>        <span class="token punctuation">-</span> <span class="token punctuation">|</span><span class="token scalar string">          set -ex          # Generate mysql server-id from pod ordinal index.          [[ `hostname` =~ -([0-9]+)$ ]] || exit 1          ordinal=${BASH_REMATCH[1]}          echo [mysqld] &gt; /mnt/conf.d/server-id.cnf          # Add an offset to avoid reserved server-id=0 value.          echo server-id=$((100 + $ordinal)) &gt;&gt; /mnt/conf.d/server-id.cnf          # Copy appropriate conf.d files from config-map to emptyDir.          if [[ $ordinal -eq 0 ]]; then            cp /mnt/config-map/master.cnf /mnt/conf.d/          else            cp /mnt/config-map/slave.cnf /mnt/conf.d/          fi</span>        <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> conf          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /mnt/conf.d        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> config<span class="token punctuation">-</span>map          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /mnt/config<span class="token punctuation">-</span>map      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> clone<span class="token punctuation">-</span>mysql        <span class="token key atrule">image</span><span class="token punctuation">:</span> anjia0532/google<span class="token punctuation">-</span>samples.xtrabackup<span class="token punctuation">:</span><span class="token number">1.0</span>        <span class="token key atrule">command</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> bash        <span class="token punctuation">-</span> <span class="token string">"-c"</span>        <span class="token punctuation">-</span> <span class="token punctuation">|</span><span class="token scalar string">          set -ex          # Skip the clone if data already exists.          [[ -d /var/lib/mysql/mysql ]] &amp;&amp; exit 0          # Skip the clone on master (ordinal index 0).          [[ `hostname` =~ -([0-9]+)$ ]] || exit 1          ordinal=${BASH_REMATCH[1]}          [[ $ordinal -eq 0 ]] &amp;&amp; exit 0          # Clone data from previous peer.          ncat --recv-only mysql-$(($ordinal-1)).mysql 3307 | xbstream -x -C /var/lib/mysql          # Prepare the backup.          xtrabackup --prepare --target-dir=/var/lib/mysql</span>        <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> data          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /var/lib/mysql          <span class="token key atrule">subPath</span><span class="token punctuation">:</span> mysql        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> conf          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /etc/mysql/conf.d      <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> mysql        <span class="token key atrule">image</span><span class="token punctuation">:</span> mysql<span class="token punctuation">:</span>5.7.30         <span class="token key atrule">env</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> MYSQL_ALLOW_EMPTY_PASSWORD          <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">"1"</span>        <span class="token key atrule">ports</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> mysql          <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">3306</span>        <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> data          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /var/lib/mysql          <span class="token key atrule">subPath</span><span class="token punctuation">:</span> mysql        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> conf          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /etc/mysql/conf.d        <span class="token key atrule">resources</span><span class="token punctuation">:</span>          <span class="token key atrule">requests</span><span class="token punctuation">:</span>            <span class="token key atrule">cpu</span><span class="token punctuation">:</span> 500m            <span class="token key atrule">memory</span><span class="token punctuation">:</span> 1Gi        <span class="token key atrule">livenessProbe</span><span class="token punctuation">:</span>          <span class="token key atrule">exec</span><span class="token punctuation">:</span>            <span class="token key atrule">command</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"mysqladmin"</span><span class="token punctuation">,</span> <span class="token string">"ping"</span><span class="token punctuation">]</span>          <span class="token key atrule">initialDelaySeconds</span><span class="token punctuation">:</span> <span class="token number">30</span>          <span class="token key atrule">periodSeconds</span><span class="token punctuation">:</span> <span class="token number">10</span>          <span class="token key atrule">timeoutSeconds</span><span class="token punctuation">:</span> <span class="token number">5</span>        <span class="token key atrule">readinessProbe</span><span class="token punctuation">:</span>          <span class="token key atrule">exec</span><span class="token punctuation">:</span>            <span class="token comment"># Check we can execute queries over TCP (skip-networking is off).</span>            <span class="token key atrule">command</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"mysql"</span><span class="token punctuation">,</span> <span class="token string">"-h"</span><span class="token punctuation">,</span> <span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span> <span class="token string">"-e"</span><span class="token punctuation">,</span> <span class="token string">"SELECT 1"</span><span class="token punctuation">]</span>          <span class="token key atrule">initialDelaySeconds</span><span class="token punctuation">:</span> <span class="token number">5</span>          <span class="token key atrule">periodSeconds</span><span class="token punctuation">:</span> <span class="token number">2</span>          <span class="token key atrule">timeoutSeconds</span><span class="token punctuation">:</span> <span class="token number">1</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> xtrabackup        <span class="token key atrule">image</span><span class="token punctuation">:</span> anjia0532/google<span class="token punctuation">-</span>samples.xtrabackup<span class="token punctuation">:</span><span class="token number">1.0</span>        <span class="token key atrule">ports</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> xtrabackup          <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">3307</span>        <span class="token key atrule">command</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> bash        <span class="token punctuation">-</span> <span class="token string">"-c"</span>        <span class="token punctuation">-</span> <span class="token punctuation">|</span><span class="token scalar string">          set -ex          cd /var/lib/mysql          # Determine binlog position of cloned data, if any.          if [[ -f xtrabackup_slave_info ]]; then            # XtraBackup already generated a partial "CHANGE MASTER TO" query            # because we're cloning from an existing slave.            mv xtrabackup_slave_info change_master_to.sql.in            # Ignore xtrabackup_binlog_info in this case (it's useless).            rm -f xtrabackup_binlog_info          elif [[ -f xtrabackup_binlog_info ]]; then            # We're cloning directly from master. Parse binlog position.            [[ `cat xtrabackup_binlog_info` =~ ^(.*?)[[:space:]]+(.*?)$ ]] || exit 1            rm xtrabackup_binlog_info            echo "CHANGE MASTER TO MASTER_LOG_FILE='${BASH_REMATCH[1]}',\                  MASTER_LOG_POS=${BASH_REMATCH[2]}" &gt; change_master_to.sql.in          fi          # Check if we need to complete a clone by starting replication.          if [[ -f change_master_to.sql.in ]]; then            echo "Waiting for mysqld to be ready (accepting connections)"            until mysql -h 127.0.0.1 -e "SELECT 1"; do sleep 1; done            echo "Initializing replication from clone position"            # In case of container restart, attempt this at-most-once.            mv change_master_to.sql.in change_master_to.sql.orig            mysql -h 127.0.0.1 &lt;&lt;EOF          $(&lt;change_master_to.sql.orig),            MASTER_HOST='mysql-0.mysql',            MASTER_USER='root',            MASTER_PASSWORD='',            MASTER_CONNECT_RETRY=10;          START SLAVE;          EOF          fi          # Start a server to send backups when requested by peers.          exec ncat --listen --keep-open --send-only --max-conns=1 3307 -c \            "xtrabackup --backup --slave-info --stream=xbstream --host=127.0.0.1 --user=root"</span>        <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> data          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /var/lib/mysql          <span class="token key atrule">subPath</span><span class="token punctuation">:</span> mysql        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> conf          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /etc/mysql/conf.d        <span class="token key atrule">resources</span><span class="token punctuation">:</span>          <span class="token key atrule">requests</span><span class="token punctuation">:</span>            <span class="token key atrule">cpu</span><span class="token punctuation">:</span> 100m            <span class="token key atrule">memory</span><span class="token punctuation">:</span> 100Mi      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> conf        <span class="token key atrule">emptyDir</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> config<span class="token punctuation">-</span>map        <span class="token key atrule">configMap</span><span class="token punctuation">:</span>          <span class="token key atrule">name</span><span class="token punctuation">:</span> mysql  <span class="token key atrule">volumeClaimTemplates</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> data    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">accessModes</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"ReadWriteOnce"</span><span class="token punctuation">]</span>      <span class="token key atrule">storageClassName</span> <span class="token punctuation">:</span> managed<span class="token punctuation">-</span>nfs<span class="token punctuation">-</span>storage  <span class="token comment">#使用存储类创建pvc会自动创建pv，就不需要前面先创建pv</span>      <span class="token key atrule">resources</span><span class="token punctuation">:</span>        <span class="token key atrule">requests</span><span class="token punctuation">:</span>          <span class="token key atrule">storage</span><span class="token punctuation">:</span> 4Gi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-验证"><a href="#4-验证" class="headerlink" title="4.验证"></a>4.验证</h3><h5 id="4-1进入主节点"><a href="#4-1进入主节点" class="headerlink" title="4.1进入主节点"></a>4.1进入主节点</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> mysql-0 <span class="token function">bash</span>mysql <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> create database <span class="token builtin class-name">test</span><span class="token punctuation">;</span>show databases<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="4-2进去其他节点查看是否有存在test数据库"><a href="#4-2进去其他节点查看是否有存在test数据库" class="headerlink" title="4.2进去其他节点查看是否有存在test数据库"></a>4.2进去其他节点查看是否有存在test数据库</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> mysql-1 <span class="token function">bash</span>mysql <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> show databases<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="4-3查看pvc和pv挂载情况"><a href="#4-3查看pvc和pv挂载情况" class="headerlink" title="4.3查看pvc和pv挂载情况"></a>4.3查看pvc和pv挂载情况</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl get pv,pvc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cronjob 使用</title>
      <link href="/kubernetes/cronjob.html"/>
      <url>/kubernetes/cronjob.html</url>
      
        <content type="html"><![CDATA[<ul><li>.spec.schedule 指定任务运行周期，格式同 Cron</li><li>.spec.jobTemplate 指定需要运行的任务，格式同 Job</li><li>.spec.startingDeadlineSeconds 指定任务开始的截止期限</li><li>.spec.concurrencyPolicy 指定任务的并发策略，支持 Allow、Forbid 和<br>Replace </li><li>三个选项</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> batch/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> CronJob<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> hello<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">schedule</span><span class="token punctuation">:</span> <span class="token string">"*/1 * * * *"</span>  <span class="token key atrule">jobTemplate</span><span class="token punctuation">:</span>          <span class="token key atrule">spec</span><span class="token punctuation">:</span>                <span class="token key atrule">template</span><span class="token punctuation">:</span>                    <span class="token key atrule">spec</span><span class="token punctuation">:</span>                      <span class="token key atrule">containers</span><span class="token punctuation">:</span>                      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> hello                        <span class="token key atrule">image</span><span class="token punctuation">:</span> busybox                        <span class="token key atrule">args</span><span class="token punctuation">:</span>                        <span class="token punctuation">-</span> /bin/sh                        <span class="token punctuation">-</span> <span class="token punctuation">-</span>c                        <span class="token punctuation">-</span> date;echo Hello from the Kubernetes cluster                      <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> OnFailure<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>查看日志</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">//查看job和查看cronjobkubect get jobkubect get cronjob<span class="token assign-left variable">pods</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>kubectl get pods <span class="token parameter variable">--selector</span><span class="token operator">=</span>job-name<span class="token operator">=</span>hello-27280025 <span class="token parameter variable">--output</span><span class="token operator">=</span>jsonpath<span class="token operator">=</span><span class="token punctuation">{</span>.items<span class="token punctuation">..</span>metadata.name<span class="token punctuation">}</span> <span class="token variable">)</span></span>kubectl logs <span class="token variable">$pods</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>harbor 使用</title>
      <link href="/kubernetes/harbor-an-zhuang.html"/>
      <url>/kubernetes/harbor-an-zhuang.html</url>
      
        <content type="html"><![CDATA[<h3 id="Download-harbor-helm-chart"><a href="#Download-harbor-helm-chart" class="headerlink" title="Download harbor helm chart"></a>Download harbor helm chart</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">helm repo <span class="token function">add</span> harbor https://helm.goharbor.iohelm fetch harbor/harbor <span class="token parameter variable">--untar</span>kubectl create ns harbor<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="Update-values-yaml"><a href="#Update-values-yaml" class="headerlink" title="Update values.yaml"></a>Update values.yaml</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vi</span> .harbor/values.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>And change:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">expose</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> nodePort<span class="token key atrule">tls</span><span class="token punctuation">:</span>  <span class="token key atrule">commonName</span><span class="token punctuation">:</span> <span class="token string">'core.harbor.domain'</span><span class="token key atrule">persistence</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Install-helm-chart"><a href="#Install-helm-chart" class="headerlink" title="Install helm chart"></a>Install helm chart</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">helm <span class="token function">install</span> harbor ./harbor <span class="token parameter variable">-n</span> harbor<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Wait-for-all-pod-being-ready-and-access-harbor-portal"><a href="#Wait-for-all-pod-being-ready-and-access-harbor-portal" class="headerlink" title="Wait for all pod being ready and access harbor portal"></a>Wait for all pod being ready and access harbor portal</h3><p><a href="http://192.168.34.2:30002/">http://192.168.34.2:30002</a></p><pre class="line-numbers language-none"><code class="language-none">admin/Harbor12345<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Download-repository-certs-from"><a href="#Download-repository-certs-from" class="headerlink" title="Download repository certs from"></a>Download repository certs from</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://192.168.34.2:30003/harbor/projects/1/repositories<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Copy-the-downloaded-ca-crt-to-vm-docker-certs-configuration-folder"><a href="#Copy-the-downloaded-ca-crt-to-vm-docker-certs-configuration-folder" class="headerlink" title="Copy the downloaded ca.crt to vm docker certs configuration folder"></a>Copy the downloaded ca.crt to vm docker certs configuration folder</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> /etc/docker/certs.d/core.harbor.domaincopy the ca.crt to this foldersystemctl restart <span class="token function">docker</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="Edit-x2F-etc-x2F-hosts-to-map-core-harbor-domain-to-harbor-svc-clusterip"><a href="#Edit-x2F-etc-x2F-hosts-to-map-core-harbor-domain-to-harbor-svc-clusterip" class="headerlink" title="Edit /etc/hosts to map core.harbor.domain to harbor svc clusterip"></a>Edit /etc/hosts to map core.harbor.domain to harbor svc clusterip</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># host 配置harbor svc的集群ip</span><span class="token number">10.104</span>.231.99 core.harbor.domain<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="Docker-login"><a href="#Docker-login" class="headerlink" title="Docker login"></a>Docker login</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> login <span class="token parameter variable">-u</span> admin <span class="token parameter variable">-p</span> Harbor12345 core.harbor.domain<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Docker-tag-a-image-to-core-harbor-domain-and-push-it-and-you-will-see-it-in-harbor-portal"><a href="#Docker-tag-a-image-to-core-harbor-domain-and-push-it-and-you-will-see-it-in-harbor-portal" class="headerlink" title="Docker tag a image to core.harbor.domain and push it and you will see it in harbor portal"></a>Docker tag a image to core.harbor.domain and push it and you will see it in harbor portal</h3><h3 id="Check-repositories-and-blobs"><a href="#Check-repositories-and-blobs" class="headerlink" title="Check repositories and blobs"></a>Check repositories and blobs</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> harbor-registry-7d686859d7-xs5nv <span class="token parameter variable">-n</span> harbor <span class="token function">bash</span><span class="token function">ls</span> <span class="token parameter variable">-la</span> /storage/docker/registry/v2/repositories/<span class="token function">ls</span> <span class="token parameter variable">-la</span> /storage/docker/registry/v2/blobs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="Database-operator"><a href="#Database-operator" class="headerlink" title="Database operator"></a>Database operator</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> harbor-database-0 <span class="token parameter variable">-n</span> harbor -- <span class="token function">bash</span>psql <span class="token parameter variable">-U</span> postgres <span class="token parameter variable">-d</span> postgres <span class="token parameter variable">-h</span> <span class="token number">127.0</span>.0.1 <span class="token parameter variable">-p</span> <span class="token number">5432</span><span class="token punctuation">\</span>c registry<span class="token keyword">select</span> * from harbor_user<span class="token punctuation">;</span><span class="token punctuation">\</span>dt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>容器组pod 使用</title>
      <link href="/kubernetes/pod.html"/>
      <url>/kubernetes/pod.html</url>
      
        <content type="html"><![CDATA[<h2 id="资源限制"><a href="#资源限制" class="headerlink" title="资源限制"></a>资源限制</h2><ul><li>spec.containers[].resources.limits.cpu ： CPU 上限， 可以短暂超过， 容器也不会被停止</li><li>spec.containers[].resources.limits.memory ： 内存上限， 不可以超过； 如果超过， 容器可能会被终止或调度到其他资源充足的机器上</li><li>spec.containers[].resources.limits.ephemeral-storage ： 临时存储（ 容器可写层、 日志以及 EmptyDir 等） 的上限， 超过后 Pod 会被驱逐</li><li>spec.containers[].resources.requests.cpu ： CPU 请求， 也是调度 CPU 资源的依据， 可以超过</li><li>spec.containers[].resources.requests.memory ： 内存请求， 也是调度内存资源的依据， 可以超过； 但如果超过， 容器可能会在 Node 内存不足时清理</li><li>spec.containers[].resources.requests.ephemeral-storage ： 临时存储（ 容器可写层、 日志以及 EmptyDir 等） 的请求， 调度容器存储的依据<br> <img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1636974596726-86910ac8-901e-4317-9a6c-10394dc50d7e.png#clientId=u80a186dc-b152-4&amp;from=paste&amp;height=474&amp;id=ubaad357f&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=474&amp;originWidth=599&amp;originalType=binary&amp;ratio=1&amp;size=43934&amp;status=done&amp;style=none&amp;taskId=u33db6349-9f44-430e-8fee-1989062e80f&amp;width=599" alt="image.png"></li></ul><h2 id="健康检查"><a href="#健康检查" class="headerlink" title="健康检查"></a>健康检查</h2><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1636974655639-8db59863-d002-4628-9c2d-307467f0f0a2.png#clientId=u80a186dc-b152-4&amp;from=paste&amp;height=361&amp;id=ua88cd119&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=361&amp;originWidth=609&amp;originalType=binary&amp;ratio=1&amp;size=97898&amp;status=done&amp;style=none&amp;taskId=u2fafd748-462a-4288-ac87-4c914bd3211&amp;width=609" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1636974843048-079474b5-02f3-4e6d-9bb4-9b20b076ef3a.png#clientId=u80a186dc-b152-4&amp;from=paste&amp;height=801&amp;id=u2cebb90b&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=801&amp;originWidth=548&amp;originalType=binary&amp;ratio=1&amp;size=84261&amp;status=done&amp;style=none&amp;taskId=uc4738430-3b7b-4688-a825-3f2931ec093&amp;width=548" alt="image.png"><br><strong>liveness probe（存活探针）</strong>：来确定何时重启容器。例如，当应用程序处于运行状态但无法做进一步操作，liveness 探针将捕获到 deadlock，重启处于该状态下的容器，使应用程序在存在 bug 的情况下依然能够继续运行下去。<br><strong>readiness probe（就绪探针）</strong>：来确定容器是否已经就绪可以接受流量。只有当 Pod 中的容器都处于就绪状态时 kubelet 才会认定该 Pod处于就绪状态。该信号的作用是控制哪些 Pod应该作为service的后端。如果 Pod 处于非就绪状态，那么它们将会被从 service 的load balancer（负载均衡）中移除。<br><strong>startupProbe(启动探测)</strong> : 指示容器中的应用是否已经启动。如果提供了启动探测(startup probe)，则禁用所有其他探测，直到它成功为止。如果启动探测失败，kubelet 将杀死容器，容器服从其重启策略进行重启。如果容器没有提供启动探测，则默认状态为成功Success。</p><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1637116192608-84a50bf2-591a-4a7a-abaf-46f37b8a3e58.png#clientId=u6ee81a2e-2a02-4&amp;from=paste&amp;id=u20daf2f6&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=602&amp;originWidth=1200&amp;originalType=url&amp;ratio=1&amp;size=364071&amp;status=done&amp;style=none&amp;taskId=ubc93a6df-6831-43b4-a921-76bcef77344" alt="image.png"></p><h2 id="存活探针"><a href="#存活探针" class="headerlink" title="存活探针"></a>存活探针</h2><h4 id="1-定义-liveness-exec请求"><a href="#1-定义-liveness-exec请求" class="headerlink" title="1.定义 liveness exec请求"></a>1.定义 liveness exec请求</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">test</span><span class="token punctuation">:</span> liveness  <span class="token key atrule">name</span><span class="token punctuation">:</span> liveness<span class="token punctuation">-</span>exec<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">containers</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> liveness    <span class="token key atrule">image</span><span class="token punctuation">:</span> busybox    <span class="token key atrule">args</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> /bin/sh    <span class="token punctuation">-</span> <span class="token punctuation">-</span>c    <span class="token punctuation">-</span> touch /tmp/healthy; sleep 30; rm <span class="token punctuation">-</span>rf /tmp/healthy; sleep 600    <span class="token key atrule">livenessProbe</span><span class="token punctuation">:</span>      <span class="token key atrule">exec</span><span class="token punctuation">:</span>        <span class="token key atrule">command</span><span class="token punctuation">:</span>  <span class="token comment"># kubelet 在容器内执行命令 cat /tmp/healthy 来进行探测。 如果命令执行成功并且返回值为 0，kubelet 就会认为这个容器是健康存活的</span>        <span class="token punctuation">-</span> cat        <span class="token punctuation">-</span> /tmp/healthy      <span class="token key atrule">initialDelaySeconds</span><span class="token punctuation">:</span> <span class="token number">5</span>      <span class="token key atrule">periodSeconds</span><span class="token punctuation">:</span> <span class="token number">5</span>~                                                                                                                                                                                        <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>调度失败后会进行容器重启</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># kubectl describe pod liveness-exec</span>Events:  Type     Reason     Age                 From               Message  ----     ------     ----                ----               -------  Normal   Scheduled  2m2s                default-scheduler  Successfully assigned default/liveness-exec to k8s-node1  Normal   Pulled     104s                kubelet            Successfully pulled image <span class="token string">"busybox"</span> <span class="token keyword">in</span> <span class="token number">15</span>.638033484s  Warning  Unhealthy  62s <span class="token punctuation">(</span>x3 over 72s<span class="token punctuation">)</span>   kubelet            Liveness probe failed: cat: can<span class="token string">'t open '</span>/tmp/healthy': No such <span class="token function">file</span> or directory  Normal   Killing    62s                 kubelet            Container liveness failed liveness probe, will be restarted  Normal   Pulling    32s <span class="token punctuation">(</span>x2 over 119s<span class="token punctuation">)</span>  kubelet            Pulling image <span class="token string">"busybox"</span>  Normal   Created    29s <span class="token punctuation">(</span>x2 over 104s<span class="token punctuation">)</span>  kubelet            Created container liveness  Normal   Started    29s <span class="token punctuation">(</span>x2 over 103s<span class="token punctuation">)</span>  kubelet            Started container liveness  Normal   Pulled     29s                 kubelet            Successfully pulled image <span class="token string">"busybox"</span> <span class="token keyword">in</span> <span class="token number">2</span>.736225925s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-定义-liveness-HTTP请求"><a href="#2-定义-liveness-HTTP请求" class="headerlink" title="2.定义 liveness HTTP请求"></a>2.定义 liveness HTTP请求</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">test</span><span class="token punctuation">:</span> liveness  <span class="token key atrule">name</span><span class="token punctuation">:</span> liveness<span class="token punctuation">-</span>http<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">containers</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> liveness    <span class="token key atrule">image</span><span class="token punctuation">:</span> fkconsultin/liveness<span class="token punctuation">-</span>testing    <span class="token key atrule">args</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> /server    <span class="token key atrule">livenessProbe</span><span class="token punctuation">:</span>      <span class="token key atrule">httpGet</span><span class="token punctuation">:</span>        <span class="token key atrule">path</span><span class="token punctuation">:</span> /healthz        <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span>        <span class="token key atrule">httpHeaders</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> X<span class="token punctuation">-</span>Custom<span class="token punctuation">-</span>Header          <span class="token key atrule">value</span><span class="token punctuation">:</span> Awesome      <span class="token key atrule">initialDelaySeconds</span><span class="token punctuation">:</span> <span class="token number">3</span>      <span class="token key atrule">periodSeconds</span><span class="token punctuation">:</span> <span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>HTTP liveness探测失败，进行容器重启</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">Events</span><span class="token punctuation">:</span>  Type     Reason     Age                  From               Message  <span class="token punctuation">---</span><span class="token punctuation">-</span>     <span class="token punctuation">---</span><span class="token punctuation">---</span>     <span class="token punctuation">---</span><span class="token punctuation">-</span>                 <span class="token punctuation">---</span><span class="token punctuation">-</span>               <span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">-</span>  Normal   Scheduled  2m47s                default<span class="token punctuation">-</span>scheduler  Successfully assigned default/liveness<span class="token punctuation">-</span>http to k8s<span class="token punctuation">-</span>node1  Normal   Pulled     117s                 kubelet            Successfully pulled image "fkconsultin/liveness<span class="token punctuation">-</span>testing" in 48.941841972s  Normal   Pulled     61s                  kubelet            Successfully pulled image "fkconsultin/liveness<span class="token punctuation">-</span>testing" in 40.836616911s  Normal   Created    36s (x3 over 117s)   kubelet            Created container liveness  Normal   Started    36s (x3 over 117s)   kubelet            Started container liveness  Normal   Pulled     36s                  kubelet            Successfully pulled image "fkconsultin/liveness<span class="token punctuation">-</span>testing" in 8.912067487s  <span class="token key atrule">Warning  Unhealthy  26s (x9 over 113s)   kubelet            Liveness probe failed</span><span class="token punctuation">:</span> <span class="token key atrule">HTTP probe failed with statuscode</span><span class="token punctuation">:</span> <span class="token number">404</span>  Normal   Killing    26s (x3 over 107s)   kubelet            Container liveness failed liveness probe<span class="token punctuation">,</span> will be restarted  Normal   Pulling    21s (x4 over 2m46s)  kubelet            Pulling image "fkconsultin/liveness<span class="token punctuation">-</span>testing"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-定义-liveness-TCP请求"><a href="#3-定义-liveness-TCP请求" class="headerlink" title="3.定义 liveness TCP请求"></a>3.定义 liveness TCP请求</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">containers</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx    <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx<span class="token punctuation">:</span>1.14<span class="token punctuation">-</span>alpine    <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">8080</span>    <span class="token key atrule">readinessProbe</span><span class="token punctuation">:</span>      <span class="token key atrule">tcpSocket</span><span class="token punctuation">:</span>        <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span>      <span class="token key atrule">initialDelaySeconds</span><span class="token punctuation">:</span> <span class="token number">5</span>      <span class="token key atrule">periodSeconds</span><span class="token punctuation">:</span> <span class="token number">10</span>    <span class="token key atrule">livenessProbe</span><span class="token punctuation">:</span>      <span class="token key atrule">tcpSocket</span><span class="token punctuation">:</span>   <span class="token comment"># 指定tcp端口是否通</span>        <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span>      <span class="token key atrule">initialDelaySeconds</span><span class="token punctuation">:</span> <span class="token number">15</span>      <span class="token key atrule">periodSeconds</span><span class="token punctuation">:</span> <span class="token number">20</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>15 秒之后，通过看 Pod 事件来检测存活探测器：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">Events</span><span class="token punctuation">:</span>  Type     Reason     Age                From               Message  <span class="token punctuation">---</span><span class="token punctuation">-</span>     <span class="token punctuation">---</span><span class="token punctuation">---</span>     <span class="token punctuation">---</span><span class="token punctuation">-</span>               <span class="token punctuation">---</span><span class="token punctuation">-</span>               <span class="token punctuation">---</span><span class="token punctuation">---</span><span class="token punctuation">-</span>  Normal   Scheduled  87s                default<span class="token punctuation">-</span>scheduler  Successfully assigned default/nginx to k8s<span class="token punctuation">-</span>node1  Normal   Killing    28s                kubelet            Container nginx failed liveness probe<span class="token punctuation">,</span> will be restarted  Normal   Pulled     27s (x2 over 86s)  kubelet            Container image "nginx<span class="token punctuation">:</span>1.14<span class="token punctuation">-</span>alpine" already present on machine  Normal   Created    27s (x2 over 86s)  kubelet            Created container nginx  Normal   Started    27s (x2 over 86s)  kubelet            Started container nginx  <span class="token key atrule">Warning  Unhealthy  8s (x9 over 78s)   kubelet            Readiness probe failed</span><span class="token punctuation">:</span> <span class="token key atrule">dial tcp 10.244.36.89:8080</span><span class="token punctuation">:</span> <span class="token key atrule">connect</span><span class="token punctuation">:</span> connection refused  <span class="token key atrule">Warning  Unhealthy  8s (x4 over 68s)   kubelet            Liveness probe failed</span><span class="token punctuation">:</span> <span class="token key atrule">dial tcp 10.244.36.89:8080</span><span class="token punctuation">:</span> <span class="token key atrule">connect</span><span class="token punctuation">:</span> connection refused<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="就绪探针"><a href="#就绪探针" class="headerlink" title="就绪探针"></a>就绪探针</h2><p><strong>Readiness probe</strong>的配置跟<strong>liveness probe</strong>很像。唯一的不同是使用 <strong>readinessProbe</strong>而不是<strong>livenessProbe</strong>。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">readinessProbe</span><span class="token punctuation">:</span>  <span class="token key atrule">exec</span><span class="token punctuation">:</span>    <span class="token key atrule">command</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> cat    <span class="token punctuation">-</span> /tmp/healthy  <span class="token key atrule">initialDelaySeconds</span><span class="token punctuation">:</span> <span class="token number">5</span>  <span class="token key atrule">periodSeconds</span><span class="token punctuation">:</span> <span class="token number">5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Configure-Probes"><a href="#Configure-Probes" class="headerlink" title="Configure Probes"></a>Configure Probes</h2><p>Probe 中有很多精确和详细的配置，通过它们您能准确的控制 liveness 和 readiness 检查</p><ul><li><strong>initialDelaySeconds</strong>：容器启动后第一次执行探测是需要等待多少秒。</li><li><strong>periodSeconds</strong>：执行探测的频率。默认是10秒，最小1秒。</li><li><strong>timeoutSeconds</strong>：探测超时时间。默认1秒，最小1秒。</li><li><strong>successThreshold</strong>：探测失败后，最少连续探测成功多少次才被认定为成功。默认是 1。对于 liveness 必须是 1。最小值是 1。</li><li><strong>failureThreshold</strong>：探测成功后，最少连续探测失败多少次才被认定为失败。默认是 3。最小值是 1。</li></ul><p>HTTP probe 中可以给 httpGet设置其他配置项：</p><ul><li><strong>host</strong>：连接的主机名，默认连接到 pod 的 IP。您可能想在 http header 中设置 “Host” 而不是使用 IP。</li><li><strong>scheme</strong>：连接使用的 schema，默认HTTP。</li><li><strong>path</strong>: 访问的HTTP server 的 path。</li><li><strong>httpHeaders</strong>：自定义请求的 header。HTTP运行重复的 header。</li><li><strong>port</strong>：访问的容器的端口名字或者端口号。端口号必须介于 1 和 65525 之间。</li></ul><h2 id="启动退出动作"><a href="#启动退出动作" class="headerlink" title="启动退出动作"></a>启动退出动作</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> lifecycle<span class="token punctuation">-</span>demo<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">containers</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> lifecycle<span class="token punctuation">-</span>demo<span class="token punctuation">-</span>container      <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx      <span class="token key atrule">lifecycle</span><span class="token punctuation">:</span>        <span class="token key atrule">postStart</span><span class="token punctuation">:</span>          <span class="token key atrule">exec</span><span class="token punctuation">:</span>            <span class="token key atrule">command</span><span class="token punctuation">:</span>              <span class="token punctuation">-</span> <span class="token string">"/bin/sh"</span>              <span class="token punctuation">-</span> <span class="token string">"-c"</span>              <span class="token punctuation">-</span> <span class="token string">"echo Hello from the postStart handler &gt; /usr/share/message"</span>        <span class="token key atrule">preStop</span><span class="token punctuation">:</span>          <span class="token key atrule">exec</span><span class="token punctuation">:</span>            <span class="token key atrule">command</span><span class="token punctuation">:</span>              <span class="token punctuation">-</span> <span class="token string">"/bin/sh"</span>              <span class="token punctuation">-</span> <span class="token string">"-c"</span>              <span class="token punctuation">-</span> <span class="token string">"echo Hello from the poststop handler &gt; /usr/share/message"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>其他插件 使用</title>
      <link href="/kubernetes/qi-ta-cha-jian.html"/>
      <url>/kubernetes/qi-ta-cha-jian.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、Grafana-Prometheus-node-exporter"><a href="#一、Grafana-Prometheus-node-exporter" class="headerlink" title="一、Grafana + Prometheus +node-exporter"></a>一、Grafana + Prometheus +node-exporter</h2><blockquote><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>1.参考地址：<a href="https://www.jianshu.com/p/80de3bb0ec18">https://www.jianshu.com/p/80de3bb0ec18</a><br>2.需要修改镜像prometheus、Grafana版本<br>3.调整nfs挂载pvc信息<br>4.调整rolebind中代理问题 </p><ul><li><strong>resources: [“nodes”, “nodes/proxy”, “nodes/metrics”, “services”, “endpoints”, “pods”]</strong></li></ul></blockquote><h3 id="1-node-exporter-yaml"><a href="#1-node-exporter-yaml" class="headerlink" title="1.node-exporter.yaml"></a>1.node-exporter.yaml</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">kind</span><span class="token punctuation">:</span> DaemonSet<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>   <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter  <span class="token key atrule">name</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ns<span class="token punctuation">-</span>monitor<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">revisionHistoryLimit</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter          <span class="token key atrule">image</span><span class="token punctuation">:</span> prom/node<span class="token punctuation">-</span>exporter<span class="token punctuation">:</span>v0.16.0          <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">9100</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP              <span class="token key atrule">name</span><span class="token punctuation">:</span>http      <span class="token key atrule">hostNetwork</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># 获得Node的物理指标信息</span>      <span class="token key atrule">hostPID</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># 获得Node的物理指标信息</span><span class="token comment">#      tolerations:  # Master节点</span><span class="token comment">#        - effect: NoSchedule</span><span class="token comment">#          operator: Exists</span><span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter  <span class="token key atrule">name</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter<span class="token punctuation">-</span>service  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ns<span class="token punctuation">-</span>monitor<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span>http      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9100</span>      <span class="token key atrule">nodePort</span><span class="token punctuation">:</span> <span class="token number">31672</span>      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP  <span class="token key atrule">type</span><span class="token punctuation">:</span> NodePort  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-Prometheus-yaml"><a href="#2-Prometheus-yaml" class="headerlink" title="2.Prometheus.yaml"></a>2.Prometheus.yaml</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">kind</span><span class="token punctuation">:</span> DaemonSet<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>   <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter  <span class="token key atrule">name</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ns<span class="token punctuation">-</span>monitor<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">revisionHistoryLimit</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter          <span class="token key atrule">image</span><span class="token punctuation">:</span> prom/node<span class="token punctuation">-</span>exporter<span class="token punctuation">:</span>v0.16.0          <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">9100</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP              <span class="token key atrule">name</span><span class="token punctuation">:</span>http      <span class="token key atrule">hostNetwork</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># 获得Node的物理指标信息</span>      <span class="token key atrule">hostPID</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># 获得Node的物理指标信息</span><span class="token comment">#      tolerations:  # Master节点</span><span class="token comment">#        - effect: NoSchedule</span><span class="token comment">#          operator: Exists</span><span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter  <span class="token key atrule">name</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter<span class="token punctuation">-</span>service  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ns<span class="token punctuation">-</span>monitor<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span>http      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9100</span>      <span class="token key atrule">nodePort</span><span class="token punctuation">:</span> <span class="token number">31672</span>      <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP  <span class="token key atrule">type</span><span class="token punctuation">:</span> NodePort  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>exporter<span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>master prometheus<span class="token punctuation">]</span><span class="token comment"># ls</span>grafana.yaml  node<span class="token punctuation">-</span>exporter.yaml  Prometheus.yaml<span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>master prometheus<span class="token punctuation">]</span><span class="token comment"># cat Prometheus.yaml </span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"nodes"</span><span class="token punctuation">,</span> <span class="token string">"nodes/proxy"</span><span class="token punctuation">,</span> <span class="token string">"nodes/metrics"</span><span class="token punctuation">,</span> <span class="token string">"services"</span><span class="token punctuation">,</span> <span class="token string">"endpoints"</span><span class="token punctuation">,</span> <span class="token string">"pods"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"list"</span><span class="token punctuation">,</span> <span class="token string">"watch"</span><span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"configmaps"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"get"</span><span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token key atrule">nonResourceURLs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"/metrics"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"get"</span><span class="token punctuation">]</span><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ns<span class="token punctuation">-</span>monitor  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRoleBinding<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token key atrule">subjects</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount    <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ns<span class="token punctuation">-</span>monitor<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>  <span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole  <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>conf  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ns<span class="token punctuation">-</span>monitor  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> prometheus<span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">prometheus.yml</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token punctuation">-</span>    <span class="token comment"># my global config</span>    <span class="token key atrule">global</span><span class="token punctuation">:</span>      <span class="token key atrule">scrape_interval</span><span class="token punctuation">:</span>     15s  <span class="token comment"># Set the scrape interval to every 15 seconds. Default is every 1 minute.</span>      <span class="token key atrule">evaluation_interval</span><span class="token punctuation">:</span> 15s  <span class="token comment"># Evaluate rules every 15 seconds. The default is every 1 minute.</span>      <span class="token comment"># scrape_timeout is set to the global default (10s).</span>    <span class="token comment"># Alertmanager configuration</span>    <span class="token key atrule">alerting</span><span class="token punctuation">:</span>      <span class="token key atrule">alertmanagers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">static_configs</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">targets</span><span class="token punctuation">:</span>          <span class="token comment"># - alertmanager:9093</span>    <span class="token comment"># Load rules once and periodically evaluate them according to the global 'evaluation_interval'.</span>    <span class="token key atrule">rule_files</span><span class="token punctuation">:</span>      <span class="token comment"># - "first_rules.yml"</span>      <span class="token comment"># - "second_rules.yml"</span>    <span class="token comment"># A scrape configuration containing exactly one endpoint to scrape:</span>    <span class="token comment"># Here it's Prometheus itself.</span>    <span class="token key atrule">scrape_configs</span><span class="token punctuation">:</span>      <span class="token comment"># The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.</span>      <span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> <span class="token string">'prometheus'</span>        <span class="token comment"># metrics_path defaults to '/metrics'</span>        <span class="token comment"># scheme defaults to 'http'.</span>        <span class="token key atrule">static_configs</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">targets</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'localhost:9090'</span><span class="token punctuation">]</span>                <span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> <span class="token string">'grafana'</span>        <span class="token key atrule">static_configs</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">targets</span><span class="token punctuation">:</span>              <span class="token punctuation">-</span> <span class="token string">'grafana-service.ns-monitor:3000'</span>      <span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> <span class="token string">'kubernetes-apiservers'</span>        <span class="token key atrule">kubernetes_sd_configs</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">role</span><span class="token punctuation">:</span> endpoints        <span class="token comment"># Default to scraping over https. If required, just disable this or change to</span>        <span class="token comment"># `http`.</span>        <span class="token key atrule">scheme</span><span class="token punctuation">:</span> https        <span class="token comment"># This TLS &amp; bearer token file config is used to connect to the actual scrape</span>        <span class="token comment"># endpoints for cluster components. This is separate to discovery auth</span>        <span class="token comment"># configuration because discovery &amp; scraping are two separate concerns in</span>        <span class="token comment"># Prometheus. The discovery auth config is automatic if Prometheus runs inside</span>        <span class="token comment"># the cluster. Otherwise, more config options have to be provided within the</span>        <span class="token comment"># &lt;kubernetes_sd_config&gt;.</span>        <span class="token key atrule">tls_config</span><span class="token punctuation">:</span>          <span class="token key atrule">ca_file</span><span class="token punctuation">:</span> /var/run/secrets/kubernetes.io/serviceaccount/ca.crt          <span class="token comment"># If your node certificates are self-signed or use a different CA to the</span>          <span class="token comment"># master CA, then disable certificate verification below. Note that</span>          <span class="token comment"># certificate verification is an integral part of a secure infrastructure</span>          <span class="token comment"># so this should only be disabled in a controlled environment. You can</span>          <span class="token comment"># disable certificate verification by uncommenting the line below.</span>          <span class="token comment">#</span>          <span class="token comment"># insecure_skip_verify: true</span>        <span class="token key atrule">bearer_token_file</span><span class="token punctuation">:</span> /var/run/secrets/kubernetes.io/serviceaccount/token        <span class="token comment"># Keep only the default/kubernetes service endpoints for the https port. This</span>        <span class="token comment"># will add targets for each API server which Kubernetes adds an endpoint to</span>        <span class="token comment"># the default/kubernetes service.</span>        <span class="token key atrule">relabel_configs</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_namespace<span class="token punctuation">,</span> __meta_kubernetes_service_name<span class="token punctuation">,</span> __meta_kubernetes_endpoint_port_name<span class="token punctuation">]</span>          <span class="token key atrule">action</span><span class="token punctuation">:</span> keep          <span class="token key atrule">regex</span><span class="token punctuation">:</span> default;kubernetes;https                <span class="token comment"># Scrape config for nodes (kubelet).</span>      <span class="token comment">#</span>      <span class="token comment"># Rather than connecting directly to the node, the scrape is proxied though the</span>      <span class="token comment"># Kubernetes apiserver.  This means it will work if Prometheus is running out of</span>      <span class="token comment"># cluster, or can't connect to nodes for some other reason (e.g. because of</span>      <span class="token comment"># firewalling).</span>      <span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> <span class="token string">'kubernetes-nodes'</span>        <span class="token comment"># Default to scraping over https. If required, just disable this or change to</span>        <span class="token comment"># `http`.</span>        <span class="token key atrule">scheme</span><span class="token punctuation">:</span> https        <span class="token comment"># This TLS &amp; bearer token file config is used to connect to the actual scrape</span>        <span class="token comment"># endpoints for cluster components. This is separate to discovery auth</span>        <span class="token comment"># configuration because discovery &amp; scraping are two separate concerns in</span>        <span class="token comment"># Prometheus. The discovery auth config is automatic if Prometheus runs inside</span>        <span class="token comment"># the cluster. Otherwise, more config options have to be provided within the</span>        <span class="token comment"># &lt;kubernetes_sd_config&gt;.</span>        <span class="token key atrule">tls_config</span><span class="token punctuation">:</span>          <span class="token key atrule">ca_file</span><span class="token punctuation">:</span> /var/run/secrets/kubernetes.io/serviceaccount/ca.crt        <span class="token key atrule">bearer_token_file</span><span class="token punctuation">:</span> /var/run/secrets/kubernetes.io/serviceaccount/token        <span class="token key atrule">kubernetes_sd_configs</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">role</span><span class="token punctuation">:</span> node        <span class="token key atrule">relabel_configs</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">action</span><span class="token punctuation">:</span> labelmap          <span class="token key atrule">regex</span><span class="token punctuation">:</span> __meta_kubernetes_node_label_(.+)        <span class="token punctuation">-</span> <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __address__          <span class="token key atrule">replacement</span><span class="token punctuation">:</span> kubernetes.default.svc<span class="token punctuation">:</span><span class="token number">443</span>        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_node_name<span class="token punctuation">]</span>          <span class="token key atrule">regex</span><span class="token punctuation">:</span> (.+)          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __metrics_path__          <span class="token key atrule">replacement</span><span class="token punctuation">:</span> /api/v1/nodes/$<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span>/proxy/metrics      <span class="token comment"># Scrape config for Kubelet cAdvisor.</span>      <span class="token comment">#</span>      <span class="token comment"># This is required for Kubernetes 1.7.3 and later, where cAdvisor metrics</span>      <span class="token comment"># (those whose names begin with 'container_') have been removed from the</span>      <span class="token comment"># Kubelet metrics endpoint.  This job scrapes the cAdvisor endpoint to</span>      <span class="token comment"># retrieve those metrics.</span>      <span class="token comment">#</span>      <span class="token comment"># In Kubernetes 1.7.0-1.7.2, these metrics are only exposed on the cAdvisor</span>      <span class="token comment"># HTTP endpoint; use "replacement: /api/v1/nodes/${1}:4194/proxy/metrics"</span>      <span class="token comment"># in that case (and ensure cAdvisor's HTTP server hasn't been disabled with</span>      <span class="token comment"># the --cadvisor-port=0 Kubelet flag).</span>      <span class="token comment">#</span>      <span class="token comment"># This job is not necessary and should be removed in Kubernetes 1.6 and</span>      <span class="token comment"># earlier versions, or it will cause the metrics to be scraped twice.</span>      <span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> <span class="token string">'kubernetes-cadvisor'</span>        <span class="token comment"># Default to scraping over https. If required, just disable this or change to</span>        <span class="token comment"># `http`.</span>        <span class="token key atrule">scheme</span><span class="token punctuation">:</span> https        <span class="token comment"># This TLS &amp; bearer token file config is used to connect to the actual scrape</span>        <span class="token comment"># endpoints for cluster components. This is separate to discovery auth</span>        <span class="token comment"># configuration because discovery &amp; scraping are two separate concerns in</span>        <span class="token comment"># Prometheus. The discovery auth config is automatic if Prometheus runs inside</span>        <span class="token comment"># the cluster. Otherwise, more config options have to be provided within the</span>        <span class="token comment"># &lt;kubernetes_sd_config&gt;.</span>        <span class="token key atrule">tls_config</span><span class="token punctuation">:</span>          <span class="token key atrule">ca_file</span><span class="token punctuation">:</span> /var/run/secrets/kubernetes.io/serviceaccount/ca.crt        <span class="token key atrule">bearer_token_file</span><span class="token punctuation">:</span> /var/run/secrets/kubernetes.io/serviceaccount/token        <span class="token key atrule">kubernetes_sd_configs</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">role</span><span class="token punctuation">:</span> node        <span class="token key atrule">relabel_configs</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">action</span><span class="token punctuation">:</span> labelmap          <span class="token key atrule">regex</span><span class="token punctuation">:</span> __meta_kubernetes_node_label_(.+)        <span class="token punctuation">-</span> <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __address__          <span class="token key atrule">replacement</span><span class="token punctuation">:</span> kubernetes.default.svc<span class="token punctuation">:</span><span class="token number">443</span>        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_node_name<span class="token punctuation">]</span>          <span class="token key atrule">regex</span><span class="token punctuation">:</span> (.+)          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __metrics_path__          <span class="token key atrule">replacement</span><span class="token punctuation">:</span> /api/v1/nodes/$<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span>/proxy/metrics/cadvisor      <span class="token comment"># Scrape config for service endpoints.</span>      <span class="token comment">#</span>      <span class="token comment"># The relabeling allows the actual service scrape endpoint to be configured</span>      <span class="token comment"># via the following annotations:</span>      <span class="token comment">#</span>      <span class="token comment"># * `prometheus.io/scrape`: Only scrape services that have a value of `true`</span>      <span class="token comment"># * `prometheus.io/scheme`: If the metrics endpoint is secured then you will need</span>      <span class="token comment"># to set this to `https` &amp; most likely set the `tls_config` of the scrape config.</span>      <span class="token comment"># * `prometheus.io/path`: If the metrics path is not `/metrics` override this.</span>      <span class="token comment"># * `prometheus.io/port`: If the metrics are exposed on a different port to the</span>      <span class="token comment"># service then set this appropriately.</span>      <span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> <span class="token string">'kubernetes-service-endpoints'</span>        <span class="token key atrule">kubernetes_sd_configs</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">role</span><span class="token punctuation">:</span> endpoints        <span class="token key atrule">relabel_configs</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_service_annotation_prometheus_io_scrape<span class="token punctuation">]</span>          <span class="token key atrule">action</span><span class="token punctuation">:</span> keep          <span class="token key atrule">regex</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_service_annotation_prometheus_io_scheme<span class="token punctuation">]</span>          <span class="token key atrule">action</span><span class="token punctuation">:</span> replace          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __scheme__          <span class="token key atrule">regex</span><span class="token punctuation">:</span> (https<span class="token punctuation">?</span>)        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_service_annotation_prometheus_io_path<span class="token punctuation">]</span>          <span class="token key atrule">action</span><span class="token punctuation">:</span> replace          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __metrics_path__          <span class="token key atrule">regex</span><span class="token punctuation">:</span> (.+)        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__address__<span class="token punctuation">,</span> __meta_kubernetes_service_annotation_prometheus_io_port<span class="token punctuation">]</span>          <span class="token key atrule">action</span><span class="token punctuation">:</span> replace          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __address__          <span class="token key atrule">regex</span><span class="token punctuation">:</span> (<span class="token punctuation">[</span>^<span class="token punctuation">:</span><span class="token punctuation">]</span>+)(<span class="token punctuation">?</span><span class="token punctuation">:</span><span class="token punctuation">:</span>\d+)<span class="token punctuation">?</span>;(\d+)          <span class="token key atrule">replacement</span><span class="token punctuation">:</span> $1<span class="token punctuation">:</span>$2        <span class="token punctuation">-</span> <span class="token key atrule">action</span><span class="token punctuation">:</span> labelmap          <span class="token key atrule">regex</span><span class="token punctuation">:</span> __meta_kubernetes_service_label_(.+)        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_namespace<span class="token punctuation">]</span>          <span class="token key atrule">action</span><span class="token punctuation">:</span> replace          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> kubernetes_namespace        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_service_name<span class="token punctuation">]</span>          <span class="token key atrule">action</span><span class="token punctuation">:</span> replace          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> kubernetes_name      <span class="token comment"># Example scrape config for probing services via the Blackbox Exporter.</span>      <span class="token comment">#</span>      <span class="token comment"># The relabeling allows the actual service scrape endpoint to be configured</span>      <span class="token comment"># via the following annotations:</span>      <span class="token comment">#</span>      <span class="token comment"># * `prometheus.io/probe`: Only probe services that have a value of `true`</span>      <span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> <span class="token string">'kubernetes-services'</span>        <span class="token key atrule">metrics_path</span><span class="token punctuation">:</span> /probe        <span class="token key atrule">params</span><span class="token punctuation">:</span>          <span class="token key atrule">module</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>http_2xx<span class="token punctuation">]</span>        <span class="token key atrule">kubernetes_sd_configs</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">role</span><span class="token punctuation">:</span> service        <span class="token key atrule">relabel_configs</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_service_annotation_prometheus_io_probe<span class="token punctuation">]</span>          <span class="token key atrule">action</span><span class="token punctuation">:</span> keep          <span class="token key atrule">regex</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__address__<span class="token punctuation">]</span>          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __param_target        <span class="token punctuation">-</span> <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __address__          <span class="token key atrule">replacement</span><span class="token punctuation">:</span> blackbox<span class="token punctuation">-</span>exporter.example.com<span class="token punctuation">:</span><span class="token number">9115</span>        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__param_target<span class="token punctuation">]</span>          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> instance        <span class="token punctuation">-</span> <span class="token key atrule">action</span><span class="token punctuation">:</span> labelmap          <span class="token key atrule">regex</span><span class="token punctuation">:</span> __meta_kubernetes_service_label_(.+)        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_namespace<span class="token punctuation">]</span>          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> kubernetes_namespace        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_service_name<span class="token punctuation">]</span>          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> kubernetes_name      <span class="token comment"># Example scrape config for probing ingresses via the Blackbox Exporter.</span>      <span class="token comment">#</span>      <span class="token comment"># The relabeling allows the actual ingress scrape endpoint to be configured</span>      <span class="token comment"># via the following annotations:</span>      <span class="token comment">#</span>      <span class="token comment"># * `prometheus.io/probe`: Only probe services that have a value of `true`</span>      <span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> <span class="token string">'kubernetes-ingresses'</span>        <span class="token key atrule">metrics_path</span><span class="token punctuation">:</span> /probe        <span class="token key atrule">params</span><span class="token punctuation">:</span>          <span class="token key atrule">module</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>http_2xx<span class="token punctuation">]</span>        <span class="token key atrule">kubernetes_sd_configs</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">role</span><span class="token punctuation">:</span> ingress        <span class="token key atrule">relabel_configs</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_ingress_annotation_prometheus_io_probe<span class="token punctuation">]</span>            <span class="token key atrule">action</span><span class="token punctuation">:</span> keep            <span class="token key atrule">regex</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>          <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_ingress_scheme<span class="token punctuation">,</span>__address__<span class="token punctuation">,</span>__meta_kubernetes_ingress_path<span class="token punctuation">]</span>            <span class="token key atrule">regex</span><span class="token punctuation">:</span> (.+);(.+);(.+)            <span class="token key atrule">replacement</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">:</span>//$<span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span>$<span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">}</span>            <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __param_target          <span class="token punctuation">-</span> <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __address__            <span class="token key atrule">replacement</span><span class="token punctuation">:</span> blackbox<span class="token punctuation">-</span>exporter.example.com<span class="token punctuation">:</span><span class="token number">9115</span>          <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__param_target<span class="token punctuation">]</span>            <span class="token key atrule">target_label</span><span class="token punctuation">:</span> instance          <span class="token punctuation">-</span> <span class="token key atrule">action</span><span class="token punctuation">:</span> labelmap            <span class="token key atrule">regex</span><span class="token punctuation">:</span> __meta_kubernetes_ingress_label_(.+)          <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_namespace<span class="token punctuation">]</span>            <span class="token key atrule">target_label</span><span class="token punctuation">:</span> kubernetes_namespace          <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_ingress_name<span class="token punctuation">]</span>            <span class="token key atrule">target_label</span><span class="token punctuation">:</span> kubernetes_name      <span class="token comment"># Example scrape config for pods</span>      <span class="token comment">#</span>      <span class="token comment"># The relabeling allows the actual pod scrape endpoint to be configured via the</span>      <span class="token comment"># following annotations:</span>      <span class="token comment">#</span>      <span class="token comment"># * `prometheus.io/scrape`: Only scrape pods that have a value of `true`</span>      <span class="token comment"># * `prometheus.io/path`: If the metrics path is not `/metrics` override this.</span>      <span class="token comment"># * `prometheus.io/port`: Scrape the pod on the indicated port instead of the</span>      <span class="token comment"># pod's declared ports (default is a port-free target if none are declared).</span>      <span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> <span class="token string">'kubernetes-pods'</span>        <span class="token key atrule">kubernetes_sd_configs</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">role</span><span class="token punctuation">:</span> pod        <span class="token key atrule">relabel_configs</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_pod_annotation_prometheus_io_scrape<span class="token punctuation">]</span>          <span class="token key atrule">action</span><span class="token punctuation">:</span> keep          <span class="token key atrule">regex</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_pod_annotation_prometheus_io_path<span class="token punctuation">]</span>          <span class="token key atrule">action</span><span class="token punctuation">:</span> replace          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __metrics_path__          <span class="token key atrule">regex</span><span class="token punctuation">:</span> (.+)        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__address__<span class="token punctuation">,</span> __meta_kubernetes_pod_annotation_prometheus_io_port<span class="token punctuation">]</span>          <span class="token key atrule">action</span><span class="token punctuation">:</span> replace          <span class="token key atrule">regex</span><span class="token punctuation">:</span> (<span class="token punctuation">[</span>^<span class="token punctuation">:</span><span class="token punctuation">]</span>+)(<span class="token punctuation">?</span><span class="token punctuation">:</span><span class="token punctuation">:</span>\d+)<span class="token punctuation">?</span>;(\d+)          <span class="token key atrule">replacement</span><span class="token punctuation">:</span> $1<span class="token punctuation">:</span>$2          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __address__        <span class="token punctuation">-</span> <span class="token key atrule">action</span><span class="token punctuation">:</span> labelmap          <span class="token key atrule">regex</span><span class="token punctuation">:</span> __meta_kubernetes_pod_label_(.+)        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_namespace<span class="token punctuation">]</span>          <span class="token key atrule">action</span><span class="token punctuation">:</span> replace          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> kubernetes_namespace        <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__meta_kubernetes_pod_name<span class="token punctuation">]</span>          <span class="token key atrule">action</span><span class="token punctuation">:</span> replace          <span class="token key atrule">target_label</span><span class="token punctuation">:</span> kubernetes_pod_name<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>rules  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ns<span class="token punctuation">-</span>monitor  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> prometheus<span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">cpu-usage.rule</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">    groups:      - name: NodeCPUUsage        rules:          - alert: NodeCPUUsage            expr: (100 - (avg by (instance) (irate(node_cpu{name="node-exporter",mode="idle"}[5m])) * 100)) &gt; 75            for: 2m            labels:              severity: "page"            annotations:              summary: "{{$labels.instance}}: High CPU usage detected"              description: "{{$labels.instance}}: CPU usage is above 75% (current value is: {{ $value }})"</span><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PersistentVolume<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"prometheus-data-pv"</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>data<span class="token punctuation">-</span>pv    <span class="token key atrule">release</span><span class="token punctuation">:</span> stable<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">capacity</span><span class="token punctuation">:</span>    <span class="token key atrule">storage</span><span class="token punctuation">:</span> 5Gi  <span class="token key atrule">accessModes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> ReadWriteOnce  <span class="token key atrule">persistentVolumeReclaimPolicy</span><span class="token punctuation">:</span> Delete  <span class="token key atrule">storageClassName</span><span class="token punctuation">:</span> managed<span class="token punctuation">-</span>nfs<span class="token punctuation">-</span>storage  <span class="token key atrule">nfs</span><span class="token punctuation">:</span>    <span class="token key atrule">path</span><span class="token punctuation">:</span> /nfsdata/prometheus/data    <span class="token key atrule">server</span><span class="token punctuation">:</span> 192.168.56.11<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PersistentVolumeClaim<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>data<span class="token punctuation">-</span>pvc  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ns<span class="token punctuation">-</span>monitor<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">accessModes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> ReadWriteOnce  <span class="token key atrule">resources</span><span class="token punctuation">:</span>    <span class="token key atrule">requests</span><span class="token punctuation">:</span>      <span class="token key atrule">storage</span><span class="token punctuation">:</span> 5Gi  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>data<span class="token punctuation">-</span>pv      <span class="token key atrule">release</span><span class="token punctuation">:</span> stable<span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> prometheus  <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ns<span class="token punctuation">-</span>monitor<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">revisionHistoryLimit</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> prometheus  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> prometheus    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> prometheus      <span class="token key atrule">securityContext</span><span class="token punctuation">:</span>        <span class="token key atrule">runAsUser</span><span class="token punctuation">:</span> <span class="token number">0</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus          <span class="token key atrule">image</span><span class="token punctuation">:</span> prom/prometheus<span class="token punctuation">:</span>v2.30.0          <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent          <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /prometheus              <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>data<span class="token punctuation">-</span>volume            <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /etc/prometheus/prometheus.yml              <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>conf<span class="token punctuation">-</span>volume              <span class="token key atrule">subPath</span><span class="token punctuation">:</span> prometheus.yml            <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /etc/prometheus/rules              <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>rules<span class="token punctuation">-</span>volume          <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">9090</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>data<span class="token punctuation">-</span>volume          <span class="token key atrule">persistentVolumeClaim</span><span class="token punctuation">:</span>            <span class="token key atrule">claimName</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>data<span class="token punctuation">-</span>pvc        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>conf<span class="token punctuation">-</span>volume          <span class="token key atrule">configMap</span><span class="token punctuation">:</span>            <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>conf        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>rules<span class="token punctuation">-</span>volume          <span class="token key atrule">configMap</span><span class="token punctuation">:</span>            <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>rules      <span class="token key atrule">tolerations</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>role.kubernetes.io/master          <span class="token key atrule">effect</span><span class="token punctuation">:</span> NoSchedule<span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">prometheus.io/scrape</span><span class="token punctuation">:</span> <span class="token string">'true'</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> prometheus  <span class="token key atrule">name</span><span class="token punctuation">:</span> prometheus<span class="token punctuation">-</span>service  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ns<span class="token punctuation">-</span>monitor<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9090</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">9090</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> prometheus  <span class="token key atrule">type</span><span class="token punctuation">:</span> NodePort<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-grafana-yaml"><a href="#3-grafana-yaml" class="headerlink" title="3.grafana.yaml"></a>3.grafana.yaml</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PersistentVolumeClaim<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> grafana<span class="token punctuation">-</span>data<span class="token punctuation">-</span>pvc  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ns<span class="token punctuation">-</span>monitor<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">accessModes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> ReadWriteOnce  <span class="token key atrule">resources</span><span class="token punctuation">:</span>    <span class="token key atrule">requests</span><span class="token punctuation">:</span>      <span class="token key atrule">storage</span><span class="token punctuation">:</span> 5Gi<span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> grafana  <span class="token key atrule">name</span><span class="token punctuation">:</span> grafana  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ns<span class="token punctuation">-</span>monitor<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">revisionHistoryLimit</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> grafana  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> grafana    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">securityContext</span><span class="token punctuation">:</span>        <span class="token key atrule">runAsUser</span><span class="token punctuation">:</span> <span class="token number">0</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> grafana          <span class="token key atrule">image</span><span class="token punctuation">:</span> grafana/grafana<span class="token punctuation">:</span>8.2.0          <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent          <span class="token key atrule">env</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> GF_AUTH_BASIC_ENABLED              <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">"true"</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> GF_AUTH_ANONYMOUS_ENABLED              <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">"false"</span>          <span class="token key atrule">readinessProbe</span><span class="token punctuation">:</span>            <span class="token key atrule">httpGet</span><span class="token punctuation">:</span>              <span class="token key atrule">path</span><span class="token punctuation">:</span> /login              <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">3000</span>          <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /var/lib/grafana              <span class="token key atrule">name</span><span class="token punctuation">:</span> grafana<span class="token punctuation">-</span>data<span class="token punctuation">-</span>volume          <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">3000</span>              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> grafana<span class="token punctuation">-</span>data<span class="token punctuation">-</span>volume          <span class="token key atrule">persistentVolumeClaim</span><span class="token punctuation">:</span>            <span class="token key atrule">claimName</span><span class="token punctuation">:</span> grafana<span class="token punctuation">-</span>data<span class="token punctuation">-</span>pvc<span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> grafana  <span class="token key atrule">name</span><span class="token punctuation">:</span> grafana<span class="token punctuation">-</span>service  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> ns<span class="token punctuation">-</span>monitor<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">3000</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">3000</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> grafana  <span class="token key atrule">type</span><span class="token punctuation">:</span> NodePort<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s相关基础命令 使用</title>
      <link href="/kubernetes/k8s-ji-chu-ming-ling-he-qi-ta-qing-kuang-ji-lu.html"/>
      <url>/kubernetes/k8s-ji-chu-ming-ling-he-qi-ta-qing-kuang-ji-lu.html</url>
      
        <content type="html"><![CDATA[<h1 id="k8s"><a href="#k8s" class="headerlink" title="k8s"></a>k8s</h1><h2 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h2><h4 id="参考地址-："><a href="#参考地址-：" class="headerlink" title="参考地址 ："></a>参考地址 ：</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java">https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>cnblogs<span class="token punctuation">.</span>com<span class="token operator">/</span>tz90<span class="token operator">/</span>p<span class="token operator">/</span><span class="token number">15466646.</span>html#最新、最全、最详细的 <span class="token constant">K8S</span> 学习笔记总结（<span class="token number">2021</span>最新版）https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>jianshu<span class="token punctuation">.</span>com<span class="token operator">/</span>p<span class="token operator">/</span><span class="token number">2</span>cbdf5b65bb7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="二-命令"><a href="#二-命令" class="headerlink" title="二.命令"></a>二.命令</h2><h4 id="命令自动补全："><a href="#命令自动补全：" class="headerlink" title="命令自动补全："></a>命令自动补全：</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@k8s-master01 ~<span class="token punctuation">]</span><span class="token comment"># yum install -y bash-completion</span><span class="token punctuation">[</span>root@k8s-master01 ~<span class="token punctuation">]</span><span class="token comment"># source /usr/share/bash-completion/bash_completion</span><span class="token punctuation">[</span>root@k8s-master01 ~<span class="token punctuation">]</span><span class="token comment"># source &lt;(kubectl completion bash)</span><span class="token punctuation">[</span>root@k8s-master01 ~<span class="token punctuation">]</span><span class="token comment"># echo "source &lt;(kubectl completion bash)" &gt;&gt; ~/.bashrc</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-查看类常用命令"><a href="#1-查看类常用命令" class="headerlink" title="1.查看类常用命令"></a>1.查看类常用命令</h4><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment">#生成加入token</span><span class="token key attr-name">kubeadm</span> <span class="token value attr-value">join 192.168.56.12:6443 --token qj0nng.wmfof5ego8i5bx5f --discovery-token-ca-cert-hash sha256:ed86c67741198cf7da9a8775db01672d00dfa6833d3e9059adb3ebdff09aebc8 </span><span class="token comment"># 查看node，pod，svc，cs，event，cm,sa ,deploy jobs ,ing ingresses</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">get pod </span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">get nod</span><span class="token comment">#查看命名空间</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">-n kube-system</span><span class="token comment">#查看node、pod启动情况</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">describe pod nginx-6799fc88d8-lwqb7</span><span class="token comment">#查看日志</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">logs --tail=300 -f nginx-6799fc88d8-lwqb7</span><span class="token comment">#调试容器</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">debug -n  zstack edge-vm-controller-6bbfc84f4f-hj66v   --image centos --target edge-vm-controller  -it</span><span class="token comment">#创建一份副本进行测试</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">debug cdebug-64cd86798b-sjxrl -it --image=centos --share-processes --copy-to=cdebug-debug -- sh</span><span class="token comment">#调试主机</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">debug node/10.69.202.146 -it --image=centos -- shchroot /host</span><span class="token comment">#进入容器</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">exec nginx-6799fc88d8-lwqb7 -it -- /bin/sh</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">exec mypod -c ruby-container -it -- bash</span><span class="token comment"># 切换命名空间</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">config set-context $(kubectl config current-context) --namespace=kube-ops</span><span class="token comment"># 查看pod的详细信息，以yaml格式或json格式显示</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">get pods -o yaml</span><span class="token comment"># 查看pod的标签信息</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">get pod -A --show-labels </span><span class="token comment"># 根据Selector（label query）来查询pod</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">get pod -A --selector="k8s-app=kube-dns"</span><span class="token comment">#查看运行pod的环境变量</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">exec podName env</span><span class="token comment"># 查看系统资源利用率</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">exec nginx-app-4028413181-cnt1i ps aux</span><span class="token comment">#权限判断</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">auth can-i create pods --all-namespaces</span><span class="token comment">#查看job</span><span class="token key attr-name">kubect</span> <span class="token value attr-value">get job  \ kubect get cronjob</span><span class="token comment">#查看所有存储信息记录</span><span class="token key attr-name">df</span> <span class="token value attr-value">-Th</span><span class="token comment">#查看组件日志</span><span class="token key attr-name">journalctl</span> <span class="token value attr-value">-l -u kube-apiserver</span><span class="token key attr-name">journalctl</span> <span class="token value attr-value">-l -u kube-controller-manager</span><span class="token key attr-name">journalctl</span> <span class="token value attr-value">-l -u kube-scheduler</span><span class="token key attr-name">journalctl</span> <span class="token value attr-value">-l -u kubelet</span><span class="token key attr-name">journalctl</span> <span class="token value attr-value">-l -u kube-proxy</span><span class="token comment">#格式化输出</span><span class="token key attr-name">-o</span><span class="token punctuation">=</span><span class="token value attr-value">custom-columns=&lt;spec&gt;   #使用逗号分隔的自定义列列表打印表格</span><span class="token key attr-name">-o</span><span class="token punctuation">=</span><span class="token value attr-value">custom-columns-file=&lt;filename&gt; #使用文件中的自定义列模板打印表格</span><span class="token key attr-name">-o</span><span class="token punctuation">=</span><span class="token value attr-value">json    #输出JSON 格式的API对象</span><span class="token key attr-name">-o</span><span class="token punctuation">=</span><span class="token value attr-value">jsonpath=&lt; template&gt;       #打印jsonpath表达式中定义的字段</span><span class="token key attr-name">-o</span><span class="token punctuation">=</span><span class="token value attr-value">jsonpath-file=&lt;filename&gt;   #打印由文件中的jsonpath表达式定义的字段</span><span class="token key attr-name">-o</span><span class="token punctuation">=</span><span class="token value attr-value">name  #仅打印资源名称 </span><span class="token key attr-name">-o</span><span class="token punctuation">=</span><span class="token value attr-value">wide  #以纯文本格式输出任何附加信息，对于Pod ，包含节点名称</span><span class="token key attr-name">-o</span><span class="token punctuation">=</span><span class="token value attr-value">yaml  #输出 YAML 格式的 API 对象 </span><span class="token comment">#查看卡住服务</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">api-resources --verbs=list --namespaced -o name   | xargs -n 1 kubectl get --show-kind --ignore-not-found -n kubesphere-logging-system</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-操作类指令"><a href="#2-操作类指令" class="headerlink" title="2.操作类指令"></a>2.操作类指令</h4><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment">#创建资源</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">create -f xxx.yaml</span><span class="token comment"># 应用资源</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">apply -f xxx.yaml</span><span class="token comment"># 应用资源，该目录下的所有 .yaml, .yml, 或 .json 文件都会被使用</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">apply -f &lt;directory&gt;</span><span class="token comment"># 创建test名称空间</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">create namespace test</span><span class="token comment"># 编辑资源</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">edit pod podName</span><span class="token comment"># 删除指定的pod</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">delete pod podName</span><span class="token comment">#文件复制</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">cp /tmp/foo_dir &lt;some-pod&gt;:/tmp/bar_dir</span><span class="token comment">#维护模式（标志node不可调度，但不影响现有pod）</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">cordon k8s-node1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-高级指令"><a href="#3-高级指令" class="headerlink" title="3. 高级指令"></a>3. 高级指令</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#######################回滚操作#############</span><span class="token comment"># 查询历史版本</span>$ kubectl rollout <span class="token function">history</span> daemonset <span class="token operator">&lt;</span>daemonset-name<span class="token operator">&gt;</span>kubectl rollout <span class="token function">history</span> deploy php-apache<span class="token comment"># 查询某个历史版本的详细信息</span>$ kubectl rollout <span class="token function">history</span> daemonset <span class="token operator">&lt;</span>daemonset-name<span class="token operator">&gt;</span> <span class="token parameter variable">--revision</span><span class="token operator">=</span><span class="token number">1</span><span class="token comment"># 回滚</span>$ kubectl rollout undo daemonset <span class="token operator">&lt;</span>daemonset-name<span class="token operator">&gt;</span> --to-revision<span class="token operator">=</span><span class="token operator">&lt;</span>revision<span class="token operator">&gt;</span><span class="token comment"># 查询回滚状态</span>$ kubectl rollout status  deploy <span class="token operator">&lt;</span>daemonset-name<span class="token operator">&gt;</span><span class="token comment">#######################扩容操作#################</span><span class="token comment">#手动扩容 </span>kubectl scale deployment php-apache <span class="token parameter variable">--replicas</span><span class="token operator">=</span><span class="token number">2</span><span class="token comment">#自动扩容（需要配合HPA metric使用）</span>kubectl autoscale deployment php-apache --cpu-percent<span class="token operator">=</span><span class="token number">50</span> <span class="token parameter variable">--min</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--max</span><span class="token operator">=</span><span class="token number">10</span><span class="token comment">#镜像更新</span>kubectl <span class="token builtin class-name">set</span> image deployment/nginx-deployment my-nginx<span class="token operator">=</span>nginx:1.9.1<span class="token comment"># 添加标签</span>kubectl label pods my-pod new-label<span class="token operator">=</span>awesome<span class="token comment"># 添加注解</span>kubectl annotate pods my-pod icon-url<span class="token operator">=</span>http://goo.gl/XXBTWq<span class="token comment"># 部分更新节点</span>kubectl patch <span class="token function">node</span> k8s-node-1 <span class="token parameter variable">-p</span> <span class="token string">'{"spec":{"unschedulable":true}}'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="dashboard"><a href="#dashboard" class="headerlink" title="dashboard"></a>dashboard</h4><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment">## dashboard生成token</span><span class="token comment"># 创建用户</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">create serviceaccount dashboard-admin -n kube-system</span><span class="token comment"># 用户授权</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">create clusterrolebinding dashboard-admin --clusterrole=cluster-admin --serviceaccount=kube-system:dashboard-admin</span><span class="token comment"># 获取用户Token</span><span class="token key attr-name">kubectl</span> <span class="token value attr-value">describe secrets -n kube-system $(kubectl -n kube-system get secret | awk '/dashboard-admin/{print $1}')</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1 <span class="token comment"># 版本信息</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment <span class="token comment"># 资源类别</span><span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token comment"># 资源元数据</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>deployment <span class="token comment"># 元数据对应的名称</span>  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> <span class="token key atrule">app-test   namespace</span><span class="token punctuation">:</span> app<span class="token punctuation">-</span>test   <span class="token key atrule">lables</span><span class="token punctuation">:</span> <span class="token comment"># 对资源打上便签供后续使用</span>    <span class="token key atrule">apps</span><span class="token punctuation">:</span> nginx   <span class="token key atrule">annotations</span><span class="token punctuation">:</span> <span class="token comment"># 主要目的是方便用户阅读查找</span><span class="token key atrule">spec</span><span class="token punctuation">:</span> <span class="token comment"># 定义期望状态</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">2</span>  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx    <span class="token key atrule">spec</span><span class="token punctuation">:</span>       <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx          <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx<span class="token punctuation">:</span>1.14.2          <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>集群调度 使用</title>
      <link href="/kubernetes/ji-qun-diao-du.html"/>
      <url>/kubernetes/ji-qun-diao-du.html</url>
      
        <content type="html"><![CDATA[<h2 id="调度过程"><a href="#调度过程" class="headerlink" title="调度过程"></a>调度过程</h2><p>调度分为几个部分：首先是<strong>过滤掉不满足条件</strong>的节点，这个过程称为 <strong>predicate</strong>；然后对通过的节点按照优先级排序，这个是 <strong>priority</strong>；最后从中选择<strong>优先级最高的节点</strong>。如果中间任何一步骤有错误，就直接返回错误。Predicate 有一系列的算法可以使用：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1637141679431-1ca2587a-f7f0-48bd-96a2-60f968923735.png#clientId=u8142e09e-abda-4&amp;from=paste&amp;height=422&amp;id=u9944d429&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=422&amp;originWidth=893&amp;originalType=binary&amp;ratio=1&amp;size=199391&amp;status=done&amp;style=none&amp;taskId=u33d14cbf-ad58-44b4-a979-c42e5f88884&amp;width=893" alt="image.png"><br>如果在 <strong>predicate <strong>过程中没有合适的节点，</strong>pod 会一直在 pending 状态</strong>，不断重试调度，直到有节点满足条件。经过这个步骤，如果有多个节点满足条件，就继续 <strong>priorities <strong>过程：按照</strong>优先级大小对节点排序</strong>。优先级由一系列键值对组成，键是该优先级项的名称，值是它的权重（该项的重要性）。这些优先级选项包括：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1637141723086-4ccda8d2-e19c-4b56-bcc8-16a560ce308a.png#clientId=u8142e09e-abda-4&amp;from=paste&amp;height=247&amp;id=u53e449b8&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=247&amp;originWidth=930&amp;originalType=binary&amp;ratio=1&amp;size=155294&amp;status=done&amp;style=none&amp;taskId=ue8e33cdb-6442-4b08-8f12-2bc539f8f5b&amp;width=930" alt="image.png"></p><h2 id="亲和性"><a href="#亲和性" class="headerlink" title="亲和性"></a>亲和性</h2><h3 id="节点亲和性（pod-spec-nodeAffinity）"><a href="#节点亲和性（pod-spec-nodeAffinity）" class="headerlink" title="节点亲和性（pod.spec.nodeAffinity）"></a>节点亲和性（pod.spec.nodeAffinity）</h3><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1637141900615-158977f3-a3c6-4fa9-a7e0-9e95388277e4.png#clientId=u8142e09e-abda-4&amp;from=paste&amp;height=436&amp;id=u3b26b576&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=436&amp;originWidth=833&amp;originalType=binary&amp;ratio=1&amp;size=138128&amp;status=done&amp;style=none&amp;taskId=ue5808968-0aa2-4536-98d5-eea3595a62f&amp;width=833" alt="image.png"></p><h4 id="硬策略-requiredDuringSchedulingIgnoredDuringExecution"><a href="#硬策略-requiredDuringSchedulingIgnoredDuringExecution" class="headerlink" title="硬策略 - requiredDuringSchedulingIgnoredDuringExecution"></a>硬策略 - requiredDuringSchedulingIgnoredDuringExecution</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> affinity  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>affinity<span class="token punctuation">-</span>pod<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">containers</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> with<span class="token punctuation">-</span>node<span class="token punctuation">-</span>affinity      <span class="token key atrule">image</span><span class="token punctuation">:</span> hub.escape.com/library/myapp<span class="token punctuation">:</span>v1  <span class="token key atrule">affinity</span><span class="token punctuation">:</span>    <span class="token key atrule">nodeAffinity</span><span class="token punctuation">:</span>      <span class="token key atrule">requiredDuringSchedulingIgnoredDuringExecution</span><span class="token punctuation">:</span>        <span class="token key atrule">nodeSelectorTerms</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">matchExpressions</span><span class="token punctuation">:</span>              <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> kubernetes.io/hostname                <span class="token key atrule">operator</span><span class="token punctuation">:</span> NotIn                <span class="token key atrule">values</span><span class="token punctuation">:</span>                  <span class="token punctuation">-</span> k8s<span class="token punctuation">-</span>node<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="软策略-preferredDuringSchedulingIgnoredDuringExecution"><a href="#软策略-preferredDuringSchedulingIgnoredDuringExecution" class="headerlink" title="软策略 - preferredDuringSchedulingIgnoredDuringExecution"></a>软策略 - preferredDuringSchedulingIgnoredDuringExecution</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> affinity  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span>affinity<span class="token punctuation">-</span>pod<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">containers</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> with<span class="token punctuation">-</span>node<span class="token punctuation">-</span>affinity      <span class="token key atrule">image</span><span class="token punctuation">:</span> hub.escape.com/library/myapp<span class="token punctuation">:</span>v1  <span class="token key atrule">affinity</span><span class="token punctuation">:</span>    <span class="token key atrule">nodeAffinity</span><span class="token punctuation">:</span>      <span class="token key atrule">preferredDuringSchedulingIgnoredDuringExecution</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">weight</span><span class="token punctuation">:</span> <span class="token number">1</span>          <span class="token key atrule">preference</span><span class="token punctuation">:</span>            <span class="token key atrule">matchExpressions</span><span class="token punctuation">:</span>              <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> source                <span class="token key atrule">operator</span><span class="token punctuation">:</span> In                <span class="token key atrule">values</span><span class="token punctuation">:</span>                  <span class="token punctuation">-</span> test<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Pod-亲和性-pod-spec-affinity-podAffinity-x2F-podAntiAffinity"><a href="#Pod-亲和性-pod-spec-affinity-podAffinity-x2F-podAntiAffinity" class="headerlink" title="Pod 亲和性(pod.spec.affinity.podAffinity/podAntiAffinity)"></a>Pod 亲和性(pod.spec.affinity.podAffinity/podAntiAffinity)</h3><ul><li><strong>硬策略 - requiredDuringSchedulingIgnoredDuringExecution</strong></li><li><strong>软策略 - preferredDuringSchedulingIgnoredDuringExecution</strong><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> pod<span class="token punctuation">-</span><span class="token number">3</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> pod<span class="token punctuation">-</span><span class="token number">3</span><span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">containers</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> pod<span class="token punctuation">-</span><span class="token number">3</span>      <span class="token key atrule">image</span><span class="token punctuation">:</span> hub.escape.com/library/myapp<span class="token punctuation">:</span>v1      <span class="token key atrule">affinity</span><span class="token punctuation">:</span>        <span class="token key atrule">podAffinity</span><span class="token punctuation">:</span>          <span class="token key atrule">requiredDuringSchedulingIgnoredDuringExecution</span><span class="token punctuation">:</span> <span class="token comment">#硬策略</span>            <span class="token punctuation">-</span> <span class="token key atrule">labelSelector</span><span class="token punctuation">:</span>                <span class="token key atrule">matchExpressions</span><span class="token punctuation">:</span>                  <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> app                    <span class="token key atrule">operator</span><span class="token punctuation">:</span> In                    <span class="token key atrule">values</span><span class="token punctuation">:</span>                      <span class="token punctuation">-</span> pod<span class="token punctuation">-</span><span class="token number">1</span>              <span class="token key atrule">topologyKey</span><span class="token punctuation">:</span> kubernetes.io/hostname        <span class="token key atrule">podAntiAffinity</span><span class="token punctuation">:</span>          <span class="token key atrule">preferredDuringSchedulingIgnoredDuringExecution</span><span class="token punctuation">:</span> <span class="token comment">#软策略</span>            <span class="token punctuation">-</span> <span class="token key atrule">weight</span><span class="token punctuation">:</span> <span class="token number">1</span>              <span class="token key atrule">podAffinityTerm</span><span class="token punctuation">:</span>                <span class="token key atrule">labelSelector</span><span class="token punctuation">:</span>                  <span class="token key atrule">matchExpressions</span><span class="token punctuation">:</span>                    <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> app                      <span class="token key atrule">operator</span><span class="token punctuation">:</span> In                      <span class="token key atrule">values</span><span class="token punctuation">:</span>                        <span class="token punctuation">-</span> pod<span class="token punctuation">-</span><span class="token number">2</span>                <span class="token key atrule">topologyKey</span><span class="token punctuation">:</span> kubernetes.io/hostname<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="https://cdn.nlark.com/yuque/0/2021/png/12993007/1637142207783-5bc4a765-8476-406b-a924-d2866abd6b32.png#clientId=u8142e09e-abda-4&amp;from=paste&amp;height=428&amp;id=uc3c7ca0c&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=428&amp;originWidth=932&amp;originalType=binary&amp;ratio=1&amp;size=93525&amp;status=done&amp;style=none&amp;taskId=u50685864-94ae-405b-a935-19016a0d1d2&amp;width=932" alt="image.png"></li></ul><h4 id="注：拓扑域"><a href="#注：拓扑域" class="headerlink" title="注：拓扑域"></a>注：拓扑域</h4><p>第一种，在使用云存储服务的时候，经常会遇到 <strong>region</strong>，也就是地区的概念，在 K8s 中常通过 label failure-domain.beta.kubernetes.io/region 来标识。这个是为了标识单个 K8s 集群管理的跨 region 的 nodes 到底属于哪个地区；<br>第二种，比较常用的是<strong>可用区</strong>，也就是** available zone**，在 K8s 中常通过 label failure-domain.beta.kubernetes.io/zone 来标识。这个是为了标识单个 K8s 集群管理的跨 zone 的 nodes 到底属于哪个可用区；<br>第三种，是 <strong>hostname</strong>，就是单机维度，是拓扑域为 **node **范围，在 K8s 中常通过 label kubernetes.io/hostname 来标识，<br>[</p><p>](<a href="https://blog.csdn.net/weixin_30336949/article/details/112485203">https://blog.csdn.net/weixin_30336949/article/details/112485203</a>)</p><h2 id="污点和容忍"><a href="#污点和容忍" class="headerlink" title="污点和容忍"></a>污点和容忍</h2><p>节点亲和性，是 pod 的一种属性（偏好或硬性要求），它使 pod 被吸引到一类特定的节点。Taint 则相反，它使节点能够<strong>排斥</strong>一类特定的 pod。</p><p>**Taint **和 **toleration **相互配合，可以用来避免 <strong>pod 被分配到不合适的节点上</strong>。每个节点上都可以应用一个或多个 taint，这表示对于那些不能容忍这些 taint 的 pod，是不会被该节点接受的。如果将 toleration 应用于 pod 上，则表示这些 pod 可以（但不要求）被调度到具有匹配 taint 的节点上。</p><h3 id="污点"><a href="#污点" class="headerlink" title="污点"></a>污点</h3><ul><li><strong>NoSchedule</strong>：表示 k8s 将不会将 Pod 调度到具有该污点的 Node 上</li><li><strong>PreferNoSchedule</strong>：表示 k8s 将尽量避免将 Pod 调度到具有该污点的 Node 上</li><li><strong>NoExecute</strong>：将不会将 Pod 调度到具有该污点的 Node 上，同时会将 Node 上已经存在的 Pod 驱逐出去</li></ul><h4 id="1-查看污点"><a href="#1-查看污点" class="headerlink" title="1.查看污点"></a>1.查看污点</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl describe <span class="token function">node</span> k8s-masterTaints:         node-role.kubernetes.io/master:NoSchedule<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="2-污点的设置、查看和去除"><a href="#2-污点的设置、查看和去除" class="headerlink" title="2.污点的设置、查看和去除"></a>2.污点的设置、查看和去除</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 设置污点</span>$ kubectl taint nodes k8s<span class="token punctuation">-</span>node1 key1=value1<span class="token punctuation">:</span>NoSchedule$ kubectl taint nodes k8s<span class="token punctuation">-</span>node1 type=master<span class="token punctuation">:</span>NoExecute<span class="token comment"># 节点说明中查找Taints字段</span>$ kubectl describe pod pod<span class="token punctuation">-</span>name<span class="token comment"># 去除污点</span>$ kubectl taint nodes k8s<span class="token punctuation">-</span>node1 key1<span class="token punctuation">:</span>NoSchedule<span class="token punctuation">-</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="容忍"><a href="#容忍" class="headerlink" title="容忍"></a>容忍</h4><p>设置了污点的 Node 将根据 taint 的 effect：<strong>NoSchedule</strong>、<strong>PreferNoSchedule</strong>、<strong>NoExecute <strong>和 Pod 之间产生</strong>互斥</strong>的关系，Pod 将在一定程度上不会被调度到 Node 上。但我们可以在 Pod 上设置容忍，意思是设置了<strong>容忍的 Pod 将可以容忍污点的存在</strong>，可以被调度到存在污点的 Node 上。</p><ul><li>pod.spec.tolerations<ul><li>其中 operator 的值为 Exists 将会忽略 value 值</li><li>其中 key, value, effect 要与 Node 上设置的 taint 保持一致</li><li>其中 tolerationSeconds 用于描述当 Pod 需要被驱逐时可以在 Pod 上继续保留运行的时间<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> pod<span class="token punctuation">-</span><span class="token number">3</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> pod<span class="token punctuation">-</span><span class="token number">3</span><span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">containers</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> pod<span class="token punctuation">-</span><span class="token number">3</span>      <span class="token key atrule">image</span><span class="token punctuation">:</span> hub.escape.com/library/myapp<span class="token punctuation">:</span>v1  <span class="token key atrule">tolerations</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">"type"</span>      <span class="token key atrule">operator</span><span class="token punctuation">:</span> "Equal" //操作符      <span class="token key atrule">value</span><span class="token punctuation">:</span> "master"  //key，value      <span class="token key atrule">effect</span><span class="token punctuation">:</span> "NoSchedule"   //污点策略      <span class="token key atrule">tolerationSeconds</span><span class="token punctuation">:</span> 3600 //保留运行时间秒    <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">"type"</span>      <span class="token key atrule">operator</span><span class="token punctuation">:</span> <span class="token string">"Equal"</span>      <span class="token key atrule">value</span><span class="token punctuation">:</span> <span class="token string">"master"</span>      <span class="token key atrule">effect</span><span class="token punctuation">:</span> <span class="token string">"NoExecute"</span>    <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">"type"</span>      <span class="token key atrule">operator</span><span class="token punctuation">:</span> <span class="token string">"Exists"</span>      <span class="token key atrule">effect</span><span class="token punctuation">:</span> <span class="token string">"NoSchedule"</span>      <span class="token punctuation">---</span><span class="token key atrule">tolerations</span><span class="token punctuation">:</span>  当不指定 key 值时，表示容忍所有的污点 key  <span class="token key atrule">operator</span><span class="token punctuation">:</span> <span class="token string">"Exists"</span>  <span class="token punctuation">---</span><span class="token key atrule">tolerations</span><span class="token punctuation">:</span>  <span class="token comment">#当不指定 effect 值时，表示容忍所有的污点作用</span>  <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">"key"</span>    <span class="token key atrule">operator</span><span class="token punctuation">:</span> <span class="token string">"Exists"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h2 id="指定调度节点"><a href="#指定调度节点" class="headerlink" title="指定调度节点"></a>指定调度节点</h2><p>将 Pod 直接调度到指定的 Node 节点上，会跳过 Scheduler 的调度策略，该匹配规则是<strong>强制匹配。</strong></p><h4 id="1-通过nodeName"><a href="#1-通过nodeName" class="headerlink" title="1.通过nodeName"></a>1.通过nodeName</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> extensions/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> myweb<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">7</span>  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> myweb    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">nodeName</span><span class="token punctuation">:</span> k8s<span class="token punctuation">-</span>node1  <span class="token comment">## 通过nodename</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> myweb          <span class="token key atrule">image</span><span class="token punctuation">:</span> hub.escape.com/library/myapp<span class="token punctuation">:</span>v1          <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-通过标签"><a href="#2-通过标签" class="headerlink" title="2.通过标签"></a>2.通过标签</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> extensions/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> myweb<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">2</span>  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> myweb    <span class="token key atrule">spec</span><span class="token punctuation">:</span>    <span class="token key atrule">nodeSelector</span><span class="token punctuation">:</span>  <span class="token comment">#通过标签选择</span>      <span class="token key atrule">type</span><span class="token punctuation">:</span> BackendNode    <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> myweb        <span class="token key atrule">image</span><span class="token punctuation">:</span> hub.escape.com/library/myapp<span class="token punctuation">:</span>v1        ports<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>存储 使用</title>
      <link href="/kubernetes/cun-chu.html"/>
      <url>/kubernetes/cun-chu.html</url>
      
        <content type="html"><![CDATA[<h4 id="参考地址：https-www-yuque-com-u12604243-mc2aau-qgh2pg-IHoc8"><a href="#参考地址：https-www-yuque-com-u12604243-mc2aau-qgh2pg-IHoc8" class="headerlink" title="参考地址：https://www.yuque.com/u12604243/mc2aau/qgh2pg#IHoc8"></a>参考地址：<a href="#IHoc8">https://www.yuque.com/u12604243/mc2aau/qgh2pg#IHoc8</a></h4><h1 id="ConfigMap"><a href="#ConfigMap" class="headerlink" title="ConfigMap"></a>ConfigMap</h1><h2 id="创建Map"><a href="#创建Map" class="headerlink" title="创建Map"></a>创建Map</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#使用目录创建</span>kubectl create configmap ganme-config --from-file<span class="token operator">=</span><span class="token punctuation">..</span>/mapdir<span class="token comment">#使用文件创建</span>kubectl create cm ganme-file --from-file<span class="token operator">=</span>./mapdir/game.properties <span class="token comment">#使用字面值创建</span>kubectl create cm special-config2 --from-literal<span class="token operator">=</span>sp.how<span class="token operator">=</span>very --from-literal<span class="token operator">=</span>sp.type<span class="token operator">=</span>charm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ConfigMap-的使用"><a href="#ConfigMap-的使用" class="headerlink" title="ConfigMap 的使用"></a>ConfigMap 的使用</h2><p><strong>使用 ConfigMap 来替代环境变量</strong></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> special<span class="token punctuation">-</span>config  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">special.how</span><span class="token punctuation">:</span> very  <span class="token key atrule">special.type</span><span class="token punctuation">:</span> charm<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> env<span class="token punctuation">-</span>config  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">log_level</span><span class="token punctuation">:</span> INFO<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> myapp<span class="token punctuation">-</span>test<span class="token punctuation">-</span>pod<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> Never  <span class="token key atrule">containers</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> test<span class="token punctuation">-</span>container      <span class="token key atrule">image</span><span class="token punctuation">:</span> hub.escape.com/library/myapp<span class="token punctuation">:</span>v1      <span class="token key atrule">command</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"/bin/sh"</span><span class="token punctuation">,</span> <span class="token string">"-c"</span><span class="token punctuation">,</span> <span class="token string">"env"</span><span class="token punctuation">]</span>      <span class="token key atrule">env</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> SPECIAL_LEVEL_KEY          <span class="token key atrule">valueFrom</span><span class="token punctuation">:</span>            <span class="token key atrule">configMapKeyRef</span><span class="token punctuation">:</span>              <span class="token key atrule">name</span><span class="token punctuation">:</span> special<span class="token punctuation">-</span>config              <span class="token key atrule">key</span><span class="token punctuation">:</span> special.how        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> SPECIAL_TYPE_KEY          <span class="token key atrule">valueFrom</span><span class="token punctuation">:</span>            <span class="token key atrule">configMapKeyRef</span><span class="token punctuation">:</span>              <span class="token key atrule">name</span><span class="token punctuation">:</span> special<span class="token punctuation">-</span>config              <span class="token key atrule">key</span><span class="token punctuation">:</span> special.type      <span class="token key atrule">envFrom</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">configMapRef</span><span class="token punctuation">:</span>          <span class="token key atrule">name</span><span class="token punctuation">:</span> env<span class="token punctuation">-</span>config<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>用 ConfigMap 设置命令行参数</strong></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> special<span class="token punctuation">-</span>config  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">special.how</span><span class="token punctuation">:</span> very  <span class="token key atrule">special.type</span><span class="token punctuation">:</span> charm<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> myapp<span class="token punctuation">-</span>test<span class="token punctuation">-</span>pod<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> Never  <span class="token key atrule">containers</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> test<span class="token punctuation">-</span>container      <span class="token key atrule">image</span><span class="token punctuation">:</span> myapp<span class="token punctuation">:</span>v1      <span class="token key atrule">command</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"/bin/sh"</span><span class="token punctuation">,</span> <span class="token string">"-c"</span><span class="token punctuation">,</span> <span class="token string">"echo $(SPECIAL_LEVEL_KEY) $(SPECIAL_TYPE_KEY)"</span><span class="token punctuation">]</span>      <span class="token key atrule">env</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> SPECIAL_LEVEL_KEY          <span class="token key atrule">valueFrom</span><span class="token punctuation">:</span>            <span class="token key atrule">configMapKeyRef</span><span class="token punctuation">:</span>              <span class="token key atrule">name</span><span class="token punctuation">:</span> special<span class="token punctuation">-</span>config              <span class="token key atrule">key</span><span class="token punctuation">:</span> special.how        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> SPECIAL_TYPE_KEY          <span class="token key atrule">valueFrom</span><span class="token punctuation">:</span>            <span class="token key atrule">configMapKeyRef</span><span class="token punctuation">:</span>              <span class="token key atrule">name</span><span class="token punctuation">:</span> special<span class="token punctuation">-</span>config              <span class="token key atrule">key</span><span class="token punctuation">:</span> special.type<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>通过数据卷插件使用 ConfigMap</strong></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> special<span class="token punctuation">-</span>config  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">special.how</span><span class="token punctuation">:</span> very  <span class="token key atrule">special.type</span><span class="token punctuation">:</span> charm<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> myapp<span class="token punctuation">-</span>test<span class="token punctuation">-</span>pod<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> Never  <span class="token key atrule">containers</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> test<span class="token punctuation">-</span>container      <span class="token key atrule">image</span><span class="token punctuation">:</span> hub.escape.com/library/myapp<span class="token punctuation">:</span>v1      <span class="token key atrule">command</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"/bin/sh"</span><span class="token punctuation">,</span> <span class="token string">"-c"</span><span class="token punctuation">,</span> <span class="token string">"cat /etc/config/special.how"</span><span class="token punctuation">]</span>      <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> config<span class="token punctuation">-</span>volume          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /etc/config  <span class="token key atrule">volumes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> config<span class="token punctuation">-</span>volume      <span class="token key atrule">configMap</span><span class="token punctuation">:</span>        <span class="token key atrule">name</span><span class="token punctuation">:</span> special<span class="token punctuation">-</span>config<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>热更新</strong></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 修改ConfigMap配置</span>$ kubectl edit configmap log<span class="token punctuation">-</span>config<span class="token comment"># 查找对应信息</span>$ kubectl exec \    `kubectl get pods <span class="token punctuation">-</span>l run=my<span class="token punctuation">-</span>nginx <span class="token punctuation">-</span>o=name<span class="token punctuation">|</span>cut <span class="token punctuation">-</span>d "/" <span class="token punctuation">-</span>f2` \    cat /etc/config/log_levelDEBUG<span class="token comment"># 修改version/config来进行滚动更新</span>kubectl patch deployment my<span class="token punctuation">-</span>nginx \    <span class="token punctuation">-</span><span class="token punctuation">-</span>patch '<span class="token punctuation">{</span><span class="token key atrule">"spec"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token key atrule">"template"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token key atrule">"metadata"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token key atrule">"annotations"</span><span class="token punctuation">:</span> \    <span class="token punctuation">{</span><span class="token key atrule">"version/config"</span><span class="token punctuation">:</span> <span class="token string">"20190411"</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Secret"><a href="#Secret" class="headerlink" title="Secret"></a>Secret</h1><p>**Secret <strong>解决了密码、token、密钥等敏感数据的配置问题，而不需要把这些敏感数据暴露到镜像或者 Pod Spec 中。</strong>Secret **可以以 Volume 或者环境变量的方式使用。Secret 有三种类型，分别是：</p><ul><li><strong>Service Account ：</strong>用来访问 Kubernetes API，由 Kubernetes 自动创建，并且会自动挂载到 Pod 的特点目录中。</li><li><strong>Opaque：</strong>base64 编码格式的 Secret，用来存储密码、密钥等，相当来说不安全。</li><li><strong>kubernetes.io/dockerconfigjson：</strong>用来存储私有 docker registry 的认证信息。</li></ul><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Secret<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> mysecret<span class="token key atrule">type</span><span class="token punctuation">:</span> Opaque<span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">password</span><span class="token punctuation">:</span> MWYyZDFlMmU2N2Rm  <span class="token key atrule">username</span><span class="token punctuation">:</span> YWRtaW4=<span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> seret<span class="token punctuation">-</span>test<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">containers</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> db      <span class="token key atrule">image</span><span class="token punctuation">:</span> hub.escape.com/library/myapp<span class="token punctuation">:</span>v1      <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> secrets          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> <span class="token string">"readOnly: true"</span>  <span class="token key atrule">volumes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> secrets      <span class="token key atrule">secret</span><span class="token punctuation">:</span>        <span class="token key atrule">secretName</span><span class="token punctuation">:</span> mysecre  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Volume"><a href="#Volume" class="headerlink" title="Volume"></a>Volume</h1><p><strong>直接挂载目录</strong></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> pv<span class="token punctuation">-</span>ng<span class="token punctuation">-</span>deploy<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">2</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span> <span class="token comment"># 定义选择器</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span> <span class="token comment">#匹配的标签，下面定义了3个标签，将会选择有这些标签的pod</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> pvnginx  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> pvnginx    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> pvnginx        <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx        <span class="token key atrule">ports</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span>        <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span><span class="token comment">#挂载pv</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> ng<span class="token punctuation">-</span>data<span class="token comment">#挂载资源的名称，随便起</span>          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /ng/data<span class="token comment">#挂载目</span>         <span class="token comment"># 方法.直接挂载到nfs目录上</span>      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> ng<span class="token punctuation">-</span>data        <span class="token key atrule">nfs</span><span class="token punctuation">:</span>          <span class="token key atrule">server</span><span class="token punctuation">:</span> 192.168.56.12          <span class="token key atrule">path</span><span class="token punctuation">:</span> /nfsdata/ng<span class="token punctuation">-</span>data/wordpress<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="PV"><a href="#PV" class="headerlink" title="PV"></a>PV</h1><h2 id="一、PV（其他可参考官方文档）（静态挂载）"><a href="#一、PV（其他可参考官方文档）（静态挂载）" class="headerlink" title="一、PV（其他可参考官方文档）（静态挂载）"></a>一、PV（其他可参考官方文档）（静态挂载）</h2><h3 id="NFS"><a href="#NFS" class="headerlink" title="NFS"></a>NFS</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PersistentVolume<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> pv0001<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">capacity</span><span class="token punctuation">:</span>    <span class="token key atrule">storage</span><span class="token punctuation">:</span> 1Gi  <span class="token key atrule">accessModes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> ReadWriteOnce  <span class="token key atrule">persistentVolumeReclaimPolicy</span><span class="token punctuation">:</span> Recycle  <span class="token key atrule">storageClassName</span><span class="token punctuation">:</span> nfspv <span class="token comment"># 指定存储class那么，pvc必须配置一样才行</span>  <span class="token key atrule">nfs</span><span class="token punctuation">:</span>    <span class="token key atrule">path</span><span class="token punctuation">:</span> /tmp    <span class="token key atrule">server</span><span class="token punctuation">:</span> 192.168.56.11<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="本地卷："><a href="#本地卷：" class="headerlink" title="本地卷："></a>本地卷：</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PersistentVolume<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> example<span class="token punctuation">-</span>pv<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">capacity</span><span class="token punctuation">:</span>    <span class="token key atrule">storage</span><span class="token punctuation">:</span> 1Gi  <span class="token key atrule">volumeMode</span><span class="token punctuation">:</span> Filesystem  <span class="token key atrule">accessModes</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> ReadWriteOnce  <span class="token key atrule">persistentVolumeReclaimPolicy</span><span class="token punctuation">:</span> Delete  <span class="token key atrule">storageClassName</span><span class="token punctuation">:</span> local<span class="token punctuation">-</span>storage  <span class="token key atrule">local</span><span class="token punctuation">:</span>    <span class="token key atrule">path</span><span class="token punctuation">:</span> /disks  <span class="token key atrule">nodeAffinity</span><span class="token punctuation">:</span>    <span class="token key atrule">required</span><span class="token punctuation">:</span>      <span class="token key atrule">nodeSelectorTerms</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">matchExpressions</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> kubernetes.io/hostname          <span class="token key atrule">operator</span><span class="token punctuation">:</span> In          <span class="token key atrule">values</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> k8s<span class="token punctuation">-</span>node1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>PV 的访问模式（ accessModes） 有三种</strong>： </p><ul><li><strong>ReadWriteOnce</strong>（ RWO） ： 是最基本的方式， 可读可写， 但只支持被单个节点挂<br>载。</li><li><strong>ReadOnlyMany</strong>（ ROX） ： 可以以只读的方式被多个节点挂载。</li><li><strong>ReadWriteMany</strong>（ RWX） ： 这种存储可以以读写的方式被多个节点共享。 不是每一<br>种存储都支持这三种方式， 像共享方式， 目前支持的还比较少， 比较常用的是<br>NFS。 在 PVC 绑定 PV 时通常根据两个条件来绑定， 一个是存储的大小， 另一个就<br>是访问模式</li></ul><p><strong>PV 的回收策略（ persistentVolumeReclaimPolicy， 即 PVC 释放卷的时候 PV 该如何操<br>作） 也有三种 ：</strong></p><ul><li><strong>Retain</strong>， 不清理, 保留 Volume（ 需要手动清理） </li><li><strong>Recycle</strong>， 删除数据， 即 rm -rf /thevolume/* （ 只有 NFS 和 HostPath 支持 ）</li><li><strong>Delete</strong>， 删除存储资源， 比如删除 AWS EBS 卷（ 只有 AWS EBS, GCE PD, Azure<br>Disk 和 Cinder 支持）</li></ul><p><strong>卷阶段</strong></p><ul><li><strong>Available</strong>（可用）– 卷是一个空闲资源，尚未绑定到任何申领；</li><li><strong>Bound</strong>（已绑定）– 该卷已经绑定到某申领；</li><li><strong>Released</strong>（已释放）– 所绑定的申领已被删除，但是资源尚未被集群回收；</li><li><strong>Failed</strong>（失败）– 卷的自动回收操作失败。</li></ul><h2 id="二-PVC（PersistentVolumeClaim-）"><a href="#二-PVC（PersistentVolumeClaim-）" class="headerlink" title="二.PVC（PersistentVolumeClaim ）"></a>二.PVC（PersistentVolumeClaim ）</h2><h3 id="1-新建pvc"><a href="#1-新建pvc" class="headerlink" title="1.新建pvc"></a>1.新建pvc</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PersistentVolumeClaim<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>pvc<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">storageClassName</span><span class="token punctuation">:</span> nfspv <span class="token comment">#绑定与pv一直</span>  <span class="token key atrule">volumeName</span><span class="token punctuation">:</span> zk<span class="token punctuation">-</span>pop<span class="token punctuation">-</span>pv<span class="token punctuation">-</span><span class="token number">2</span> <span class="token comment"># 挂载pv名称 可选</span>  <span class="token key atrule">dataSource</span><span class="token punctuation">:</span>   <span class="token comment"># 快照卷</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> new<span class="token punctuation">-</span>snapshot<span class="token punctuation">-</span>test    <span class="token key atrule">kind</span><span class="token punctuation">:</span> VolumeSnapshot    <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> snapshot.storage.k8s.io  <span class="token key atrule">accessModes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> ReadWriteOnce    <span class="token comment">#必须跟pv一直</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">pv</span><span class="token punctuation">:</span> kod<span class="token punctuation">-</span>pv01//定义pv标签，与pv进行关联  <span class="token key atrule">resources</span><span class="token punctuation">:</span>    <span class="token key atrule">requests</span><span class="token punctuation">:</span>      <span class="token key atrule">storage</span><span class="token punctuation">:</span> 1Gi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-pvc挂载应用"><a href="#2-pvc挂载应用" class="headerlink" title="2.pvc挂载应用"></a>2.pvc挂载应用</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> pv<span class="token punctuation">-</span>ng<span class="token punctuation">-</span>deploy<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">2</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span> <span class="token comment"># 定义选择器</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span> <span class="token comment">#匹配的标签，下面定义了3个标签，将会选择有这些标签的pod</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> pvnginx  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> pvnginx    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> pvnginx        <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx        <span class="token key atrule">ports</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span>        <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span><span class="token comment">#挂载pv</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> ng<span class="token punctuation">-</span>data<span class="token comment">#挂载资源的名称，随便起</span>          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /ng/data<span class="token comment">#挂载目录</span>          <span class="token comment">#方法1.挂载pvc</span>      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> ng<span class="token punctuation">-</span>data<span class="token comment">#资源名称和volumemounts中的name对应</span>        <span class="token key atrule">persistentVolumeClaim</span><span class="token punctuation">:</span>          <span class="token key atrule">claimName</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>pvc<span class="token comment">#pvc的名称</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-pv和pvc删除"><a href="#3-pv和pvc删除" class="headerlink" title="3.pv和pvc删除"></a>3.pv和pvc删除</h3><ul><li>优先删除使用deploy</li><li>在删除pvc</li><li>最后删除pv</li></ul><h2 id="三、StorageClass-动态挂载）"><a href="#三、StorageClass-动态挂载）" class="headerlink" title="三、StorageClass(动态挂载）"></a>三、StorageClass(动态挂载）</h2><p>Kubernetes提供了一套可以自动创建PV的机制,即:Dynamic Provisioning.而这个机制的核心在于:StorageClass这个API对象. </p><h3 id="1-步骤"><a href="#1-步骤" class="headerlink" title="1.步骤"></a>1.步骤</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token number">1.</span>创建一个可用的<span class="token constant">NFS</span> <span class="token class-name">Serve</span><span class="token number">2.</span>创建<span class="token class-name">Service</span> <span class="token class-name">Account</span><span class="token punctuation">.</span>这是用来管控<span class="token constant">NFS</span> provisioner在k8s集群中运行的权限<span class="token number">3.</span>创建<span class="token class-name">StorageClass</span><span class="token punctuation">.</span>负责建立<span class="token constant">PVC</span>并调用<span class="token constant">NFS</span> provisioner进行预定的工作<span class="token punctuation">,</span>并让<span class="token constant">PV</span>与<span class="token constant">PVC</span>建立管理<span class="token number">4.</span>创建<span class="token constant">NFS</span> provisioner<span class="token punctuation">.</span>有两个功能<span class="token punctuation">,</span>一个是在<span class="token constant">NFS</span>共享目录下创建挂载点<span class="token punctuation">(</span>volume<span class="token punctuation">)</span><span class="token punctuation">,</span>另一个则是建了<span class="token constant">PV</span>并将<span class="token constant">PV</span>与<span class="token constant">NFS</span>的挂载点建立关联  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-搭建"><a href="#2-搭建" class="headerlink" title="2.搭建"></a>2.搭建</h3><h4 id="2-1创建rbac配置account和权限"><a href="#2-1创建rbac配置account和权限" class="headerlink" title="2.1创建rbac配置account和权限"></a>2.1创建rbac配置account和权限</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner  <span class="token comment"># replace with namespace where provisioner is deployed</span>  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default        <span class="token comment">#根据实际环境设定namespace,下面类同</span><span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner<span class="token punctuation">-</span>runner<span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"persistentvolumes"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"list"</span><span class="token punctuation">,</span> <span class="token string">"watch"</span><span class="token punctuation">,</span> <span class="token string">"create"</span><span class="token punctuation">,</span> <span class="token string">"delete"</span><span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"persistentvolumeclaims"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"list"</span><span class="token punctuation">,</span> <span class="token string">"watch"</span><span class="token punctuation">,</span> <span class="token string">"update"</span><span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"storage.k8s.io"</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"storageclasses"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"list"</span><span class="token punctuation">,</span> <span class="token string">"watch"</span><span class="token punctuation">]</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"events"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"create"</span><span class="token punctuation">,</span> <span class="token string">"update"</span><span class="token punctuation">,</span> <span class="token string">"patch"</span><span class="token punctuation">]</span><span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRoleBinding<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> run<span class="token punctuation">-</span>nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner<span class="token key atrule">subjects</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount    <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner    <span class="token comment"># replace with namespace where provisioner is deployed</span>    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>  <span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole  <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner<span class="token punctuation">-</span>runner  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io<span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Role<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> leader<span class="token punctuation">-</span>locking<span class="token punctuation">-</span>nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner    <span class="token comment"># replace with namespace where provisioner is deployed</span>  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">rules</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">apiGroups</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token key atrule">resources</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"endpoints"</span><span class="token punctuation">]</span>    <span class="token key atrule">verbs</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"list"</span><span class="token punctuation">,</span> <span class="token string">"watch"</span><span class="token punctuation">,</span> <span class="token string">"create"</span><span class="token punctuation">,</span> <span class="token string">"update"</span><span class="token punctuation">,</span> <span class="token string">"patch"</span><span class="token punctuation">]</span><span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> RoleBinding<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> leader<span class="token punctuation">-</span>locking<span class="token punctuation">-</span>nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner<span class="token key atrule">subjects</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount    <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner    <span class="token comment"># replace with namespace where provisioner is deployed</span>    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>  <span class="token key atrule">kind</span><span class="token punctuation">:</span> Role  <span class="token key atrule">name</span><span class="token punctuation">:</span> leader<span class="token punctuation">-</span>locking<span class="token punctuation">-</span>nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-2创建NFS资源的StorageClass"><a href="#2-2创建NFS资源的StorageClass" class="headerlink" title="2.2创建NFS资源的StorageClass"></a>2.2创建NFS资源的StorageClass</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> storage.k8s.io/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> StorageClass<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> managed<span class="token punctuation">-</span>nfs<span class="token punctuation">-</span>storage<span class="token key atrule">provisioner</span><span class="token punctuation">:</span> qgg<span class="token punctuation">-</span>nfs<span class="token punctuation">-</span>storage <span class="token comment">#这里的名称要和provisioner配置文件中的环境变量PROVISIONER_NAME保持一致</span><span class="token key atrule">parameters</span><span class="token punctuation">:</span>  <span class="token key atrule">archiveOnDelete</span><span class="token punctuation">:</span> <span class="token string">"false"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-3创建nfs-Provisioner"><a href="#2-3创建nfs-Provisioner" class="headerlink" title="2.3创建nfs-Provisioner"></a>2.3创建nfs-Provisioner</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner  <span class="token comment"># replace with namespace where provisioner is deployed</span>  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default  <span class="token comment">#与RBAC文件中的namespace保持一致</span><span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner  <span class="token key atrule">strategy</span><span class="token punctuation">:</span>    <span class="token key atrule">type</span><span class="token punctuation">:</span> Recreate  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">serviceAccountName</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner          <span class="token key atrule">image</span><span class="token punctuation">:</span> quay.io/external_storage/nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>provisioner<span class="token punctuation">:</span>latest          <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>root              <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /persistentvolumes          <span class="token key atrule">env</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> PROVISIONER_NAME              <span class="token key atrule">value</span><span class="token punctuation">:</span> qgg<span class="token punctuation">-</span>nfs<span class="token punctuation">-</span>storage  <span class="token comment">#provisioner名称,请确保该名称与 nfs-StorageClass.yaml文件中的provisioner名称保持一致</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> NFS_SERVER              <span class="token key atrule">value</span><span class="token punctuation">:</span> 192.168.56.11   <span class="token comment">#NFS Server IP地址</span>            <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> NFS_PATH                <span class="token key atrule">value</span><span class="token punctuation">:</span> /nfsdata    <span class="token comment">#NFS挂载卷</span>      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> nfs<span class="token punctuation">-</span>client<span class="token punctuation">-</span>root          <span class="token key atrule">nfs</span><span class="token punctuation">:</span>            <span class="token key atrule">server</span><span class="token punctuation">:</span> 192.168.56.11  <span class="token comment">#NFS Server IP地址</span>            <span class="token key atrule">path</span><span class="token punctuation">:</span> /nfsdata     <span class="token comment">#NFS 挂载卷</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-4创建pvc"><a href="#2-4创建pvc" class="headerlink" title="2.4创建pvc"></a>2.4创建pvc</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> PersistentVolumeClaim<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> test<span class="token punctuation">-</span>claim  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">volume.beta.kubernetes.io/storage-class</span><span class="token punctuation">:</span> <span class="token string">"managed-nfs-storage"</span>   <span class="token comment">#与nfs-StorageClass.yaml metadata.name保持一致</span><span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">accessModes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> ReadWriteMany  <span class="token key atrule">resources</span><span class="token punctuation">:</span>    <span class="token key atrule">requests</span><span class="token punctuation">:</span>      <span class="token key atrule">storage</span><span class="token punctuation">:</span> 1Mi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-5设置默认sc"><a href="#2-5设置默认sc" class="headerlink" title="2.5设置默认sc"></a>2.5设置默认sc</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl patch storageclass managed-nfs-storage <span class="token parameter variable">-p</span> <span class="token string">'{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="2-6出现创建pvc后一直等待情况waiting-for-a-volume-to-be-created-either-by-external-provisioner-“qgg-nfs-storage”-or-manually-created-by-system-administrator"><a href="#2-6出现创建pvc后一直等待情况waiting-for-a-volume-to-be-created-either-by-external-provisioner-“qgg-nfs-storage”-or-manually-created-by-system-administrator" class="headerlink" title="2.6出现创建pvc后一直等待情况waiting for a volume to be created, either by external provisioner “qgg-nfs-storage” or manually created by system administrator"></a>2.6出现创建pvc后一直等待情况<a href="https://www.cnblogs.com/Applogize/p/15161379.html">waiting for a volume to be created, either by external provisioner “qgg-nfs-storage” or manually created by system administrator</a></h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 修改kube-apiserver.yaml文件</span>参考地址：https<span class="token punctuation">:</span>//www.cnblogs.com/Applogize/p/15161379.html<span class="token punctuation">[</span>root@k8s<span class="token punctuation">-</span>matser01 nfs.rbac<span class="token punctuation">]</span><span class="token comment"># cat /etc/kubernetes/manifests/kube-apiserver.yaml</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token punctuation">---</span><span class="token punctuation">-</span><span class="token punctuation">-</span>    <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>tls<span class="token punctuation">-</span>private<span class="token punctuation">-</span>key<span class="token punctuation">-</span>file=/etc/kubernetes/pki/apiserver.key    <span class="token punctuation">-</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>feature<span class="token punctuation">-</span>gates=RemoveSelfLink=false <span class="token comment"># 添加这个配置</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、案例-搭建redis服务器并挂载）"><a href="#四、案例-搭建redis服务器并挂载）" class="headerlink" title="四、案例(搭建redis服务器并挂载）"></a>四、案例(搭建redis服务器并挂载）</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> PersistentVolumeClaim<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> redis<span class="token punctuation">-</span>pvc  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>    <span class="token key atrule">volume.beta.kubernetes.io/storage-class</span><span class="token punctuation">:</span> <span class="token string">"managed-nfs-storage"</span>   <span class="token comment">#与nfs-StorageClass.yaml metadata.name保持一致</span><span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">accessModes</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> ReadWriteMany  <span class="token key atrule">resources</span><span class="token punctuation">:</span>    <span class="token key atrule">requests</span><span class="token punctuation">:</span>      <span class="token key atrule">storage</span><span class="token punctuation">:</span> 100Mi<span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> devops<span class="token punctuation">-</span>redis   <span class="token key atrule">name</span><span class="token punctuation">:</span> deploy<span class="token punctuation">-</span>devops<span class="token punctuation">-</span>redis<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span>   <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>      <span class="token key atrule">app</span><span class="token punctuation">:</span> devops<span class="token punctuation">-</span>redis  <span class="token key atrule">template</span><span class="token punctuation">:</span>    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>      <span class="token key atrule">labels</span><span class="token punctuation">:</span>        <span class="token key atrule">app</span><span class="token punctuation">:</span> devops<span class="token punctuation">-</span>redis    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> redis<span class="token punctuation">-</span>container          <span class="token key atrule">image</span><span class="token punctuation">:</span> redis          <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> Always          <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> <span class="token string">"/data/redis-data/"</span> <span class="token comment"># 挂载容器里面的目录</span>            <span class="token key atrule">name</span><span class="token punctuation">:</span> redis<span class="token punctuation">-</span>datadir      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> redis<span class="token punctuation">-</span>datadir          <span class="token key atrule">persistentVolumeClaim</span><span class="token punctuation">:</span>            <span class="token key atrule">claimName</span><span class="token punctuation">:</span> redis<span class="token punctuation">-</span>pvc  <span class="token comment"># 挂载k8s的pvc名称</span><span class="token punctuation">---</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> devops<span class="token punctuation">-</span>redis  <span class="token key atrule">name</span><span class="token punctuation">:</span> srv<span class="token punctuation">-</span>devops<span class="token punctuation">-</span>redis<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> NodePort  <span class="token key atrule">ports</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> http    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">6379</span>     <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">6379</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">app</span><span class="token punctuation">:</span> devops<span class="token punctuation">-</span>redis  <span class="token key atrule">sessionAffinity</span><span class="token punctuation">:</span> ClientIP  <span class="token key atrule">sessionAffinityConfig</span><span class="token punctuation">:</span>    <span class="token key atrule">clientIP</span><span class="token punctuation">:</span>      <span class="token key atrule">timeoutSeconds</span><span class="token punctuation">:</span> <span class="token number">10800</span>      <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>article title</title>
      <link href="/article-title.html"/>
      <url>/article-title.html</url>
      
        <content type="html"><![CDATA[<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/hello-world.html"/>
      <url>/hello-world.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
